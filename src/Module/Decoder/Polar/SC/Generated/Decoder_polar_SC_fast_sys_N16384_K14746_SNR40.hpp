#ifndef DECODER_POLAR_SC_FAST_SYS_N16384_K14746_SNR40_HPP_
#define DECODER_POLAR_SC_FAST_SYS_N16384_K14746_SNR40_HPP_

#include <cassert>

#include "../Decoder_polar_SC_fast_sys.hpp"

namespace aff3ct
{
namespace module
{
static const char Frozen_bits_16384_14746_40[16384] = {
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};

template <typename B, typename R, class API_polar>
class Decoder_polar_SC_fast_sys_N16384_K14746_SNR40 : public Decoder_polar_SC_fast_sys<B, R, API_polar>
{
public:
	Decoder_polar_SC_fast_sys_N16384_K14746_SNR40(const int& K, const int& N, const mipp::vector<B>& frozen_bits, const int n_frames = 1)
	: Decoder_polar_SC_fast_sys<B, R, API_polar>(K, N, frozen_bits, n_frames)
	{
		assert(N == 16384);
		assert(K == 14746);
		
		auto i = 0;
		while (i < 16384 && Frozen_bits_16384_14746_40[i] == frozen_bits[i]) i++;
		assert(i == 16384);
	}

	virtual ~Decoder_polar_SC_fast_sys_N16384_K14746_SNR40()
	{
	}

	void decode()
	{
		auto &l = this->l;
		auto &s = this->s;

		API_polar::template f  <8192>(   l,     0+    0,     0+ 8192,                  0+16384, 8192);
		API_polar::template f  <4096>(   l, 16384+    0, 16384+ 4096,              16384+ 8192, 4096);
		API_polar::template f  <2048>(   l, 24576+    0, 24576+ 2048,              24576+ 4096, 2048);
		API_polar::template f  <1024>(   l, 28672+    0, 28672+ 1024,              28672+ 2048, 1024);
		API_polar::template f  < 512>(   l, 30720+    0, 30720+  512,              30720+ 1024,  512);
		API_polar::template f  < 256>(   l, 31744+    0, 31744+  256,              31744+  512,  256);
		API_polar::template rep< 256>(s, l, 32256+    0,                               0+    0,  256);
		API_polar::template gr < 256>(s, l, 31744+    0, 31744+  256,     0+    0, 31744+  512,  256);
		API_polar::template f  < 128>(   l, 32256+    0, 32256+  128,              32256+  256,  128);
		API_polar::template rep< 128>(s, l, 32512+    0,                             256+    0,  128);
		API_polar::template gr < 128>(s, l, 32256+    0, 32256+  128,   256+    0, 32256+  256,  128);
		API_polar::template f  <  64>(   l, 32512+    0, 32512+   64,              32512+  128,   64);
		API_polar::template g0 <  32>(   l, 32640+    0, 32640+   32,              32640+   64,   32);
		API_polar::template g0 <  16>(   l, 32704+    0, 32704+   16,              32704+   32,   16);
		API_polar::template g0 <   8>(   l, 32736+    0, 32736+    8,              32736+   16,    8);
		API_polar::template f  <   4>(   l, 32752+    0, 32752+    4,              32752+    8,    4);
		API_polar::template rep<   4>(s, l, 32760+    0,                             440+    0,    4);
		API_polar::template gr <   4>(s, l, 32752+    0, 32752+    4,   440+    0, 32752+    8,    4);
		API_polar::template spc<   4>(s, l, 32760+    0,                             444+    0,    4);
		API_polar::template xo <   4>(s,      440+    0,   440+    4,                440+    0,    4);
		API_polar::template xo0<   8>(s,      432+    8,                             432+    0,    8);
		API_polar::template xo0<  16>(s,      416+   16,                             416+    0,   16);
		API_polar::template xo0<  32>(s,      384+   32,                             384+    0,   32);
		API_polar::template g  <  64>(s, l, 32512+    0, 32512+   64,   384+    0, 32512+  128,   64);
		API_polar::template f  <  32>(   l, 32640+    0, 32640+   32,              32640+   64,   32);
		API_polar::template g0 <  16>(   l, 32704+    0, 32704+   16,              32704+   32,   16);
		API_polar::template f  <   8>(   l, 32736+    0, 32736+    8,              32736+   16,    8);
		API_polar::template rep<   8>(s, l, 32752+    0,                             464+    0,    8);
		API_polar::template gr <   8>(s, l, 32736+    0, 32736+    8,   464+    0, 32736+   16,    8);
		API_polar::template f  <   4>(   l, 32752+    0, 32752+    4,              32752+    8,    4);
		API_polar::template rep<   4>(s, l, 32760+    0,                             472+    0,    4);
		API_polar::template gr <   4>(s, l, 32752+    0, 32752+    4,   472+    0, 32752+    8,    4);
		API_polar::template spc<   4>(s, l, 32760+    0,                             476+    0,    4);
		API_polar::template xo <   4>(s,      472+    0,   472+    4,                472+    0,    4);
		API_polar::template xo <   8>(s,      464+    0,   464+    8,                464+    0,    8);
		API_polar::template xo0<  16>(s,      448+   16,                             448+    0,   16);
		API_polar::template g  <  32>(s, l, 32640+    0, 32640+   32,   448+    0, 32640+   64,   32);
		API_polar::template f  <  16>(   l, 32704+    0, 32704+   16,              32704+   32,   16);
		API_polar::template f  <   8>(   l, 32736+    0, 32736+    8,              32736+   16,    8);
		API_polar::template rep<   8>(s, l, 32752+    0,                             480+    0,    8);
		API_polar::template gr <   8>(s, l, 32736+    0, 32736+    8,   480+    0, 32736+   16,    8);
		API_polar::template f  <   4>(   l, 32752+    0, 32752+    4,              32752+    8,    4);
		API_polar::template rep<   4>(s, l, 32760+    0,                             488+    0,    4);
		API_polar::template gr <   4>(s, l, 32752+    0, 32752+    4,   488+    0, 32752+    8,    4);
		API_polar::template h  <   4>(s, l, 32760+    0,                             492+    0,    4);
		API_polar::template xo <   4>(s,      488+    0,   488+    4,                488+    0,    4);
		API_polar::template xo <   8>(s,      480+    0,   480+    8,                480+    0,    8);
		API_polar::template g  <  16>(s, l, 32704+    0, 32704+   16,   480+    0, 32704+   32,   16);
		API_polar::template f  <   8>(   l, 32736+    0, 32736+    8,              32736+   16,    8);
		API_polar::template f  <   4>(   l, 32752+    0, 32752+    4,              32752+    8,    4);
		API_polar::template g0 <   2>(   l, 32760+    0, 32760+    2,              32760+    4,    2);
		API_polar::template h  <   2>(s, l, 32764+    0,                             498+    0,    2);
		API_polar::template xo0<   2>(s,      496+    2,                             496+    0,    2);
		API_polar::template g  <   4>(s, l, 32752+    0, 32752+    4,   496+    0, 32752+    8,    4);
		API_polar::template h  <   4>(s, l, 32760+    0,                             500+    0,    4);
		API_polar::template xo <   4>(s,      496+    0,   496+    4,                496+    0,    4);
		API_polar::template g  <   8>(s, l, 32736+    0, 32736+    8,   496+    0, 32736+   16,    8);
		API_polar::template h  <   8>(s, l, 32752+    0,                             504+    0,    8);
		API_polar::template xo <   8>(s,      496+    0,   496+    8,                496+    0,    8);
		API_polar::template xo <  16>(s,      480+    0,   480+   16,                480+    0,   16);
		API_polar::template xo <  32>(s,      448+    0,   448+   32,                448+    0,   32);
		API_polar::template xo <  64>(s,      384+    0,   384+   64,                384+    0,   64);
		API_polar::template xo < 128>(s,      256+    0,   256+  128,                256+    0,  128);
		API_polar::template xo < 256>(s,        0+    0,     0+  256,                  0+    0,  256);
		API_polar::template g  < 512>(s, l, 30720+    0, 30720+  512,     0+    0, 30720+ 1024,  512);
		API_polar::template f  < 256>(   l, 31744+    0, 31744+  256,              31744+  512,  256);
		API_polar::template f  < 128>(   l, 32256+    0, 32256+  128,              32256+  256,  128);
		API_polar::template g0 <  64>(   l, 32512+    0, 32512+   64,              32512+  128,   64);
		API_polar::template g0 <  32>(   l, 32640+    0, 32640+   32,              32640+   64,   32);
		API_polar::template g0 <  16>(   l, 32704+    0, 32704+   16,              32704+   32,   16);
		API_polar::template g0 <   8>(   l, 32736+    0, 32736+    8,              32736+   16,    8);
		API_polar::template f  <   4>(   l, 32752+    0, 32752+    4,              32752+    8,    4);
		API_polar::template rep<   4>(s, l, 32760+    0,                             632+    0,    4);
		API_polar::template gr <   4>(s, l, 32752+    0, 32752+    4,   632+    0, 32752+    8,    4);
		API_polar::template spc<   4>(s, l, 32760+    0,                             636+    0,    4);
		API_polar::template xo <   4>(s,      632+    0,   632+    4,                632+    0,    4);
		API_polar::template xo0<   8>(s,      624+    8,                             624+    0,    8);
		API_polar::template xo0<  16>(s,      608+   16,                             608+    0,   16);
		API_polar::template xo0<  32>(s,      576+   32,                             576+    0,   32);
		API_polar::template xo0<  64>(s,      512+   64,                             512+    0,   64);
		API_polar::template g  < 128>(s, l, 32256+    0, 32256+  128,   512+    0, 32256+  256,  128);
		API_polar::template f  <  64>(   l, 32512+    0, 32512+   64,              32512+  128,   64);
		API_polar::template g0 <  32>(   l, 32640+    0, 32640+   32,              32640+   64,   32);
		API_polar::template f  <  16>(   l, 32704+    0, 32704+   16,              32704+   32,   16);
		API_polar::template rep<  16>(s, l, 32736+    0,                             672+    0,   16);
		API_polar::template gr <  16>(s, l, 32704+    0, 32704+   16,   672+    0, 32704+   32,   16);
		API_polar::template f  <   8>(   l, 32736+    0, 32736+    8,              32736+   16,    8);
		API_polar::template rep<   8>(s, l, 32752+    0,                             688+    0,    8);
		API_polar::template gr <   8>(s, l, 32736+    0, 32736+    8,   688+    0, 32736+   16,    8);
		API_polar::template f  <   4>(   l, 32752+    0, 32752+    4,              32752+    8,    4);
		API_polar::template rep<   4>(s, l, 32760+    0,                             696+    0,    4);
		API_polar::template gr <   4>(s, l, 32752+    0, 32752+    4,   696+    0, 32752+    8,    4);
		API_polar::template spc<   4>(s, l, 32760+    0,                             700+    0,    4);
		API_polar::template xo <   4>(s,      696+    0,   696+    4,                696+    0,    4);
		API_polar::template xo <   8>(s,      688+    0,   688+    8,                688+    0,    8);
		API_polar::template xo <  16>(s,      672+    0,   672+   16,                672+    0,   16);
		API_polar::template xo0<  32>(s,      640+   32,                             640+    0,   32);
		API_polar::template g  <  64>(s, l, 32512+    0, 32512+   64,   640+    0, 32512+  128,   64);
		API_polar::template f  <  32>(   l, 32640+    0, 32640+   32,              32640+   64,   32);
		API_polar::template f  <  16>(   l, 32704+    0, 32704+   16,              32704+   32,   16);
		API_polar::template rep<  16>(s, l, 32736+    0,                             704+    0,   16);
		API_polar::template gr <  16>(s, l, 32704+    0, 32704+   16,   704+    0, 32704+   32,   16);
		API_polar::template f  <   8>(   l, 32736+    0, 32736+    8,              32736+   16,    8);
		API_polar::template g0 <   4>(   l, 32752+    0, 32752+    4,              32752+    8,    4);
		API_polar::template g0 <   2>(   l, 32760+    0, 32760+    2,              32760+    4,    2);
		API_polar::template h  <   2>(s, l, 32764+    0,                             726+    0,    2);
		API_polar::template xo0<   2>(s,      724+    2,                             724+    0,    2);
		API_polar::template xo0<   4>(s,      720+    4,                             720+    0,    4);
		API_polar::template g  <   8>(s, l, 32736+    0, 32736+    8,   720+    0, 32736+   16,    8);
		API_polar::template spc<   8>(s, l, 32752+    0,                             728+    0,    8);
		API_polar::template xo <   8>(s,      720+    0,   720+    8,                720+    0,    8);
		API_polar::template xo <  16>(s,      704+    0,   704+   16,                704+    0,   16);
		API_polar::template g  <  32>(s, l, 32640+    0, 32640+   32,   704+    0, 32640+   64,   32);
		API_polar::template f  <  16>(   l, 32704+    0, 32704+   16,              32704+   32,   16);
		API_polar::template f  <   8>(   l, 32736+    0, 32736+    8,              32736+   16,    8);
		API_polar::template f  <   4>(   l, 32752+    0, 32752+    4,              32752+    8,    4);
		API_polar::template rep<   4>(s, l, 32760+    0,                             736+    0,    4);
		API_polar::template gr <   4>(s, l, 32752+    0, 32752+    4,   736+    0, 32752+    8,    4);
		API_polar::template spc<   4>(s, l, 32760+    0,                             740+    0,    4);
		API_polar::template xo <   4>(s,      736+    0,   736+    4,                736+    0,    4);
		API_polar::template g  <   8>(s, l, 32736+    0, 32736+    8,   736+    0, 32736+   16,    8);
		API_polar::template spc<   8>(s, l, 32752+    0,                             744+    0,    8);
		API_polar::template xo <   8>(s,      736+    0,   736+    8,                736+    0,    8);
		API_polar::template g  <  16>(s, l, 32704+    0, 32704+   16,   736+    0, 32704+   32,   16);
		API_polar::template spc<  16>(s, l, 32736+    0,                             752+    0,   16);
		API_polar::template xo <  16>(s,      736+    0,   736+   16,                736+    0,   16);
		API_polar::template xo <  32>(s,      704+    0,   704+   32,                704+    0,   32);
		API_polar::template xo <  64>(s,      640+    0,   640+   64,                640+    0,   64);
		API_polar::template xo < 128>(s,      512+    0,   512+  128,                512+    0,  128);
		API_polar::template g  < 256>(s, l, 31744+    0, 31744+  256,   512+    0, 31744+  512,  256);
		API_polar::template f  < 128>(   l, 32256+    0, 32256+  128,              32256+  256,  128);
		API_polar::template f  <  64>(   l, 32512+    0, 32512+   64,              32512+  128,   64);
		API_polar::template f  <  32>(   l, 32640+    0, 32640+   32,              32640+   64,   32);
		API_polar::template rep<  32>(s, l, 32704+    0,                             768+    0,   32);
		API_polar::template gr <  32>(s, l, 32640+    0, 32640+   32,   768+    0, 32640+   64,   32);
		API_polar::template f  <  16>(   l, 32704+    0, 32704+   16,              32704+   32,   16);
		API_polar::template rep<  16>(s, l, 32736+    0,                             800+    0,   16);
		API_polar::template gr <  16>(s, l, 32704+    0, 32704+   16,   800+    0, 32704+   32,   16);
		API_polar::template f  <   8>(   l, 32736+    0, 32736+    8,              32736+   16,    8);
		API_polar::template g0 <   4>(   l, 32752+    0, 32752+    4,              32752+    8,    4);
		API_polar::template spc<   4>(s, l, 32760+    0,                             820+    0,    4);
		API_polar::template xo0<   4>(s,      816+    4,                             816+    0,    4);
		API_polar::template g  <   8>(s, l, 32736+    0, 32736+    8,   816+    0, 32736+   16,    8);
		API_polar::template spc<   8>(s, l, 32752+    0,                             824+    0,    8);
		API_polar::template xo <   8>(s,      816+    0,   816+    8,                816+    0,    8);
		API_polar::template xo <  16>(s,      800+    0,   800+   16,                800+    0,   16);
		API_polar::template xo <  32>(s,      768+    0,   768+   32,                768+    0,   32);
		API_polar::template g  <  64>(s, l, 32512+    0, 32512+   64,   768+    0, 32512+  128,   64);
		API_polar::template f  <  32>(   l, 32640+    0, 32640+   32,              32640+   64,   32);
		API_polar::template f  <  16>(   l, 32704+    0, 32704+   16,              32704+   32,   16);
		API_polar::template g0 <   8>(   l, 32736+    0, 32736+    8,              32736+   16,    8);
		API_polar::template f  <   4>(   l, 32752+    0, 32752+    4,              32752+    8,    4);
		API_polar::template rep<   4>(s, l, 32760+    0,                             840+    0,    4);
		API_polar::template gr <   4>(s, l, 32752+    0, 32752+    4,   840+    0, 32752+    8,    4);
		API_polar::template spc<   4>(s, l, 32760+    0,                             844+    0,    4);
		API_polar::template xo <   4>(s,      840+    0,   840+    4,                840+    0,    4);
		API_polar::template xo0<   8>(s,      832+    8,                             832+    0,    8);
		API_polar::template g  <  16>(s, l, 32704+    0, 32704+   16,   832+    0, 32704+   32,   16);
		API_polar::template f  <   8>(   l, 32736+    0, 32736+    8,              32736+   16,    8);
		API_polar::template f  <   4>(   l, 32752+    0, 32752+    4,              32752+    8,    4);
		API_polar::template rep<   4>(s, l, 32760+    0,                             848+    0,    4);
		API_polar::template gr <   4>(s, l, 32752+    0, 32752+    4,   848+    0, 32752+    8,    4);
		API_polar::template spc<   4>(s, l, 32760+    0,                             852+    0,    4);
		API_polar::template xo <   4>(s,      848+    0,   848+    4,                848+    0,    4);
		API_polar::template g  <   8>(s, l, 32736+    0, 32736+    8,   848+    0, 32736+   16,    8);
		API_polar::template spc<   8>(s, l, 32752+    0,                             856+    0,    8);
		API_polar::template xo <   8>(s,      848+    0,   848+    8,                848+    0,    8);
		API_polar::template xo <  16>(s,      832+    0,   832+   16,                832+    0,   16);
		API_polar::template g  <  32>(s, l, 32640+    0, 32640+   32,   832+    0, 32640+   64,   32);
		API_polar::template f  <  16>(   l, 32704+    0, 32704+   16,              32704+   32,   16);
		API_polar::template f  <   8>(   l, 32736+    0, 32736+    8,              32736+   16,    8);
		API_polar::template f  <   4>(   l, 32752+    0, 32752+    4,              32752+    8,    4);
		API_polar::template rep<   4>(s, l, 32760+    0,                             864+    0,    4);
		API_polar::template gr <   4>(s, l, 32752+    0, 32752+    4,   864+    0, 32752+    8,    4);
		API_polar::template spc<   4>(s, l, 32760+    0,                             868+    0,    4);
		API_polar::template xo <   4>(s,      864+    0,   864+    4,                864+    0,    4);
		API_polar::template g  <   8>(s, l, 32736+    0, 32736+    8,   864+    0, 32736+   16,    8);
		API_polar::template spc<   8>(s, l, 32752+    0,                             872+    0,    8);
		API_polar::template xo <   8>(s,      864+    0,   864+    8,                864+    0,    8);
		API_polar::template g  <  16>(s, l, 32704+    0, 32704+   16,   864+    0, 32704+   32,   16);
		API_polar::template h  <  16>(s, l, 32736+    0,                             880+    0,   16);
		API_polar::template xo <  16>(s,      864+    0,   864+   16,                864+    0,   16);
		API_polar::template xo <  32>(s,      832+    0,   832+   32,                832+    0,   32);
		API_polar::template xo <  64>(s,      768+    0,   768+   64,                768+    0,   64);
		API_polar::template g  < 128>(s, l, 32256+    0, 32256+  128,   768+    0, 32256+  256,  128);
		API_polar::template f  <  64>(   l, 32512+    0, 32512+   64,              32512+  128,   64);
		API_polar::template f  <  32>(   l, 32640+    0, 32640+   32,              32640+   64,   32);
		API_polar::template f  <  16>(   l, 32704+    0, 32704+   16,              32704+   32,   16);
		API_polar::template f  <   8>(   l, 32736+    0, 32736+    8,              32736+   16,    8);
		API_polar::template rep<   8>(s, l, 32752+    0,                             896+    0,    8);
		API_polar::template gr <   8>(s, l, 32736+    0, 32736+    8,   896+    0, 32736+   16,    8);
		API_polar::template f  <   4>(   l, 32752+    0, 32752+    4,              32752+    8,    4);
		API_polar::template rep<   4>(s, l, 32760+    0,                             904+    0,    4);
		API_polar::template gr <   4>(s, l, 32752+    0, 32752+    4,   904+    0, 32752+    8,    4);
		API_polar::template spc<   4>(s, l, 32760+    0,                             908+    0,    4);
		API_polar::template xo <   4>(s,      904+    0,   904+    4,                904+    0,    4);
		API_polar::template xo <   8>(s,      896+    0,   896+    8,                896+    0,    8);
		API_polar::template g  <  16>(s, l, 32704+    0, 32704+   16,   896+    0, 32704+   32,   16);
		API_polar::template f  <   8>(   l, 32736+    0, 32736+    8,              32736+   16,    8);
		API_polar::template f  <   4>(   l, 32752+    0, 32752+    4,              32752+    8,    4);
		API_polar::template rep<   4>(s, l, 32760+    0,                             912+    0,    4);
		API_polar::template gr <   4>(s, l, 32752+    0, 32752+    4,   912+    0, 32752+    8,    4);
		API_polar::template spc<   4>(s, l, 32760+    0,                             916+    0,    4);
		API_polar::template xo <   4>(s,      912+    0,   912+    4,                912+    0,    4);
		API_polar::template g  <   8>(s, l, 32736+    0, 32736+    8,   912+    0, 32736+   16,    8);
		API_polar::template h  <   8>(s, l, 32752+    0,                             920+    0,    8);
		API_polar::template xo <   8>(s,      912+    0,   912+    8,                912+    0,    8);
		API_polar::template xo <  16>(s,      896+    0,   896+   16,                896+    0,   16);
		API_polar::template g  <  32>(s, l, 32640+    0, 32640+   32,   896+    0, 32640+   64,   32);
		API_polar::template f  <  16>(   l, 32704+    0, 32704+   16,              32704+   32,   16);
		API_polar::template f  <   8>(   l, 32736+    0, 32736+    8,              32736+   16,    8);
		API_polar::template f  <   4>(   l, 32752+    0, 32752+    4,              32752+    8,    4);
		API_polar::template g0 <   2>(   l, 32760+    0, 32760+    2,              32760+    4,    2);
		API_polar::template h  <   2>(s, l, 32764+    0,                             930+    0,    2);
		API_polar::template xo0<   2>(s,      928+    2,                             928+    0,    2);
		API_polar::template g  <   4>(s, l, 32752+    0, 32752+    4,   928+    0, 32752+    8,    4);
		API_polar::template h  <   4>(s, l, 32760+    0,                             932+    0,    4);
		API_polar::template xo <   4>(s,      928+    0,   928+    4,                928+    0,    4);
		API_polar::template g  <   8>(s, l, 32736+    0, 32736+    8,   928+    0, 32736+   16,    8);
		API_polar::template h  <   8>(s, l, 32752+    0,                             936+    0,    8);
		API_polar::template xo <   8>(s,      928+    0,   928+    8,                928+    0,    8);
		API_polar::template g  <  16>(s, l, 32704+    0, 32704+   16,   928+    0, 32704+   32,   16);
		API_polar::template h  <  16>(s, l, 32736+    0,                             944+    0,   16);
		API_polar::template xo <  16>(s,      928+    0,   928+   16,                928+    0,   16);
		API_polar::template xo <  32>(s,      896+    0,   896+   32,                896+    0,   32);
		API_polar::template g  <  64>(s, l, 32512+    0, 32512+   64,   896+    0, 32512+  128,   64);
		API_polar::template spc<  64>(s, l, 32640+    0,                             960+    0,   64);
		API_polar::template xo <  64>(s,      896+    0,   896+   64,                896+    0,   64);
		API_polar::template xo < 128>(s,      768+    0,   768+  128,                768+    0,  128);
		API_polar::template xo < 256>(s,      512+    0,   512+  256,                512+    0,  256);
		API_polar::template xo < 512>(s,        0+    0,     0+  512,                  0+    0,  512);
		API_polar::template g  <1024>(s, l, 28672+    0, 28672+ 1024,     0+    0, 28672+ 2048, 1024);
		API_polar::template f  < 512>(   l, 30720+    0, 30720+  512,              30720+ 1024,  512);
		API_polar::template f  < 256>(   l, 31744+    0, 31744+  256,              31744+  512,  256);
		API_polar::template f  < 128>(   l, 32256+    0, 32256+  128,              32256+  256,  128);
		API_polar::template g0 <  64>(   l, 32512+    0, 32512+   64,              32512+  128,   64);
		API_polar::template f  <  32>(   l, 32640+    0, 32640+   32,              32640+   64,   32);
		API_polar::template rep<  32>(s, l, 32704+    0,                            1088+    0,   32);
		API_polar::template gr <  32>(s, l, 32640+    0, 32640+   32,  1088+    0, 32640+   64,   32);
		API_polar::template f  <  16>(   l, 32704+    0, 32704+   16,              32704+   32,   16);
		API_polar::template rep<  16>(s, l, 32736+    0,                            1120+    0,   16);
		API_polar::template gr <  16>(s, l, 32704+    0, 32704+   16,  1120+    0, 32704+   32,   16);
		API_polar::template f  <   8>(   l, 32736+    0, 32736+    8,              32736+   16,    8);
		API_polar::template rep<   8>(s, l, 32752+    0,                            1136+    0,    8);
		API_polar::template gr <   8>(s, l, 32736+    0, 32736+    8,  1136+    0, 32736+   16,    8);
		API_polar::template spc<   8>(s, l, 32752+    0,                            1144+    0,    8);
		API_polar::template xo <   8>(s,     1136+    0,  1136+    8,               1136+    0,    8);
		API_polar::template xo <  16>(s,     1120+    0,  1120+   16,               1120+    0,   16);
		API_polar::template xo <  32>(s,     1088+    0,  1088+   32,               1088+    0,   32);
		API_polar::template xo0<  64>(s,     1024+   64,                            1024+    0,   64);
		API_polar::template g  < 128>(s, l, 32256+    0, 32256+  128,  1024+    0, 32256+  256,  128);
		API_polar::template f  <  64>(   l, 32512+    0, 32512+   64,              32512+  128,   64);
		API_polar::template f  <  32>(   l, 32640+    0, 32640+   32,              32640+   64,   32);
		API_polar::template rep<  32>(s, l, 32704+    0,                            1152+    0,   32);
		API_polar::template gr <  32>(s, l, 32640+    0, 32640+   32,  1152+    0, 32640+   64,   32);
		API_polar::template f  <  16>(   l, 32704+    0, 32704+   16,              32704+   32,   16);
		API_polar::template g0 <   8>(   l, 32736+    0, 32736+    8,              32736+   16,    8);
		API_polar::template g0 <   4>(   l, 32752+    0, 32752+    4,              32752+    8,    4);
		API_polar::template spc<   4>(s, l, 32760+    0,                            1196+    0,    4);
		API_polar::template xo0<   4>(s,     1192+    4,                            1192+    0,    4);
		API_polar::template xo0<   8>(s,     1184+    8,                            1184+    0,    8);
		API_polar::template g  <  16>(s, l, 32704+    0, 32704+   16,  1184+    0, 32704+   32,   16);
		API_polar::template f  <   8>(   l, 32736+    0, 32736+    8,              32736+   16,    8);
		API_polar::template f  <   4>(   l, 32752+    0, 32752+    4,              32752+    8,    4);
		API_polar::template rep<   4>(s, l, 32760+    0,                            1200+    0,    4);
		API_polar::template gr <   4>(s, l, 32752+    0, 32752+    4,  1200+    0, 32752+    8,    4);
		API_polar::template spc<   4>(s, l, 32760+    0,                            1204+    0,    4);
		API_polar::template xo <   4>(s,     1200+    0,  1200+    4,               1200+    0,    4);
		API_polar::template g  <   8>(s, l, 32736+    0, 32736+    8,  1200+    0, 32736+   16,    8);
		API_polar::template spc<   8>(s, l, 32752+    0,                            1208+    0,    8);
		API_polar::template xo <   8>(s,     1200+    0,  1200+    8,               1200+    0,    8);
		API_polar::template xo <  16>(s,     1184+    0,  1184+   16,               1184+    0,   16);
		API_polar::template xo <  32>(s,     1152+    0,  1152+   32,               1152+    0,   32);
		API_polar::template g  <  64>(s, l, 32512+    0, 32512+   64,  1152+    0, 32512+  128,   64);
		API_polar::template f  <  32>(   l, 32640+    0, 32640+   32,              32640+   64,   32);
		API_polar::template f  <  16>(   l, 32704+    0, 32704+   16,              32704+   32,   16);
		API_polar::template f  <   8>(   l, 32736+    0, 32736+    8,              32736+   16,    8);
		API_polar::template rep<   8>(s, l, 32752+    0,                            1216+    0,    8);
		API_polar::template gr <   8>(s, l, 32736+    0, 32736+    8,  1216+    0, 32736+   16,    8);
		API_polar::template f  <   4>(   l, 32752+    0, 32752+    4,              32752+    8,    4);
		API_polar::template rep<   4>(s, l, 32760+    0,                            1224+    0,    4);
		API_polar::template gr <   4>(s, l, 32752+    0, 32752+    4,  1224+    0, 32752+    8,    4);
		API_polar::template spc<   4>(s, l, 32760+    0,                            1228+    0,    4);
		API_polar::template xo <   4>(s,     1224+    0,  1224+    4,               1224+    0,    4);
		API_polar::template xo <   8>(s,     1216+    0,  1216+    8,               1216+    0,    8);
		API_polar::template g  <  16>(s, l, 32704+    0, 32704+   16,  1216+    0, 32704+   32,   16);
		API_polar::template f  <   8>(   l, 32736+    0, 32736+    8,              32736+   16,    8);
		API_polar::template f  <   4>(   l, 32752+    0, 32752+    4,              32752+    8,    4);
		API_polar::template rep<   4>(s, l, 32760+    0,                            1232+    0,    4);
		API_polar::template gr <   4>(s, l, 32752+    0, 32752+    4,  1232+    0, 32752+    8,    4);
		API_polar::template spc<   4>(s, l, 32760+    0,                            1236+    0,    4);
		API_polar::template xo <   4>(s,     1232+    0,  1232+    4,               1232+    0,    4);
		API_polar::template g  <   8>(s, l, 32736+    0, 32736+    8,  1232+    0, 32736+   16,    8);
		API_polar::template spc<   8>(s, l, 32752+    0,                            1240+    0,    8);
		API_polar::template xo <   8>(s,     1232+    0,  1232+    8,               1232+    0,    8);
		API_polar::template xo <  16>(s,     1216+    0,  1216+   16,               1216+    0,   16);
		API_polar::template g  <  32>(s, l, 32640+    0, 32640+   32,  1216+    0, 32640+   64,   32);
		API_polar::template f  <  16>(   l, 32704+    0, 32704+   16,              32704+   32,   16);
		API_polar::template f  <   8>(   l, 32736+    0, 32736+    8,              32736+   16,    8);
		API_polar::template f  <   4>(   l, 32752+    0, 32752+    4,              32752+    8,    4);
		API_polar::template rep<   4>(s, l, 32760+    0,                            1248+    0,    4);
		API_polar::template gr <   4>(s, l, 32752+    0, 32752+    4,  1248+    0, 32752+    8,    4);
		API_polar::template h  <   4>(s, l, 32760+    0,                            1252+    0,    4);
		API_polar::template xo <   4>(s,     1248+    0,  1248+    4,               1248+    0,    4);
		API_polar::template g  <   8>(s, l, 32736+    0, 32736+    8,  1248+    0, 32736+   16,    8);
		API_polar::template h  <   8>(s, l, 32752+    0,                            1256+    0,    8);
		API_polar::template xo <   8>(s,     1248+    0,  1248+    8,               1248+    0,    8);
		API_polar::template g  <  16>(s, l, 32704+    0, 32704+   16,  1248+    0, 32704+   32,   16);
		API_polar::template h  <  16>(s, l, 32736+    0,                            1264+    0,   16);
		API_polar::template xo <  16>(s,     1248+    0,  1248+   16,               1248+    0,   16);
		API_polar::template xo <  32>(s,     1216+    0,  1216+   32,               1216+    0,   32);
		API_polar::template xo <  64>(s,     1152+    0,  1152+   64,               1152+    0,   64);
		API_polar::template xo < 128>(s,     1024+    0,  1024+  128,               1024+    0,  128);
		API_polar::template g  < 256>(s, l, 31744+    0, 31744+  256,  1024+    0, 31744+  512,  256);
		API_polar::template f  < 128>(   l, 32256+    0, 32256+  128,              32256+  256,  128);
		API_polar::template f  <  64>(   l, 32512+    0, 32512+   64,              32512+  128,   64);
		API_polar::template f  <  32>(   l, 32640+    0, 32640+   32,              32640+   64,   32);
		API_polar::template g0 <  16>(   l, 32704+    0, 32704+   16,              32704+   32,   16);
		API_polar::template g0 <   8>(   l, 32736+    0, 32736+    8,              32736+   16,    8);
		API_polar::template f  <   4>(   l, 32752+    0, 32752+    4,              32752+    8,    4);
		API_polar::template rep<   4>(s, l, 32760+    0,                            1304+    0,    4);
		API_polar::template gr <   4>(s, l, 32752+    0, 32752+    4,  1304+    0, 32752+    8,    4);
		API_polar::template spc<   4>(s, l, 32760+    0,                            1308+    0,    4);
		API_polar::template xo <   4>(s,     1304+    0,  1304+    4,               1304+    0,    4);
		API_polar::template xo0<   8>(s,     1296+    8,                            1296+    0,    8);
		API_polar::template xo0<  16>(s,     1280+   16,                            1280+    0,   16);
		API_polar::template g  <  32>(s, l, 32640+    0, 32640+   32,  1280+    0, 32640+   64,   32);
		API_polar::template f  <  16>(   l, 32704+    0, 32704+   16,              32704+   32,   16);
		API_polar::template f  <   8>(   l, 32736+    0, 32736+    8,              32736+   16,    8);
		API_polar::template rep<   8>(s, l, 32752+    0,                            1312+    0,    8);
		API_polar::template gr <   8>(s, l, 32736+    0, 32736+    8,  1312+    0, 32736+   16,    8);
		API_polar::template f  <   4>(   l, 32752+    0, 32752+    4,              32752+    8,    4);
		API_polar::template rep<   4>(s, l, 32760+    0,                            1320+    0,    4);
		API_polar::template gr <   4>(s, l, 32752+    0, 32752+    4,  1320+    0, 32752+    8,    4);
		API_polar::template spc<   4>(s, l, 32760+    0,                            1324+    0,    4);
		API_polar::template xo <   4>(s,     1320+    0,  1320+    4,               1320+    0,    4);
		API_polar::template xo <   8>(s,     1312+    0,  1312+    8,               1312+    0,    8);
		API_polar::template g  <  16>(s, l, 32704+    0, 32704+   16,  1312+    0, 32704+   32,   16);
		API_polar::template f  <   8>(   l, 32736+    0, 32736+    8,              32736+   16,    8);
		API_polar::template f  <   4>(   l, 32752+    0, 32752+    4,              32752+    8,    4);
		API_polar::template rep<   4>(s, l, 32760+    0,                            1328+    0,    4);
		API_polar::template gr <   4>(s, l, 32752+    0, 32752+    4,  1328+    0, 32752+    8,    4);
		API_polar::template spc<   4>(s, l, 32760+    0,                            1332+    0,    4);
		API_polar::template xo <   4>(s,     1328+    0,  1328+    4,               1328+    0,    4);
		API_polar::template g  <   8>(s, l, 32736+    0, 32736+    8,  1328+    0, 32736+   16,    8);
		API_polar::template h  <   8>(s, l, 32752+    0,                            1336+    0,    8);
		API_polar::template xo <   8>(s,     1328+    0,  1328+    8,               1328+    0,    8);
		API_polar::template xo <  16>(s,     1312+    0,  1312+   16,               1312+    0,   16);
		API_polar::template xo <  32>(s,     1280+    0,  1280+   32,               1280+    0,   32);
		API_polar::template g  <  64>(s, l, 32512+    0, 32512+   64,  1280+    0, 32512+  128,   64);
		API_polar::template f  <  32>(   l, 32640+    0, 32640+   32,              32640+   64,   32);
		API_polar::template f  <  16>(   l, 32704+    0, 32704+   16,              32704+   32,   16);
		API_polar::template f  <   8>(   l, 32736+    0, 32736+    8,              32736+   16,    8);
		API_polar::template rep<   8>(s, l, 32752+    0,                            1344+    0,    8);
		API_polar::template gr <   8>(s, l, 32736+    0, 32736+    8,  1344+    0, 32736+   16,    8);
		API_polar::template f  <   4>(   l, 32752+    0, 32752+    4,              32752+    8,    4);
		API_polar::template rep<   4>(s, l, 32760+    0,                            1352+    0,    4);
		API_polar::template gr <   4>(s, l, 32752+    0, 32752+    4,  1352+    0, 32752+    8,    4);
		API_polar::template h  <   4>(s, l, 32760+    0,                            1356+    0,    4);
		API_polar::template xo <   4>(s,     1352+    0,  1352+    4,               1352+    0,    4);
		API_polar::template xo <   8>(s,     1344+    0,  1344+    8,               1344+    0,    8);
		API_polar::template g  <  16>(s, l, 32704+    0, 32704+   16,  1344+    0, 32704+   32,   16);
		API_polar::template spc<  16>(s, l, 32736+    0,                            1360+    0,   16);
		API_polar::template xo <  16>(s,     1344+    0,  1344+   16,               1344+    0,   16);
		API_polar::template g  <  32>(s, l, 32640+    0, 32640+   32,  1344+    0, 32640+   64,   32);
		API_polar::template spc<  32>(s, l, 32704+    0,                            1376+    0,   32);
		API_polar::template xo <  32>(s,     1344+    0,  1344+   32,               1344+    0,   32);
		API_polar::template xo <  64>(s,     1280+    0,  1280+   64,               1280+    0,   64);
		API_polar::template g  < 128>(s, l, 32256+    0, 32256+  128,  1280+    0, 32256+  256,  128);
		API_polar::template f  <  64>(   l, 32512+    0, 32512+   64,              32512+  128,   64);
		API_polar::template f  <  32>(   l, 32640+    0, 32640+   32,              32640+   64,   32);
		API_polar::template f  <  16>(   l, 32704+    0, 32704+   16,              32704+   32,   16);
		API_polar::template f  <   8>(   l, 32736+    0, 32736+    8,              32736+   16,    8);
		API_polar::template g0 <   4>(   l, 32752+    0, 32752+    4,              32752+    8,    4);
		API_polar::template g0 <   2>(   l, 32760+    0, 32760+    2,              32760+    4,    2);
		API_polar::template h  <   2>(s, l, 32764+    0,                            1414+    0,    2);
		API_polar::template xo0<   2>(s,     1412+    2,                            1412+    0,    2);
		API_polar::template xo0<   4>(s,     1408+    4,                            1408+    0,    4);
		API_polar::template g  <   8>(s, l, 32736+    0, 32736+    8,  1408+    0, 32736+   16,    8);
		API_polar::template spc<   8>(s, l, 32752+    0,                            1416+    0,    8);
		API_polar::template xo <   8>(s,     1408+    0,  1408+    8,               1408+    0,    8);
		API_polar::template g  <  16>(s, l, 32704+    0, 32704+   16,  1408+    0, 32704+   32,   16);
		API_polar::template spc<  16>(s, l, 32736+    0,                            1424+    0,   16);
		API_polar::template xo <  16>(s,     1408+    0,  1408+   16,               1408+    0,   16);
		API_polar::template g  <  32>(s, l, 32640+    0, 32640+   32,  1408+    0, 32640+   64,   32);
		API_polar::template spc<  32>(s, l, 32704+    0,                            1440+    0,   32);
		API_polar::template xo <  32>(s,     1408+    0,  1408+   32,               1408+    0,   32);
		API_polar::template g  <  64>(s, l, 32512+    0, 32512+   64,  1408+    0, 32512+  128,   64);
		API_polar::template spc<  64>(s, l, 32640+    0,                            1472+    0,   64);
		API_polar::template xo <  64>(s,     1408+    0,  1408+   64,               1408+    0,   64);
		API_polar::template xo < 128>(s,     1280+    0,  1280+  128,               1280+    0,  128);
		API_polar::template xo < 256>(s,     1024+    0,  1024+  256,               1024+    0,  256);
		API_polar::template g  < 512>(s, l, 30720+    0, 30720+  512,  1024+    0, 30720+ 1024,  512);
		API_polar::template f  < 256>(   l, 31744+    0, 31744+  256,              31744+  512,  256);
		API_polar::template f  < 128>(   l, 32256+    0, 32256+  128,              32256+  256,  128);
		API_polar::template f  <  64>(   l, 32512+    0, 32512+   64,              32512+  128,   64);
		API_polar::template f  <  32>(   l, 32640+    0, 32640+   32,              32640+   64,   32);
		API_polar::template f  <  16>(   l, 32704+    0, 32704+   16,              32704+   32,   16);
		API_polar::template rep<  16>(s, l, 32736+    0,                            1536+    0,   16);
		API_polar::template gr <  16>(s, l, 32704+    0, 32704+   16,  1536+    0, 32704+   32,   16);
		API_polar::template f  <   8>(   l, 32736+    0, 32736+    8,              32736+   16,    8);
		API_polar::template rep<   8>(s, l, 32752+    0,                            1552+    0,    8);
		API_polar::template gr <   8>(s, l, 32736+    0, 32736+    8,  1552+    0, 32736+   16,    8);
		API_polar::template f  <   4>(   l, 32752+    0, 32752+    4,              32752+    8,    4);
		API_polar::template rep<   4>(s, l, 32760+    0,                            1560+    0,    4);
		API_polar::template gr <   4>(s, l, 32752+    0, 32752+    4,  1560+    0, 32752+    8,    4);
		API_polar::template spc<   4>(s, l, 32760+    0,                            1564+    0,    4);
		API_polar::template xo <   4>(s,     1560+    0,  1560+    4,               1560+    0,    4);
		API_polar::template xo <   8>(s,     1552+    0,  1552+    8,               1552+    0,    8);
		API_polar::template xo <  16>(s,     1536+    0,  1536+   16,               1536+    0,   16);
		API_polar::template g  <  32>(s, l, 32640+    0, 32640+   32,  1536+    0, 32640+   64,   32);
		API_polar::template f  <  16>(   l, 32704+    0, 32704+   16,              32704+   32,   16);
		API_polar::template f  <   8>(   l, 32736+    0, 32736+    8,              32736+   16,    8);
		API_polar::template rep<   8>(s, l, 32752+    0,                            1568+    0,    8);
		API_polar::template gr <   8>(s, l, 32736+    0, 32736+    8,  1568+    0, 32736+   16,    8);
		API_polar::template spc<   8>(s, l, 32752+    0,                            1576+    0,    8);
		API_polar::template xo <   8>(s,     1568+    0,  1568+    8,               1568+    0,    8);
		API_polar::template g  <  16>(s, l, 32704+    0, 32704+   16,  1568+    0, 32704+   32,   16);
		API_polar::template spc<  16>(s, l, 32736+    0,                            1584+    0,   16);
		API_polar::template xo <  16>(s,     1568+    0,  1568+   16,               1568+    0,   16);
		API_polar::template xo <  32>(s,     1536+    0,  1536+   32,               1536+    0,   32);
		API_polar::template g  <  64>(s, l, 32512+    0, 32512+   64,  1536+    0, 32512+  128,   64);
		API_polar::template f  <  32>(   l, 32640+    0, 32640+   32,              32640+   64,   32);
		API_polar::template f  <  16>(   l, 32704+    0, 32704+   16,              32704+   32,   16);
		API_polar::template f  <   8>(   l, 32736+    0, 32736+    8,              32736+   16,    8);
		API_polar::template g0 <   4>(   l, 32752+    0, 32752+    4,              32752+    8,    4);
		API_polar::template spc<   4>(s, l, 32760+    0,                            1604+    0,    4);
		API_polar::template xo0<   4>(s,     1600+    4,                            1600+    0,    4);
		API_polar::template g  <   8>(s, l, 32736+    0, 32736+    8,  1600+    0, 32736+   16,    8);
		API_polar::template spc<   8>(s, l, 32752+    0,                            1608+    0,    8);
		API_polar::template xo <   8>(s,     1600+    0,  1600+    8,               1600+    0,    8);
		API_polar::template g  <  16>(s, l, 32704+    0, 32704+   16,  1600+    0, 32704+   32,   16);
		API_polar::template spc<  16>(s, l, 32736+    0,                            1616+    0,   16);
		API_polar::template xo <  16>(s,     1600+    0,  1600+   16,               1600+    0,   16);
		API_polar::template g  <  32>(s, l, 32640+    0, 32640+   32,  1600+    0, 32640+   64,   32);
		API_polar::template spc<  32>(s, l, 32704+    0,                            1632+    0,   32);
		API_polar::template xo <  32>(s,     1600+    0,  1600+   32,               1600+    0,   32);
		API_polar::template xo <  64>(s,     1536+    0,  1536+   64,               1536+    0,   64);
		API_polar::template g  < 128>(s, l, 32256+    0, 32256+  128,  1536+    0, 32256+  256,  128);
		API_polar::template f  <  64>(   l, 32512+    0, 32512+   64,              32512+  128,   64);
		API_polar::template f  <  32>(   l, 32640+    0, 32640+   32,              32640+   64,   32);
		API_polar::template f  <  16>(   l, 32704+    0, 32704+   16,              32704+   32,   16);
		API_polar::template f  <   8>(   l, 32736+    0, 32736+    8,              32736+   16,    8);
		API_polar::template f  <   4>(   l, 32752+    0, 32752+    4,              32752+    8,    4);
		API_polar::template rep<   4>(s, l, 32760+    0,                            1664+    0,    4);
		API_polar::template gr <   4>(s, l, 32752+    0, 32752+    4,  1664+    0, 32752+    8,    4);
		API_polar::template spc<   4>(s, l, 32760+    0,                            1668+    0,    4);
		API_polar::template xo <   4>(s,     1664+    0,  1664+    4,               1664+    0,    4);
		API_polar::template g  <   8>(s, l, 32736+    0, 32736+    8,  1664+    0, 32736+   16,    8);
		API_polar::template spc<   8>(s, l, 32752+    0,                            1672+    0,    8);
		API_polar::template xo <   8>(s,     1664+    0,  1664+    8,               1664+    0,    8);
		API_polar::template g  <  16>(s, l, 32704+    0, 32704+   16,  1664+    0, 32704+   32,   16);
		API_polar::template spc<  16>(s, l, 32736+    0,                            1680+    0,   16);
		API_polar::template xo <  16>(s,     1664+    0,  1664+   16,               1664+    0,   16);
		API_polar::template g  <  32>(s, l, 32640+    0, 32640+   32,  1664+    0, 32640+   64,   32);
		API_polar::template h  <  32>(s, l, 32704+    0,                            1696+    0,   32);
		API_polar::template xo <  32>(s,     1664+    0,  1664+   32,               1664+    0,   32);
		API_polar::template g  <  64>(s, l, 32512+    0, 32512+   64,  1664+    0, 32512+  128,   64);
		API_polar::template h  <  64>(s, l, 32640+    0,                            1728+    0,   64);
		API_polar::template xo <  64>(s,     1664+    0,  1664+   64,               1664+    0,   64);
		API_polar::template xo < 128>(s,     1536+    0,  1536+  128,               1536+    0,  128);
		API_polar::template g  < 256>(s, l, 31744+    0, 31744+  256,  1536+    0, 31744+  512,  256);
		API_polar::template f  < 128>(   l, 32256+    0, 32256+  128,              32256+  256,  128);
		API_polar::template f  <  64>(   l, 32512+    0, 32512+   64,              32512+  128,   64);
		API_polar::template f  <  32>(   l, 32640+    0, 32640+   32,              32640+   64,   32);
		API_polar::template f  <  16>(   l, 32704+    0, 32704+   16,              32704+   32,   16);
		API_polar::template f  <   8>(   l, 32736+    0, 32736+    8,              32736+   16,    8);
		API_polar::template f  <   4>(   l, 32752+    0, 32752+    4,              32752+    8,    4);
		API_polar::template rep<   4>(s, l, 32760+    0,                            1792+    0,    4);
		API_polar::template gr <   4>(s, l, 32752+    0, 32752+    4,  1792+    0, 32752+    8,    4);
		API_polar::template spc<   4>(s, l, 32760+    0,                            1796+    0,    4);
		API_polar::template xo <   4>(s,     1792+    0,  1792+    4,               1792+    0,    4);
		API_polar::template g  <   8>(s, l, 32736+    0, 32736+    8,  1792+    0, 32736+   16,    8);
		API_polar::template h  <   8>(s, l, 32752+    0,                            1800+    0,    8);
		API_polar::template xo <   8>(s,     1792+    0,  1792+    8,               1792+    0,    8);
		API_polar::template g  <  16>(s, l, 32704+    0, 32704+   16,  1792+    0, 32704+   32,   16);
		API_polar::template h  <  16>(s, l, 32736+    0,                            1808+    0,   16);
		API_polar::template xo <  16>(s,     1792+    0,  1792+   16,               1792+    0,   16);
		API_polar::template g  <  32>(s, l, 32640+    0, 32640+   32,  1792+    0, 32640+   64,   32);
		API_polar::template h  <  32>(s, l, 32704+    0,                            1824+    0,   32);
		API_polar::template xo <  32>(s,     1792+    0,  1792+   32,               1792+    0,   32);
		API_polar::template g  <  64>(s, l, 32512+    0, 32512+   64,  1792+    0, 32512+  128,   64);
		API_polar::template h  <  64>(s, l, 32640+    0,                            1856+    0,   64);
		API_polar::template xo <  64>(s,     1792+    0,  1792+   64,               1792+    0,   64);
		API_polar::template g  < 128>(s, l, 32256+    0, 32256+  128,  1792+    0, 32256+  256,  128);
		API_polar::template h  < 128>(s, l, 32512+    0,                            1920+    0,  128);
		API_polar::template xo < 128>(s,     1792+    0,  1792+  128,               1792+    0,  128);
		API_polar::template xo < 256>(s,     1536+    0,  1536+  256,               1536+    0,  256);
		API_polar::template xo < 512>(s,     1024+    0,  1024+  512,               1024+    0,  512);
		API_polar::template xo <1024>(s,        0+    0,     0+ 1024,                  0+    0, 1024);
		API_polar::template g  <2048>(s, l, 24576+    0, 24576+ 2048,     0+    0, 24576+ 4096, 2048);
		API_polar::template f  <1024>(   l, 28672+    0, 28672+ 1024,              28672+ 2048, 1024);
		API_polar::template f  < 512>(   l, 30720+    0, 30720+  512,              30720+ 1024,  512);
		API_polar::template f  < 256>(   l, 31744+    0, 31744+  256,              31744+  512,  256);
		API_polar::template f  < 128>(   l, 32256+    0, 32256+  128,              32256+  256,  128);
		API_polar::template f  <  64>(   l, 32512+    0, 32512+   64,              32512+  128,   64);
		API_polar::template rep<  64>(s, l, 32640+    0,                            2048+    0,   64);
		API_polar::template gr <  64>(s, l, 32512+    0, 32512+   64,  2048+    0, 32512+  128,   64);
		API_polar::template f  <  32>(   l, 32640+    0, 32640+   32,              32640+   64,   32);
		API_polar::template g0 <  16>(   l, 32704+    0, 32704+   16,              32704+   32,   16);
		API_polar::template g0 <   8>(   l, 32736+    0, 32736+    8,              32736+   16,    8);
		API_polar::template g0 <   4>(   l, 32752+    0, 32752+    4,              32752+    8,    4);
		API_polar::template spc<   4>(s, l, 32760+    0,                            2140+    0,    4);
		API_polar::template xo0<   4>(s,     2136+    4,                            2136+    0,    4);
		API_polar::template xo0<   8>(s,     2128+    8,                            2128+    0,    8);
		API_polar::template xo0<  16>(s,     2112+   16,                            2112+    0,   16);
		API_polar::template g  <  32>(s, l, 32640+    0, 32640+   32,  2112+    0, 32640+   64,   32);
		API_polar::template f  <  16>(   l, 32704+    0, 32704+   16,              32704+   32,   16);
		API_polar::template f  <   8>(   l, 32736+    0, 32736+    8,              32736+   16,    8);
		API_polar::template rep<   8>(s, l, 32752+    0,                            2144+    0,    8);
		API_polar::template gr <   8>(s, l, 32736+    0, 32736+    8,  2144+    0, 32736+   16,    8);
		API_polar::template f  <   4>(   l, 32752+    0, 32752+    4,              32752+    8,    4);
		API_polar::template rep<   4>(s, l, 32760+    0,                            2152+    0,    4);
		API_polar::template gr <   4>(s, l, 32752+    0, 32752+    4,  2152+    0, 32752+    8,    4);
		API_polar::template spc<   4>(s, l, 32760+    0,                            2156+    0,    4);
		API_polar::template xo <   4>(s,     2152+    0,  2152+    4,               2152+    0,    4);
		API_polar::template xo <   8>(s,     2144+    0,  2144+    8,               2144+    0,    8);
		API_polar::template g  <  16>(s, l, 32704+    0, 32704+   16,  2144+    0, 32704+   32,   16);
		API_polar::template f  <   8>(   l, 32736+    0, 32736+    8,              32736+   16,    8);
		API_polar::template f  <   4>(   l, 32752+    0, 32752+    4,              32752+    8,    4);
		API_polar::template rep<   4>(s, l, 32760+    0,                            2160+    0,    4);
		API_polar::template gr <   4>(s, l, 32752+    0, 32752+    4,  2160+    0, 32752+    8,    4);
		API_polar::template spc<   4>(s, l, 32760+    0,                            2164+    0,    4);
		API_polar::template xo <   4>(s,     2160+    0,  2160+    4,               2160+    0,    4);
		API_polar::template g  <   8>(s, l, 32736+    0, 32736+    8,  2160+    0, 32736+   16,    8);
		API_polar::template h  <   8>(s, l, 32752+    0,                            2168+    0,    8);
		API_polar::template xo <   8>(s,     2160+    0,  2160+    8,               2160+    0,    8);
		API_polar::template xo <  16>(s,     2144+    0,  2144+   16,               2144+    0,   16);
		API_polar::template xo <  32>(s,     2112+    0,  2112+   32,               2112+    0,   32);
		API_polar::template xo <  64>(s,     2048+    0,  2048+   64,               2048+    0,   64);
		API_polar::template g  < 128>(s, l, 32256+    0, 32256+  128,  2048+    0, 32256+  256,  128);
		API_polar::template f  <  64>(   l, 32512+    0, 32512+   64,              32512+  128,   64);
		API_polar::template f  <  32>(   l, 32640+    0, 32640+   32,              32640+   64,   32);
		API_polar::template g0 <  16>(   l, 32704+    0, 32704+   16,              32704+   32,   16);
		API_polar::template f  <   8>(   l, 32736+    0, 32736+    8,              32736+   16,    8);
		API_polar::template rep<   8>(s, l, 32752+    0,                            2192+    0,    8);
		API_polar::template gr <   8>(s, l, 32736+    0, 32736+    8,  2192+    0, 32736+   16,    8);
		API_polar::template f  <   4>(   l, 32752+    0, 32752+    4,              32752+    8,    4);
		API_polar::template rep<   4>(s, l, 32760+    0,                            2200+    0,    4);
		API_polar::template gr <   4>(s, l, 32752+    0, 32752+    4,  2200+    0, 32752+    8,    4);
		API_polar::template spc<   4>(s, l, 32760+    0,                            2204+    0,    4);
		API_polar::template xo <   4>(s,     2200+    0,  2200+    4,               2200+    0,    4);
		API_polar::template xo <   8>(s,     2192+    0,  2192+    8,               2192+    0,    8);
		API_polar::template xo0<  16>(s,     2176+   16,                            2176+    0,   16);
		API_polar::template g  <  32>(s, l, 32640+    0, 32640+   32,  2176+    0, 32640+   64,   32);
		API_polar::template f  <  16>(   l, 32704+    0, 32704+   16,              32704+   32,   16);
		API_polar::template f  <   8>(   l, 32736+    0, 32736+    8,              32736+   16,    8);
		API_polar::template rep<   8>(s, l, 32752+    0,                            2208+    0,    8);
		API_polar::template gr <   8>(s, l, 32736+    0, 32736+    8,  2208+    0, 32736+   16,    8);
		API_polar::template f  <   4>(   l, 32752+    0, 32752+    4,              32752+    8,    4);
		API_polar::template rep<   4>(s, l, 32760+    0,                            2216+    0,    4);
		API_polar::template gr <   4>(s, l, 32752+    0, 32752+    4,  2216+    0, 32752+    8,    4);
		API_polar::template h  <   4>(s, l, 32760+    0,                            2220+    0,    4);
		API_polar::template xo <   4>(s,     2216+    0,  2216+    4,               2216+    0,    4);
		API_polar::template xo <   8>(s,     2208+    0,  2208+    8,               2208+    0,    8);
		API_polar::template g  <  16>(s, l, 32704+    0, 32704+   16,  2208+    0, 32704+   32,   16);
		API_polar::template f  <   8>(   l, 32736+    0, 32736+    8,              32736+   16,    8);
		API_polar::template f  <   4>(   l, 32752+    0, 32752+    4,              32752+    8,    4);
		API_polar::template g0 <   2>(   l, 32760+    0, 32760+    2,              32760+    4,    2);
		API_polar::template h  <   2>(s, l, 32764+    0,                            2226+    0,    2);
		API_polar::template xo0<   2>(s,     2224+    2,                            2224+    0,    2);
		API_polar::template g  <   4>(s, l, 32752+    0, 32752+    4,  2224+    0, 32752+    8,    4);
		API_polar::template h  <   4>(s, l, 32760+    0,                            2228+    0,    4);
		API_polar::template xo <   4>(s,     2224+    0,  2224+    4,               2224+    0,    4);
		API_polar::template g  <   8>(s, l, 32736+    0, 32736+    8,  2224+    0, 32736+   16,    8);
		API_polar::template h  <   8>(s, l, 32752+    0,                            2232+    0,    8);
		API_polar::template xo <   8>(s,     2224+    0,  2224+    8,               2224+    0,    8);
		API_polar::template xo <  16>(s,     2208+    0,  2208+   16,               2208+    0,   16);
		API_polar::template xo <  32>(s,     2176+    0,  2176+   32,               2176+    0,   32);
		API_polar::template g  <  64>(s, l, 32512+    0, 32512+   64,  2176+    0, 32512+  128,   64);
		API_polar::template f  <  32>(   l, 32640+    0, 32640+   32,              32640+   64,   32);
		API_polar::template f  <  16>(   l, 32704+    0, 32704+   16,              32704+   32,   16);
		API_polar::template f  <   8>(   l, 32736+    0, 32736+    8,              32736+   16,    8);
		API_polar::template g0 <   4>(   l, 32752+    0, 32752+    4,              32752+    8,    4);
		API_polar::template g0 <   2>(   l, 32760+    0, 32760+    2,              32760+    4,    2);
		API_polar::template h  <   2>(s, l, 32764+    0,                            2246+    0,    2);
		API_polar::template xo0<   2>(s,     2244+    2,                            2244+    0,    2);
		API_polar::template xo0<   4>(s,     2240+    4,                            2240+    0,    4);
		API_polar::template g  <   8>(s, l, 32736+    0, 32736+    8,  2240+    0, 32736+   16,    8);
		API_polar::template spc<   8>(s, l, 32752+    0,                            2248+    0,    8);
		API_polar::template xo <   8>(s,     2240+    0,  2240+    8,               2240+    0,    8);
		API_polar::template g  <  16>(s, l, 32704+    0, 32704+   16,  2240+    0, 32704+   32,   16);
		API_polar::template spc<  16>(s, l, 32736+    0,                            2256+    0,   16);
		API_polar::template xo <  16>(s,     2240+    0,  2240+   16,               2240+    0,   16);
		API_polar::template g  <  32>(s, l, 32640+    0, 32640+   32,  2240+    0, 32640+   64,   32);
		API_polar::template spc<  32>(s, l, 32704+    0,                            2272+    0,   32);
		API_polar::template xo <  32>(s,     2240+    0,  2240+   32,               2240+    0,   32);
		API_polar::template xo <  64>(s,     2176+    0,  2176+   64,               2176+    0,   64);
		API_polar::template xo < 128>(s,     2048+    0,  2048+  128,               2048+    0,  128);
		API_polar::template g  < 256>(s, l, 31744+    0, 31744+  256,  2048+    0, 31744+  512,  256);
		API_polar::template f  < 128>(   l, 32256+    0, 32256+  128,              32256+  256,  128);
		API_polar::template f  <  64>(   l, 32512+    0, 32512+   64,              32512+  128,   64);
		API_polar::template f  <  32>(   l, 32640+    0, 32640+   32,              32640+   64,   32);
		API_polar::template f  <  16>(   l, 32704+    0, 32704+   16,              32704+   32,   16);
		API_polar::template rep<  16>(s, l, 32736+    0,                            2304+    0,   16);
		API_polar::template gr <  16>(s, l, 32704+    0, 32704+   16,  2304+    0, 32704+   32,   16);
		API_polar::template f  <   8>(   l, 32736+    0, 32736+    8,              32736+   16,    8);
		API_polar::template rep<   8>(s, l, 32752+    0,                            2320+    0,    8);
		API_polar::template gr <   8>(s, l, 32736+    0, 32736+    8,  2320+    0, 32736+   16,    8);
		API_polar::template f  <   4>(   l, 32752+    0, 32752+    4,              32752+    8,    4);
		API_polar::template g0 <   2>(   l, 32760+    0, 32760+    2,              32760+    4,    2);
		API_polar::template h  <   2>(s, l, 32764+    0,                            2330+    0,    2);
		API_polar::template xo0<   2>(s,     2328+    2,                            2328+    0,    2);
		API_polar::template g  <   4>(s, l, 32752+    0, 32752+    4,  2328+    0, 32752+    8,    4);
		API_polar::template h  <   4>(s, l, 32760+    0,                            2332+    0,    4);
		API_polar::template xo <   4>(s,     2328+    0,  2328+    4,               2328+    0,    4);
		API_polar::template xo <   8>(s,     2320+    0,  2320+    8,               2320+    0,    8);
		API_polar::template xo <  16>(s,     2304+    0,  2304+   16,               2304+    0,   16);
		API_polar::template g  <  32>(s, l, 32640+    0, 32640+   32,  2304+    0, 32640+   64,   32);
		API_polar::template f  <  16>(   l, 32704+    0, 32704+   16,              32704+   32,   16);
		API_polar::template f  <   8>(   l, 32736+    0, 32736+    8,              32736+   16,    8);
		API_polar::template g0 <   4>(   l, 32752+    0, 32752+    4,              32752+    8,    4);
		API_polar::template spc<   4>(s, l, 32760+    0,                            2340+    0,    4);
		API_polar::template xo0<   4>(s,     2336+    4,                            2336+    0,    4);
		API_polar::template g  <   8>(s, l, 32736+    0, 32736+    8,  2336+    0, 32736+   16,    8);
		API_polar::template spc<   8>(s, l, 32752+    0,                            2344+    0,    8);
		API_polar::template xo <   8>(s,     2336+    0,  2336+    8,               2336+    0,    8);
		API_polar::template g  <  16>(s, l, 32704+    0, 32704+   16,  2336+    0, 32704+   32,   16);
		API_polar::template spc<  16>(s, l, 32736+    0,                            2352+    0,   16);
		API_polar::template xo <  16>(s,     2336+    0,  2336+   16,               2336+    0,   16);
		API_polar::template xo <  32>(s,     2304+    0,  2304+   32,               2304+    0,   32);
		API_polar::template g  <  64>(s, l, 32512+    0, 32512+   64,  2304+    0, 32512+  128,   64);
		API_polar::template f  <  32>(   l, 32640+    0, 32640+   32,              32640+   64,   32);
		API_polar::template f  <  16>(   l, 32704+    0, 32704+   16,              32704+   32,   16);
		API_polar::template f  <   8>(   l, 32736+    0, 32736+    8,              32736+   16,    8);
		API_polar::template f  <   4>(   l, 32752+    0, 32752+    4,              32752+    8,    4);
		API_polar::template rep<   4>(s, l, 32760+    0,                            2368+    0,    4);
		API_polar::template gr <   4>(s, l, 32752+    0, 32752+    4,  2368+    0, 32752+    8,    4);
		API_polar::template spc<   4>(s, l, 32760+    0,                            2372+    0,    4);
		API_polar::template xo <   4>(s,     2368+    0,  2368+    4,               2368+    0,    4);
		API_polar::template g  <   8>(s, l, 32736+    0, 32736+    8,  2368+    0, 32736+   16,    8);
		API_polar::template spc<   8>(s, l, 32752+    0,                            2376+    0,    8);
		API_polar::template xo <   8>(s,     2368+    0,  2368+    8,               2368+    0,    8);
		API_polar::template g  <  16>(s, l, 32704+    0, 32704+   16,  2368+    0, 32704+   32,   16);
		API_polar::template spc<  16>(s, l, 32736+    0,                            2384+    0,   16);
		API_polar::template xo <  16>(s,     2368+    0,  2368+   16,               2368+    0,   16);
		API_polar::template g  <  32>(s, l, 32640+    0, 32640+   32,  2368+    0, 32640+   64,   32);
		API_polar::template spc<  32>(s, l, 32704+    0,                            2400+    0,   32);
		API_polar::template xo <  32>(s,     2368+    0,  2368+   32,               2368+    0,   32);
		API_polar::template xo <  64>(s,     2304+    0,  2304+   64,               2304+    0,   64);
		API_polar::template g  < 128>(s, l, 32256+    0, 32256+  128,  2304+    0, 32256+  256,  128);
		API_polar::template f  <  64>(   l, 32512+    0, 32512+   64,              32512+  128,   64);
		API_polar::template f  <  32>(   l, 32640+    0, 32640+   32,              32640+   64,   32);
		API_polar::template f  <  16>(   l, 32704+    0, 32704+   16,              32704+   32,   16);
		API_polar::template f  <   8>(   l, 32736+    0, 32736+    8,              32736+   16,    8);
		API_polar::template f  <   4>(   l, 32752+    0, 32752+    4,              32752+    8,    4);
		API_polar::template rep<   4>(s, l, 32760+    0,                            2432+    0,    4);
		API_polar::template gr <   4>(s, l, 32752+    0, 32752+    4,  2432+    0, 32752+    8,    4);
		API_polar::template spc<   4>(s, l, 32760+    0,                            2436+    0,    4);
		API_polar::template xo <   4>(s,     2432+    0,  2432+    4,               2432+    0,    4);
		API_polar::template g  <   8>(s, l, 32736+    0, 32736+    8,  2432+    0, 32736+   16,    8);
		API_polar::template spc<   8>(s, l, 32752+    0,                            2440+    0,    8);
		API_polar::template xo <   8>(s,     2432+    0,  2432+    8,               2432+    0,    8);
		API_polar::template g  <  16>(s, l, 32704+    0, 32704+   16,  2432+    0, 32704+   32,   16);
		API_polar::template h  <  16>(s, l, 32736+    0,                            2448+    0,   16);
		API_polar::template xo <  16>(s,     2432+    0,  2432+   16,               2432+    0,   16);
		API_polar::template g  <  32>(s, l, 32640+    0, 32640+   32,  2432+    0, 32640+   64,   32);
		API_polar::template h  <  32>(s, l, 32704+    0,                            2464+    0,   32);
		API_polar::template xo <  32>(s,     2432+    0,  2432+   32,               2432+    0,   32);
		API_polar::template g  <  64>(s, l, 32512+    0, 32512+   64,  2432+    0, 32512+  128,   64);
		API_polar::template h  <  64>(s, l, 32640+    0,                            2496+    0,   64);
		API_polar::template xo <  64>(s,     2432+    0,  2432+   64,               2432+    0,   64);
		API_polar::template xo < 128>(s,     2304+    0,  2304+  128,               2304+    0,  128);
		API_polar::template xo < 256>(s,     2048+    0,  2048+  256,               2048+    0,  256);
		API_polar::template g  < 512>(s, l, 30720+    0, 30720+  512,  2048+    0, 30720+ 1024,  512);
		API_polar::template f  < 256>(   l, 31744+    0, 31744+  256,              31744+  512,  256);
		API_polar::template f  < 128>(   l, 32256+    0, 32256+  128,              32256+  256,  128);
		API_polar::template f  <  64>(   l, 32512+    0, 32512+   64,              32512+  128,   64);
		API_polar::template f  <  32>(   l, 32640+    0, 32640+   32,              32640+   64,   32);
		API_polar::template f  <  16>(   l, 32704+    0, 32704+   16,              32704+   32,   16);
		API_polar::template g0 <   8>(   l, 32736+    0, 32736+    8,              32736+   16,    8);
		API_polar::template g0 <   4>(   l, 32752+    0, 32752+    4,              32752+    8,    4);
		API_polar::template spc<   4>(s, l, 32760+    0,                            2572+    0,    4);
		API_polar::template xo0<   4>(s,     2568+    4,                            2568+    0,    4);
		API_polar::template xo0<   8>(s,     2560+    8,                            2560+    0,    8);
		API_polar::template g  <  16>(s, l, 32704+    0, 32704+   16,  2560+    0, 32704+   32,   16);
		API_polar::template f  <   8>(   l, 32736+    0, 32736+    8,              32736+   16,    8);
		API_polar::template f  <   4>(   l, 32752+    0, 32752+    4,              32752+    8,    4);
		API_polar::template rep<   4>(s, l, 32760+    0,                            2576+    0,    4);
		API_polar::template gr <   4>(s, l, 32752+    0, 32752+    4,  2576+    0, 32752+    8,    4);
		API_polar::template spc<   4>(s, l, 32760+    0,                            2580+    0,    4);
		API_polar::template xo <   4>(s,     2576+    0,  2576+    4,               2576+    0,    4);
		API_polar::template g  <   8>(s, l, 32736+    0, 32736+    8,  2576+    0, 32736+   16,    8);
		API_polar::template spc<   8>(s, l, 32752+    0,                            2584+    0,    8);
		API_polar::template xo <   8>(s,     2576+    0,  2576+    8,               2576+    0,    8);
		API_polar::template xo <  16>(s,     2560+    0,  2560+   16,               2560+    0,   16);
		API_polar::template g  <  32>(s, l, 32640+    0, 32640+   32,  2560+    0, 32640+   64,   32);
		API_polar::template f  <  16>(   l, 32704+    0, 32704+   16,              32704+   32,   16);
		API_polar::template f  <   8>(   l, 32736+    0, 32736+    8,              32736+   16,    8);
		API_polar::template f  <   4>(   l, 32752+    0, 32752+    4,              32752+    8,    4);
		API_polar::template rep<   4>(s, l, 32760+    0,                            2592+    0,    4);
		API_polar::template gr <   4>(s, l, 32752+    0, 32752+    4,  2592+    0, 32752+    8,    4);
		API_polar::template spc<   4>(s, l, 32760+    0,                            2596+    0,    4);
		API_polar::template xo <   4>(s,     2592+    0,  2592+    4,               2592+    0,    4);
		API_polar::template g  <   8>(s, l, 32736+    0, 32736+    8,  2592+    0, 32736+   16,    8);
		API_polar::template spc<   8>(s, l, 32752+    0,                            2600+    0,    8);
		API_polar::template xo <   8>(s,     2592+    0,  2592+    8,               2592+    0,    8);
		API_polar::template g  <  16>(s, l, 32704+    0, 32704+   16,  2592+    0, 32704+   32,   16);
		API_polar::template spc<  16>(s, l, 32736+    0,                            2608+    0,   16);
		API_polar::template xo <  16>(s,     2592+    0,  2592+   16,               2592+    0,   16);
		API_polar::template xo <  32>(s,     2560+    0,  2560+   32,               2560+    0,   32);
		API_polar::template g  <  64>(s, l, 32512+    0, 32512+   64,  2560+    0, 32512+  128,   64);
		API_polar::template f  <  32>(   l, 32640+    0, 32640+   32,              32640+   64,   32);
		API_polar::template f  <  16>(   l, 32704+    0, 32704+   16,              32704+   32,   16);
		API_polar::template f  <   8>(   l, 32736+    0, 32736+    8,              32736+   16,    8);
		API_polar::template f  <   4>(   l, 32752+    0, 32752+    4,              32752+    8,    4);
		API_polar::template rep<   4>(s, l, 32760+    0,                            2624+    0,    4);
		API_polar::template gr <   4>(s, l, 32752+    0, 32752+    4,  2624+    0, 32752+    8,    4);
		API_polar::template spc<   4>(s, l, 32760+    0,                            2628+    0,    4);
		API_polar::template xo <   4>(s,     2624+    0,  2624+    4,               2624+    0,    4);
		API_polar::template g  <   8>(s, l, 32736+    0, 32736+    8,  2624+    0, 32736+   16,    8);
		API_polar::template h  <   8>(s, l, 32752+    0,                            2632+    0,    8);
		API_polar::template xo <   8>(s,     2624+    0,  2624+    8,               2624+    0,    8);
		API_polar::template g  <  16>(s, l, 32704+    0, 32704+   16,  2624+    0, 32704+   32,   16);
		API_polar::template h  <  16>(s, l, 32736+    0,                            2640+    0,   16);
		API_polar::template xo <  16>(s,     2624+    0,  2624+   16,               2624+    0,   16);
		API_polar::template g  <  32>(s, l, 32640+    0, 32640+   32,  2624+    0, 32640+   64,   32);
		API_polar::template h  <  32>(s, l, 32704+    0,                            2656+    0,   32);
		API_polar::template xo <  32>(s,     2624+    0,  2624+   32,               2624+    0,   32);
		API_polar::template xo <  64>(s,     2560+    0,  2560+   64,               2560+    0,   64);
		API_polar::template g  < 128>(s, l, 32256+    0, 32256+  128,  2560+    0, 32256+  256,  128);
		API_polar::template f  <  64>(   l, 32512+    0, 32512+   64,              32512+  128,   64);
		API_polar::template f  <  32>(   l, 32640+    0, 32640+   32,              32640+   64,   32);
		API_polar::template f  <  16>(   l, 32704+    0, 32704+   16,              32704+   32,   16);
		API_polar::template f  <   8>(   l, 32736+    0, 32736+    8,              32736+   16,    8);
		API_polar::template f  <   4>(   l, 32752+    0, 32752+    4,              32752+    8,    4);
		API_polar::template g0 <   2>(   l, 32760+    0, 32760+    2,              32760+    4,    2);
		API_polar::template h  <   2>(s, l, 32764+    0,                            2690+    0,    2);
		API_polar::template xo0<   2>(s,     2688+    2,                            2688+    0,    2);
		API_polar::template g  <   4>(s, l, 32752+    0, 32752+    4,  2688+    0, 32752+    8,    4);
		API_polar::template h  <   4>(s, l, 32760+    0,                            2692+    0,    4);
		API_polar::template xo <   4>(s,     2688+    0,  2688+    4,               2688+    0,    4);
		API_polar::template g  <   8>(s, l, 32736+    0, 32736+    8,  2688+    0, 32736+   16,    8);
		API_polar::template h  <   8>(s, l, 32752+    0,                            2696+    0,    8);
		API_polar::template xo <   8>(s,     2688+    0,  2688+    8,               2688+    0,    8);
		API_polar::template g  <  16>(s, l, 32704+    0, 32704+   16,  2688+    0, 32704+   32,   16);
		API_polar::template h  <  16>(s, l, 32736+    0,                            2704+    0,   16);
		API_polar::template xo <  16>(s,     2688+    0,  2688+   16,               2688+    0,   16);
		API_polar::template g  <  32>(s, l, 32640+    0, 32640+   32,  2688+    0, 32640+   64,   32);
		API_polar::template h  <  32>(s, l, 32704+    0,                            2720+    0,   32);
		API_polar::template xo <  32>(s,     2688+    0,  2688+   32,               2688+    0,   32);
		API_polar::template g  <  64>(s, l, 32512+    0, 32512+   64,  2688+    0, 32512+  128,   64);
		API_polar::template h  <  64>(s, l, 32640+    0,                            2752+    0,   64);
		API_polar::template xo <  64>(s,     2688+    0,  2688+   64,               2688+    0,   64);
		API_polar::template xo < 128>(s,     2560+    0,  2560+  128,               2560+    0,  128);
		API_polar::template g  < 256>(s, l, 31744+    0, 31744+  256,  2560+    0, 31744+  512,  256);
		API_polar::template spc< 256>(s, l, 32256+    0,                            2816+    0,  256);
		API_polar::template xo < 256>(s,     2560+    0,  2560+  256,               2560+    0,  256);
		API_polar::template xo < 512>(s,     2048+    0,  2048+  512,               2048+    0,  512);
		API_polar::template g  <1024>(s, l, 28672+    0, 28672+ 1024,  2048+    0, 28672+ 2048, 1024);
		API_polar::template f  < 512>(   l, 30720+    0, 30720+  512,              30720+ 1024,  512);
		API_polar::template f  < 256>(   l, 31744+    0, 31744+  256,              31744+  512,  256);
		API_polar::template f  < 128>(   l, 32256+    0, 32256+  128,              32256+  256,  128);
		API_polar::template f  <  64>(   l, 32512+    0, 32512+   64,              32512+  128,   64);
		API_polar::template f  <  32>(   l, 32640+    0, 32640+   32,              32640+   64,   32);
		API_polar::template f  <  16>(   l, 32704+    0, 32704+   16,              32704+   32,   16);
		API_polar::template f  <   8>(   l, 32736+    0, 32736+    8,              32736+   16,    8);
		API_polar::template rep<   8>(s, l, 32752+    0,                            3072+    0,    8);
		API_polar::template gr <   8>(s, l, 32736+    0, 32736+    8,  3072+    0, 32736+   16,    8);
		API_polar::template f  <   4>(   l, 32752+    0, 32752+    4,              32752+    8,    4);
		API_polar::template rep<   4>(s, l, 32760+    0,                            3080+    0,    4);
		API_polar::template gr <   4>(s, l, 32752+    0, 32752+    4,  3080+    0, 32752+    8,    4);
		API_polar::template spc<   4>(s, l, 32760+    0,                            3084+    0,    4);
		API_polar::template xo <   4>(s,     3080+    0,  3080+    4,               3080+    0,    4);
		API_polar::template xo <   8>(s,     3072+    0,  3072+    8,               3072+    0,    8);
		API_polar::template g  <  16>(s, l, 32704+    0, 32704+   16,  3072+    0, 32704+   32,   16);
		API_polar::template f  <   8>(   l, 32736+    0, 32736+    8,              32736+   16,    8);
		API_polar::template f  <   4>(   l, 32752+    0, 32752+    4,              32752+    8,    4);
		API_polar::template rep<   4>(s, l, 32760+    0,                            3088+    0,    4);
		API_polar::template gr <   4>(s, l, 32752+    0, 32752+    4,  3088+    0, 32752+    8,    4);
		API_polar::template spc<   4>(s, l, 32760+    0,                            3092+    0,    4);
		API_polar::template xo <   4>(s,     3088+    0,  3088+    4,               3088+    0,    4);
		API_polar::template g  <   8>(s, l, 32736+    0, 32736+    8,  3088+    0, 32736+   16,    8);
		API_polar::template h  <   8>(s, l, 32752+    0,                            3096+    0,    8);
		API_polar::template xo <   8>(s,     3088+    0,  3088+    8,               3088+    0,    8);
		API_polar::template xo <  16>(s,     3072+    0,  3072+   16,               3072+    0,   16);
		API_polar::template g  <  32>(s, l, 32640+    0, 32640+   32,  3072+    0, 32640+   64,   32);
		API_polar::template f  <  16>(   l, 32704+    0, 32704+   16,              32704+   32,   16);
		API_polar::template f  <   8>(   l, 32736+    0, 32736+    8,              32736+   16,    8);
		API_polar::template f  <   4>(   l, 32752+    0, 32752+    4,              32752+    8,    4);
		API_polar::template rep<   4>(s, l, 32760+    0,                            3104+    0,    4);
		API_polar::template gr <   4>(s, l, 32752+    0, 32752+    4,  3104+    0, 32752+    8,    4);
		API_polar::template h  <   4>(s, l, 32760+    0,                            3108+    0,    4);
		API_polar::template xo <   4>(s,     3104+    0,  3104+    4,               3104+    0,    4);
		API_polar::template g  <   8>(s, l, 32736+    0, 32736+    8,  3104+    0, 32736+   16,    8);
		API_polar::template h  <   8>(s, l, 32752+    0,                            3112+    0,    8);
		API_polar::template xo <   8>(s,     3104+    0,  3104+    8,               3104+    0,    8);
		API_polar::template g  <  16>(s, l, 32704+    0, 32704+   16,  3104+    0, 32704+   32,   16);
		API_polar::template h  <  16>(s, l, 32736+    0,                            3120+    0,   16);
		API_polar::template xo <  16>(s,     3104+    0,  3104+   16,               3104+    0,   16);
		API_polar::template xo <  32>(s,     3072+    0,  3072+   32,               3072+    0,   32);
		API_polar::template g  <  64>(s, l, 32512+    0, 32512+   64,  3072+    0, 32512+  128,   64);
		API_polar::template spc<  64>(s, l, 32640+    0,                            3136+    0,   64);
		API_polar::template xo <  64>(s,     3072+    0,  3072+   64,               3072+    0,   64);
		API_polar::template g  < 128>(s, l, 32256+    0, 32256+  128,  3072+    0, 32256+  256,  128);
		API_polar::template spc< 128>(s, l, 32512+    0,                            3200+    0,  128);
		API_polar::template xo < 128>(s,     3072+    0,  3072+  128,               3072+    0,  128);
		API_polar::template g  < 256>(s, l, 31744+    0, 31744+  256,  3072+    0, 31744+  512,  256);
		API_polar::template spc< 256>(s, l, 32256+    0,                            3328+    0,  256);
		API_polar::template xo < 256>(s,     3072+    0,  3072+  256,               3072+    0,  256);
		API_polar::template g  < 512>(s, l, 30720+    0, 30720+  512,  3072+    0, 30720+ 1024,  512);
		API_polar::template spc< 512>(s, l, 31744+    0,                            3584+    0,  512);
		API_polar::template xo < 512>(s,     3072+    0,  3072+  512,               3072+    0,  512);
		API_polar::template xo <1024>(s,     2048+    0,  2048+ 1024,               2048+    0, 1024);
		API_polar::template xo <2048>(s,        0+    0,     0+ 2048,                  0+    0, 2048);
		API_polar::template g  <4096>(s, l, 16384+    0, 16384+ 4096,     0+    0, 16384+ 8192, 4096);
		API_polar::template f  <2048>(   l, 24576+    0, 24576+ 2048,              24576+ 4096, 2048);
		API_polar::template f  <1024>(   l, 28672+    0, 28672+ 1024,              28672+ 2048, 1024);
		API_polar::template f  < 512>(   l, 30720+    0, 30720+  512,              30720+ 1024,  512);
		API_polar::template f  < 256>(   l, 31744+    0, 31744+  256,              31744+  512,  256);
		API_polar::template f  < 128>(   l, 32256+    0, 32256+  128,              32256+  256,  128);
		API_polar::template f  <  64>(   l, 32512+    0, 32512+   64,              32512+  128,   64);
		API_polar::template g0 <  32>(   l, 32640+    0, 32640+   32,              32640+   64,   32);
		API_polar::template f  <  16>(   l, 32704+    0, 32704+   16,              32704+   32,   16);
		API_polar::template rep<  16>(s, l, 32736+    0,                            4128+    0,   16);
		API_polar::template gr <  16>(s, l, 32704+    0, 32704+   16,  4128+    0, 32704+   32,   16);
		API_polar::template f  <   8>(   l, 32736+    0, 32736+    8,              32736+   16,    8);
		API_polar::template rep<   8>(s, l, 32752+    0,                            4144+    0,    8);
		API_polar::template gr <   8>(s, l, 32736+    0, 32736+    8,  4144+    0, 32736+   16,    8);
		API_polar::template f  <   4>(   l, 32752+    0, 32752+    4,              32752+    8,    4);
		API_polar::template rep<   4>(s, l, 32760+    0,                            4152+    0,    4);
		API_polar::template gr <   4>(s, l, 32752+    0, 32752+    4,  4152+    0, 32752+    8,    4);
		API_polar::template spc<   4>(s, l, 32760+    0,                            4156+    0,    4);
		API_polar::template xo <   4>(s,     4152+    0,  4152+    4,               4152+    0,    4);
		API_polar::template xo <   8>(s,     4144+    0,  4144+    8,               4144+    0,    8);
		API_polar::template xo <  16>(s,     4128+    0,  4128+   16,               4128+    0,   16);
		API_polar::template xo0<  32>(s,     4096+   32,                            4096+    0,   32);
		API_polar::template g  <  64>(s, l, 32512+    0, 32512+   64,  4096+    0, 32512+  128,   64);
		API_polar::template f  <  32>(   l, 32640+    0, 32640+   32,              32640+   64,   32);
		API_polar::template f  <  16>(   l, 32704+    0, 32704+   16,              32704+   32,   16);
		API_polar::template rep<  16>(s, l, 32736+    0,                            4160+    0,   16);
		API_polar::template gr <  16>(s, l, 32704+    0, 32704+   16,  4160+    0, 32704+   32,   16);
		API_polar::template f  <   8>(   l, 32736+    0, 32736+    8,              32736+   16,    8);
		API_polar::template rep<   8>(s, l, 32752+    0,                            4176+    0,    8);
		API_polar::template gr <   8>(s, l, 32736+    0, 32736+    8,  4176+    0, 32736+   16,    8);
		API_polar::template f  <   4>(   l, 32752+    0, 32752+    4,              32752+    8,    4);
		API_polar::template g0 <   2>(   l, 32760+    0, 32760+    2,              32760+    4,    2);
		API_polar::template h  <   2>(s, l, 32764+    0,                            4186+    0,    2);
		API_polar::template xo0<   2>(s,     4184+    2,                            4184+    0,    2);
		API_polar::template g  <   4>(s, l, 32752+    0, 32752+    4,  4184+    0, 32752+    8,    4);
		API_polar::template h  <   4>(s, l, 32760+    0,                            4188+    0,    4);
		API_polar::template xo <   4>(s,     4184+    0,  4184+    4,               4184+    0,    4);
		API_polar::template xo <   8>(s,     4176+    0,  4176+    8,               4176+    0,    8);
		API_polar::template xo <  16>(s,     4160+    0,  4160+   16,               4160+    0,   16);
		API_polar::template g  <  32>(s, l, 32640+    0, 32640+   32,  4160+    0, 32640+   64,   32);
		API_polar::template f  <  16>(   l, 32704+    0, 32704+   16,              32704+   32,   16);
		API_polar::template f  <   8>(   l, 32736+    0, 32736+    8,              32736+   16,    8);
		API_polar::template g0 <   4>(   l, 32752+    0, 32752+    4,              32752+    8,    4);
		API_polar::template spc<   4>(s, l, 32760+    0,                            4196+    0,    4);
		API_polar::template xo0<   4>(s,     4192+    4,                            4192+    0,    4);
		API_polar::template g  <   8>(s, l, 32736+    0, 32736+    8,  4192+    0, 32736+   16,    8);
		API_polar::template spc<   8>(s, l, 32752+    0,                            4200+    0,    8);
		API_polar::template xo <   8>(s,     4192+    0,  4192+    8,               4192+    0,    8);
		API_polar::template g  <  16>(s, l, 32704+    0, 32704+   16,  4192+    0, 32704+   32,   16);
		API_polar::template spc<  16>(s, l, 32736+    0,                            4208+    0,   16);
		API_polar::template xo <  16>(s,     4192+    0,  4192+   16,               4192+    0,   16);
		API_polar::template xo <  32>(s,     4160+    0,  4160+   32,               4160+    0,   32);
		API_polar::template xo <  64>(s,     4096+    0,  4096+   64,               4096+    0,   64);
		API_polar::template g  < 128>(s, l, 32256+    0, 32256+  128,  4096+    0, 32256+  256,  128);
		API_polar::template f  <  64>(   l, 32512+    0, 32512+   64,              32512+  128,   64);
		API_polar::template f  <  32>(   l, 32640+    0, 32640+   32,              32640+   64,   32);
		API_polar::template f  <  16>(   l, 32704+    0, 32704+   16,              32704+   32,   16);
		API_polar::template g0 <   8>(   l, 32736+    0, 32736+    8,              32736+   16,    8);
		API_polar::template g0 <   4>(   l, 32752+    0, 32752+    4,              32752+    8,    4);
		API_polar::template g0 <   2>(   l, 32760+    0, 32760+    2,              32760+    4,    2);
		API_polar::template h  <   2>(s, l, 32764+    0,                            4238+    0,    2);
		API_polar::template xo0<   2>(s,     4236+    2,                            4236+    0,    2);
		API_polar::template xo0<   4>(s,     4232+    4,                            4232+    0,    4);
		API_polar::template xo0<   8>(s,     4224+    8,                            4224+    0,    8);
		API_polar::template g  <  16>(s, l, 32704+    0, 32704+   16,  4224+    0, 32704+   32,   16);
		API_polar::template f  <   8>(   l, 32736+    0, 32736+    8,              32736+   16,    8);
		API_polar::template g0 <   4>(   l, 32752+    0, 32752+    4,              32752+    8,    4);
		API_polar::template spc<   4>(s, l, 32760+    0,                            4244+    0,    4);
		API_polar::template xo0<   4>(s,     4240+    4,                            4240+    0,    4);
		API_polar::template g  <   8>(s, l, 32736+    0, 32736+    8,  4240+    0, 32736+   16,    8);
		API_polar::template spc<   8>(s, l, 32752+    0,                            4248+    0,    8);
		API_polar::template xo <   8>(s,     4240+    0,  4240+    8,               4240+    0,    8);
		API_polar::template xo <  16>(s,     4224+    0,  4224+   16,               4224+    0,   16);
		API_polar::template g  <  32>(s, l, 32640+    0, 32640+   32,  4224+    0, 32640+   64,   32);
		API_polar::template f  <  16>(   l, 32704+    0, 32704+   16,              32704+   32,   16);
		API_polar::template f  <   8>(   l, 32736+    0, 32736+    8,              32736+   16,    8);
		API_polar::template f  <   4>(   l, 32752+    0, 32752+    4,              32752+    8,    4);
		API_polar::template rep<   4>(s, l, 32760+    0,                            4256+    0,    4);
		API_polar::template gr <   4>(s, l, 32752+    0, 32752+    4,  4256+    0, 32752+    8,    4);
		API_polar::template spc<   4>(s, l, 32760+    0,                            4260+    0,    4);
		API_polar::template xo <   4>(s,     4256+    0,  4256+    4,               4256+    0,    4);
		API_polar::template g  <   8>(s, l, 32736+    0, 32736+    8,  4256+    0, 32736+   16,    8);
		API_polar::template spc<   8>(s, l, 32752+    0,                            4264+    0,    8);
		API_polar::template xo <   8>(s,     4256+    0,  4256+    8,               4256+    0,    8);
		API_polar::template g  <  16>(s, l, 32704+    0, 32704+   16,  4256+    0, 32704+   32,   16);
		API_polar::template spc<  16>(s, l, 32736+    0,                            4272+    0,   16);
		API_polar::template xo <  16>(s,     4256+    0,  4256+   16,               4256+    0,   16);
		API_polar::template xo <  32>(s,     4224+    0,  4224+   32,               4224+    0,   32);
		API_polar::template g  <  64>(s, l, 32512+    0, 32512+   64,  4224+    0, 32512+  128,   64);
		API_polar::template f  <  32>(   l, 32640+    0, 32640+   32,              32640+   64,   32);
		API_polar::template f  <  16>(   l, 32704+    0, 32704+   16,              32704+   32,   16);
		API_polar::template f  <   8>(   l, 32736+    0, 32736+    8,              32736+   16,    8);
		API_polar::template f  <   4>(   l, 32752+    0, 32752+    4,              32752+    8,    4);
		API_polar::template rep<   4>(s, l, 32760+    0,                            4288+    0,    4);
		API_polar::template gr <   4>(s, l, 32752+    0, 32752+    4,  4288+    0, 32752+    8,    4);
		API_polar::template spc<   4>(s, l, 32760+    0,                            4292+    0,    4);
		API_polar::template xo <   4>(s,     4288+    0,  4288+    4,               4288+    0,    4);
		API_polar::template g  <   8>(s, l, 32736+    0, 32736+    8,  4288+    0, 32736+   16,    8);
		API_polar::template spc<   8>(s, l, 32752+    0,                            4296+    0,    8);
		API_polar::template xo <   8>(s,     4288+    0,  4288+    8,               4288+    0,    8);
		API_polar::template g  <  16>(s, l, 32704+    0, 32704+   16,  4288+    0, 32704+   32,   16);
		API_polar::template h  <  16>(s, l, 32736+    0,                            4304+    0,   16);
		API_polar::template xo <  16>(s,     4288+    0,  4288+   16,               4288+    0,   16);
		API_polar::template g  <  32>(s, l, 32640+    0, 32640+   32,  4288+    0, 32640+   64,   32);
		API_polar::template h  <  32>(s, l, 32704+    0,                            4320+    0,   32);
		API_polar::template xo <  32>(s,     4288+    0,  4288+   32,               4288+    0,   32);
		API_polar::template xo <  64>(s,     4224+    0,  4224+   64,               4224+    0,   64);
		API_polar::template xo < 128>(s,     4096+    0,  4096+  128,               4096+    0,  128);
		API_polar::template g  < 256>(s, l, 31744+    0, 31744+  256,  4096+    0, 31744+  512,  256);
		API_polar::template f  < 128>(   l, 32256+    0, 32256+  128,              32256+  256,  128);
		API_polar::template f  <  64>(   l, 32512+    0, 32512+   64,              32512+  128,   64);
		API_polar::template f  <  32>(   l, 32640+    0, 32640+   32,              32640+   64,   32);
		API_polar::template f  <  16>(   l, 32704+    0, 32704+   16,              32704+   32,   16);
		API_polar::template g0 <   8>(   l, 32736+    0, 32736+    8,              32736+   16,    8);
		API_polar::template f  <   4>(   l, 32752+    0, 32752+    4,              32752+    8,    4);
		API_polar::template rep<   4>(s, l, 32760+    0,                            4360+    0,    4);
		API_polar::template gr <   4>(s, l, 32752+    0, 32752+    4,  4360+    0, 32752+    8,    4);
		API_polar::template spc<   4>(s, l, 32760+    0,                            4364+    0,    4);
		API_polar::template xo <   4>(s,     4360+    0,  4360+    4,               4360+    0,    4);
		API_polar::template xo0<   8>(s,     4352+    8,                            4352+    0,    8);
		API_polar::template g  <  16>(s, l, 32704+    0, 32704+   16,  4352+    0, 32704+   32,   16);
		API_polar::template f  <   8>(   l, 32736+    0, 32736+    8,              32736+   16,    8);
		API_polar::template f  <   4>(   l, 32752+    0, 32752+    4,              32752+    8,    4);
		API_polar::template rep<   4>(s, l, 32760+    0,                            4368+    0,    4);
		API_polar::template gr <   4>(s, l, 32752+    0, 32752+    4,  4368+    0, 32752+    8,    4);
		API_polar::template spc<   4>(s, l, 32760+    0,                            4372+    0,    4);
		API_polar::template xo <   4>(s,     4368+    0,  4368+    4,               4368+    0,    4);
		API_polar::template g  <   8>(s, l, 32736+    0, 32736+    8,  4368+    0, 32736+   16,    8);
		API_polar::template spc<   8>(s, l, 32752+    0,                            4376+    0,    8);
		API_polar::template xo <   8>(s,     4368+    0,  4368+    8,               4368+    0,    8);
		API_polar::template xo <  16>(s,     4352+    0,  4352+   16,               4352+    0,   16);
		API_polar::template g  <  32>(s, l, 32640+    0, 32640+   32,  4352+    0, 32640+   64,   32);
		API_polar::template f  <  16>(   l, 32704+    0, 32704+   16,              32704+   32,   16);
		API_polar::template f  <   8>(   l, 32736+    0, 32736+    8,              32736+   16,    8);
		API_polar::template f  <   4>(   l, 32752+    0, 32752+    4,              32752+    8,    4);
		API_polar::template rep<   4>(s, l, 32760+    0,                            4384+    0,    4);
		API_polar::template gr <   4>(s, l, 32752+    0, 32752+    4,  4384+    0, 32752+    8,    4);
		API_polar::template spc<   4>(s, l, 32760+    0,                            4388+    0,    4);
		API_polar::template xo <   4>(s,     4384+    0,  4384+    4,               4384+    0,    4);
		API_polar::template g  <   8>(s, l, 32736+    0, 32736+    8,  4384+    0, 32736+   16,    8);
		API_polar::template h  <   8>(s, l, 32752+    0,                            4392+    0,    8);
		API_polar::template xo <   8>(s,     4384+    0,  4384+    8,               4384+    0,    8);
		API_polar::template g  <  16>(s, l, 32704+    0, 32704+   16,  4384+    0, 32704+   32,   16);
		API_polar::template h  <  16>(s, l, 32736+    0,                            4400+    0,   16);
		API_polar::template xo <  16>(s,     4384+    0,  4384+   16,               4384+    0,   16);
		API_polar::template xo <  32>(s,     4352+    0,  4352+   32,               4352+    0,   32);
		API_polar::template g  <  64>(s, l, 32512+    0, 32512+   64,  4352+    0, 32512+  128,   64);
		API_polar::template f  <  32>(   l, 32640+    0, 32640+   32,              32640+   64,   32);
		API_polar::template f  <  16>(   l, 32704+    0, 32704+   16,              32704+   32,   16);
		API_polar::template f  <   8>(   l, 32736+    0, 32736+    8,              32736+   16,    8);
		API_polar::template f  <   4>(   l, 32752+    0, 32752+    4,              32752+    8,    4);
		API_polar::template g0 <   2>(   l, 32760+    0, 32760+    2,              32760+    4,    2);
		API_polar::template h  <   2>(s, l, 32764+    0,                            4418+    0,    2);
		API_polar::template xo0<   2>(s,     4416+    2,                            4416+    0,    2);
		API_polar::template g  <   4>(s, l, 32752+    0, 32752+    4,  4416+    0, 32752+    8,    4);
		API_polar::template h  <   4>(s, l, 32760+    0,                            4420+    0,    4);
		API_polar::template xo <   4>(s,     4416+    0,  4416+    4,               4416+    0,    4);
		API_polar::template g  <   8>(s, l, 32736+    0, 32736+    8,  4416+    0, 32736+   16,    8);
		API_polar::template h  <   8>(s, l, 32752+    0,                            4424+    0,    8);
		API_polar::template xo <   8>(s,     4416+    0,  4416+    8,               4416+    0,    8);
		API_polar::template g  <  16>(s, l, 32704+    0, 32704+   16,  4416+    0, 32704+   32,   16);
		API_polar::template h  <  16>(s, l, 32736+    0,                            4432+    0,   16);
		API_polar::template xo <  16>(s,     4416+    0,  4416+   16,               4416+    0,   16);
		API_polar::template g  <  32>(s, l, 32640+    0, 32640+   32,  4416+    0, 32640+   64,   32);
		API_polar::template h  <  32>(s, l, 32704+    0,                            4448+    0,   32);
		API_polar::template xo <  32>(s,     4416+    0,  4416+   32,               4416+    0,   32);
		API_polar::template xo <  64>(s,     4352+    0,  4352+   64,               4352+    0,   64);
		API_polar::template g  < 128>(s, l, 32256+    0, 32256+  128,  4352+    0, 32256+  256,  128);
		API_polar::template spc< 128>(s, l, 32512+    0,                            4480+    0,  128);
		API_polar::template xo < 128>(s,     4352+    0,  4352+  128,               4352+    0,  128);
		API_polar::template xo < 256>(s,     4096+    0,  4096+  256,               4096+    0,  256);
		API_polar::template g  < 512>(s, l, 30720+    0, 30720+  512,  4096+    0, 30720+ 1024,  512);
		API_polar::template f  < 256>(   l, 31744+    0, 31744+  256,              31744+  512,  256);
		API_polar::template f  < 128>(   l, 32256+    0, 32256+  128,              32256+  256,  128);
		API_polar::template f  <  64>(   l, 32512+    0, 32512+   64,              32512+  128,   64);
		API_polar::template f  <  32>(   l, 32640+    0, 32640+   32,              32640+   64,   32);
		API_polar::template f  <  16>(   l, 32704+    0, 32704+   16,              32704+   32,   16);
		API_polar::template f  <   8>(   l, 32736+    0, 32736+    8,              32736+   16,    8);
		API_polar::template rep<   8>(s, l, 32752+    0,                            4608+    0,    8);
		API_polar::template gr <   8>(s, l, 32736+    0, 32736+    8,  4608+    0, 32736+   16,    8);
		API_polar::template f  <   4>(   l, 32752+    0, 32752+    4,              32752+    8,    4);
		API_polar::template rep<   4>(s, l, 32760+    0,                            4616+    0,    4);
		API_polar::template gr <   4>(s, l, 32752+    0, 32752+    4,  4616+    0, 32752+    8,    4);
		API_polar::template spc<   4>(s, l, 32760+    0,                            4620+    0,    4);
		API_polar::template xo <   4>(s,     4616+    0,  4616+    4,               4616+    0,    4);
		API_polar::template xo <   8>(s,     4608+    0,  4608+    8,               4608+    0,    8);
		API_polar::template g  <  16>(s, l, 32704+    0, 32704+   16,  4608+    0, 32704+   32,   16);
		API_polar::template f  <   8>(   l, 32736+    0, 32736+    8,              32736+   16,    8);
		API_polar::template f  <   4>(   l, 32752+    0, 32752+    4,              32752+    8,    4);
		API_polar::template rep<   4>(s, l, 32760+    0,                            4624+    0,    4);
		API_polar::template gr <   4>(s, l, 32752+    0, 32752+    4,  4624+    0, 32752+    8,    4);
		API_polar::template h  <   4>(s, l, 32760+    0,                            4628+    0,    4);
		API_polar::template xo <   4>(s,     4624+    0,  4624+    4,               4624+    0,    4);
		API_polar::template g  <   8>(s, l, 32736+    0, 32736+    8,  4624+    0, 32736+   16,    8);
		API_polar::template h  <   8>(s, l, 32752+    0,                            4632+    0,    8);
		API_polar::template xo <   8>(s,     4624+    0,  4624+    8,               4624+    0,    8);
		API_polar::template xo <  16>(s,     4608+    0,  4608+   16,               4608+    0,   16);
		API_polar::template g  <  32>(s, l, 32640+    0, 32640+   32,  4608+    0, 32640+   64,   32);
		API_polar::template spc<  32>(s, l, 32704+    0,                            4640+    0,   32);
		API_polar::template xo <  32>(s,     4608+    0,  4608+   32,               4608+    0,   32);
		API_polar::template g  <  64>(s, l, 32512+    0, 32512+   64,  4608+    0, 32512+  128,   64);
		API_polar::template spc<  64>(s, l, 32640+    0,                            4672+    0,   64);
		API_polar::template xo <  64>(s,     4608+    0,  4608+   64,               4608+    0,   64);
		API_polar::template g  < 128>(s, l, 32256+    0, 32256+  128,  4608+    0, 32256+  256,  128);
		API_polar::template spc< 128>(s, l, 32512+    0,                            4736+    0,  128);
		API_polar::template xo < 128>(s,     4608+    0,  4608+  128,               4608+    0,  128);
		API_polar::template g  < 256>(s, l, 31744+    0, 31744+  256,  4608+    0, 31744+  512,  256);
		API_polar::template spc< 256>(s, l, 32256+    0,                            4864+    0,  256);
		API_polar::template xo < 256>(s,     4608+    0,  4608+  256,               4608+    0,  256);
		API_polar::template xo < 512>(s,     4096+    0,  4096+  512,               4096+    0,  512);
		API_polar::template g  <1024>(s, l, 28672+    0, 28672+ 1024,  4096+    0, 28672+ 2048, 1024);
		API_polar::template f  < 512>(   l, 30720+    0, 30720+  512,              30720+ 1024,  512);
		API_polar::template f  < 256>(   l, 31744+    0, 31744+  256,              31744+  512,  256);
		API_polar::template f  < 128>(   l, 32256+    0, 32256+  128,              32256+  256,  128);
		API_polar::template f  <  64>(   l, 32512+    0, 32512+   64,              32512+  128,   64);
		API_polar::template f  <  32>(   l, 32640+    0, 32640+   32,              32640+   64,   32);
		API_polar::template f  <  16>(   l, 32704+    0, 32704+   16,              32704+   32,   16);
		API_polar::template f  <   8>(   l, 32736+    0, 32736+    8,              32736+   16,    8);
		API_polar::template g0 <   4>(   l, 32752+    0, 32752+    4,              32752+    8,    4);
		API_polar::template g0 <   2>(   l, 32760+    0, 32760+    2,              32760+    4,    2);
		API_polar::template h  <   2>(s, l, 32764+    0,                            5126+    0,    2);
		API_polar::template xo0<   2>(s,     5124+    2,                            5124+    0,    2);
		API_polar::template xo0<   4>(s,     5120+    4,                            5120+    0,    4);
		API_polar::template g  <   8>(s, l, 32736+    0, 32736+    8,  5120+    0, 32736+   16,    8);
		API_polar::template spc<   8>(s, l, 32752+    0,                            5128+    0,    8);
		API_polar::template xo <   8>(s,     5120+    0,  5120+    8,               5120+    0,    8);
		API_polar::template g  <  16>(s, l, 32704+    0, 32704+   16,  5120+    0, 32704+   32,   16);
		API_polar::template spc<  16>(s, l, 32736+    0,                            5136+    0,   16);
		API_polar::template xo <  16>(s,     5120+    0,  5120+   16,               5120+    0,   16);
		API_polar::template g  <  32>(s, l, 32640+    0, 32640+   32,  5120+    0, 32640+   64,   32);
		API_polar::template spc<  32>(s, l, 32704+    0,                            5152+    0,   32);
		API_polar::template xo <  32>(s,     5120+    0,  5120+   32,               5120+    0,   32);
		API_polar::template g  <  64>(s, l, 32512+    0, 32512+   64,  5120+    0, 32512+  128,   64);
		API_polar::template spc<  64>(s, l, 32640+    0,                            5184+    0,   64);
		API_polar::template xo <  64>(s,     5120+    0,  5120+   64,               5120+    0,   64);
		API_polar::template g  < 128>(s, l, 32256+    0, 32256+  128,  5120+    0, 32256+  256,  128);
		API_polar::template spc< 128>(s, l, 32512+    0,                            5248+    0,  128);
		API_polar::template xo < 128>(s,     5120+    0,  5120+  128,               5120+    0,  128);
		API_polar::template g  < 256>(s, l, 31744+    0, 31744+  256,  5120+    0, 31744+  512,  256);
		API_polar::template h  < 256>(s, l, 32256+    0,                            5376+    0,  256);
		API_polar::template xo < 256>(s,     5120+    0,  5120+  256,               5120+    0,  256);
		API_polar::template g  < 512>(s, l, 30720+    0, 30720+  512,  5120+    0, 30720+ 1024,  512);
		API_polar::template h  < 512>(s, l, 31744+    0,                            5632+    0,  512);
		API_polar::template xo < 512>(s,     5120+    0,  5120+  512,               5120+    0,  512);
		API_polar::template xo <1024>(s,     4096+    0,  4096+ 1024,               4096+    0, 1024);
		API_polar::template g  <2048>(s, l, 24576+    0, 24576+ 2048,  4096+    0, 24576+ 4096, 2048);
		API_polar::template f  <1024>(   l, 28672+    0, 28672+ 1024,              28672+ 2048, 1024);
		API_polar::template f  < 512>(   l, 30720+    0, 30720+  512,              30720+ 1024,  512);
		API_polar::template f  < 256>(   l, 31744+    0, 31744+  256,              31744+  512,  256);
		API_polar::template f  < 128>(   l, 32256+    0, 32256+  128,              32256+  256,  128);
		API_polar::template f  <  64>(   l, 32512+    0, 32512+   64,              32512+  128,   64);
		API_polar::template f  <  32>(   l, 32640+    0, 32640+   32,              32640+   64,   32);
		API_polar::template f  <  16>(   l, 32704+    0, 32704+   16,              32704+   32,   16);
		API_polar::template f  <   8>(   l, 32736+    0, 32736+    8,              32736+   16,    8);
		API_polar::template f  <   4>(   l, 32752+    0, 32752+    4,              32752+    8,    4);
		API_polar::template rep<   4>(s, l, 32760+    0,                            6144+    0,    4);
		API_polar::template gr <   4>(s, l, 32752+    0, 32752+    4,  6144+    0, 32752+    8,    4);
		API_polar::template spc<   4>(s, l, 32760+    0,                            6148+    0,    4);
		API_polar::template xo <   4>(s,     6144+    0,  6144+    4,               6144+    0,    4);
		API_polar::template g  <   8>(s, l, 32736+    0, 32736+    8,  6144+    0, 32736+   16,    8);
		API_polar::template spc<   8>(s, l, 32752+    0,                            6152+    0,    8);
		API_polar::template xo <   8>(s,     6144+    0,  6144+    8,               6144+    0,    8);
		API_polar::template g  <  16>(s, l, 32704+    0, 32704+   16,  6144+    0, 32704+   32,   16);
		API_polar::template spc<  16>(s, l, 32736+    0,                            6160+    0,   16);
		API_polar::template xo <  16>(s,     6144+    0,  6144+   16,               6144+    0,   16);
		API_polar::template g  <  32>(s, l, 32640+    0, 32640+   32,  6144+    0, 32640+   64,   32);
		API_polar::template spc<  32>(s, l, 32704+    0,                            6176+    0,   32);
		API_polar::template xo <  32>(s,     6144+    0,  6144+   32,               6144+    0,   32);
		API_polar::template g  <  64>(s, l, 32512+    0, 32512+   64,  6144+    0, 32512+  128,   64);
		API_polar::template h  <  64>(s, l, 32640+    0,                            6208+    0,   64);
		API_polar::template xo <  64>(s,     6144+    0,  6144+   64,               6144+    0,   64);
		API_polar::template g  < 128>(s, l, 32256+    0, 32256+  128,  6144+    0, 32256+  256,  128);
		API_polar::template h  < 128>(s, l, 32512+    0,                            6272+    0,  128);
		API_polar::template xo < 128>(s,     6144+    0,  6144+  128,               6144+    0,  128);
		API_polar::template g  < 256>(s, l, 31744+    0, 31744+  256,  6144+    0, 31744+  512,  256);
		API_polar::template h  < 256>(s, l, 32256+    0,                            6400+    0,  256);
		API_polar::template xo < 256>(s,     6144+    0,  6144+  256,               6144+    0,  256);
		API_polar::template g  < 512>(s, l, 30720+    0, 30720+  512,  6144+    0, 30720+ 1024,  512);
		API_polar::template h  < 512>(s, l, 31744+    0,                            6656+    0,  512);
		API_polar::template xo < 512>(s,     6144+    0,  6144+  512,               6144+    0,  512);
		API_polar::template g  <1024>(s, l, 28672+    0, 28672+ 1024,  6144+    0, 28672+ 2048, 1024);
		API_polar::template h  <1024>(s, l, 30720+    0,                            7168+    0, 1024);
		API_polar::template xo <1024>(s,     6144+    0,  6144+ 1024,               6144+    0, 1024);
		API_polar::template xo <2048>(s,     4096+    0,  4096+ 2048,               4096+    0, 2048);
		API_polar::template xo <4096>(s,        0+    0,     0+ 4096,                  0+    0, 4096);
		API_polar::template g  <8192>(s, l,     0+    0,     0+ 8192,     0+    0,     0+16384, 8192);
		API_polar::template f  <4096>(   l, 16384+    0, 16384+ 4096,              16384+ 8192, 4096);
		API_polar::template f  <2048>(   l, 24576+    0, 24576+ 2048,              24576+ 4096, 2048);
		API_polar::template f  <1024>(   l, 28672+    0, 28672+ 1024,              28672+ 2048, 1024);
		API_polar::template f  < 512>(   l, 30720+    0, 30720+  512,              30720+ 1024,  512);
		API_polar::template f  < 256>(   l, 31744+    0, 31744+  256,              31744+  512,  256);
		API_polar::template f  < 128>(   l, 32256+    0, 32256+  128,              32256+  256,  128);
		API_polar::template f  <  64>(   l, 32512+    0, 32512+   64,              32512+  128,   64);
		API_polar::template f  <  32>(   l, 32640+    0, 32640+   32,              32640+   64,   32);
		API_polar::template rep<  32>(s, l, 32704+    0,                            8192+    0,   32);
		API_polar::template gr <  32>(s, l, 32640+    0, 32640+   32,  8192+    0, 32640+   64,   32);
		API_polar::template f  <  16>(   l, 32704+    0, 32704+   16,              32704+   32,   16);
		API_polar::template g0 <   8>(   l, 32736+    0, 32736+    8,              32736+   16,    8);
		API_polar::template g0 <   4>(   l, 32752+    0, 32752+    4,              32752+    8,    4);
		API_polar::template spc<   4>(s, l, 32760+    0,                            8236+    0,    4);
		API_polar::template xo0<   4>(s,     8232+    4,                            8232+    0,    4);
		API_polar::template xo0<   8>(s,     8224+    8,                            8224+    0,    8);
		API_polar::template g  <  16>(s, l, 32704+    0, 32704+   16,  8224+    0, 32704+   32,   16);
		API_polar::template f  <   8>(   l, 32736+    0, 32736+    8,              32736+   16,    8);
		API_polar::template f  <   4>(   l, 32752+    0, 32752+    4,              32752+    8,    4);
		API_polar::template rep<   4>(s, l, 32760+    0,                            8240+    0,    4);
		API_polar::template gr <   4>(s, l, 32752+    0, 32752+    4,  8240+    0, 32752+    8,    4);
		API_polar::template spc<   4>(s, l, 32760+    0,                            8244+    0,    4);
		API_polar::template xo <   4>(s,     8240+    0,  8240+    4,               8240+    0,    4);
		API_polar::template g  <   8>(s, l, 32736+    0, 32736+    8,  8240+    0, 32736+   16,    8);
		API_polar::template spc<   8>(s, l, 32752+    0,                            8248+    0,    8);
		API_polar::template xo <   8>(s,     8240+    0,  8240+    8,               8240+    0,    8);
		API_polar::template xo <  16>(s,     8224+    0,  8224+   16,               8224+    0,   16);
		API_polar::template xo <  32>(s,     8192+    0,  8192+   32,               8192+    0,   32);
		API_polar::template g  <  64>(s, l, 32512+    0, 32512+   64,  8192+    0, 32512+  128,   64);
		API_polar::template f  <  32>(   l, 32640+    0, 32640+   32,              32640+   64,   32);
		API_polar::template f  <  16>(   l, 32704+    0, 32704+   16,              32704+   32,   16);
		API_polar::template g0 <   8>(   l, 32736+    0, 32736+    8,              32736+   16,    8);
		API_polar::template f  <   4>(   l, 32752+    0, 32752+    4,              32752+    8,    4);
		API_polar::template rep<   4>(s, l, 32760+    0,                            8264+    0,    4);
		API_polar::template gr <   4>(s, l, 32752+    0, 32752+    4,  8264+    0, 32752+    8,    4);
		API_polar::template spc<   4>(s, l, 32760+    0,                            8268+    0,    4);
		API_polar::template xo <   4>(s,     8264+    0,  8264+    4,               8264+    0,    4);
		API_polar::template xo0<   8>(s,     8256+    8,                            8256+    0,    8);
		API_polar::template g  <  16>(s, l, 32704+    0, 32704+   16,  8256+    0, 32704+   32,   16);
		API_polar::template f  <   8>(   l, 32736+    0, 32736+    8,              32736+   16,    8);
		API_polar::template f  <   4>(   l, 32752+    0, 32752+    4,              32752+    8,    4);
		API_polar::template rep<   4>(s, l, 32760+    0,                            8272+    0,    4);
		API_polar::template gr <   4>(s, l, 32752+    0, 32752+    4,  8272+    0, 32752+    8,    4);
		API_polar::template spc<   4>(s, l, 32760+    0,                            8276+    0,    4);
		API_polar::template xo <   4>(s,     8272+    0,  8272+    4,               8272+    0,    4);
		API_polar::template g  <   8>(s, l, 32736+    0, 32736+    8,  8272+    0, 32736+   16,    8);
		API_polar::template spc<   8>(s, l, 32752+    0,                            8280+    0,    8);
		API_polar::template xo <   8>(s,     8272+    0,  8272+    8,               8272+    0,    8);
		API_polar::template xo <  16>(s,     8256+    0,  8256+   16,               8256+    0,   16);
		API_polar::template g  <  32>(s, l, 32640+    0, 32640+   32,  8256+    0, 32640+   64,   32);
		API_polar::template f  <  16>(   l, 32704+    0, 32704+   16,              32704+   32,   16);
		API_polar::template f  <   8>(   l, 32736+    0, 32736+    8,              32736+   16,    8);
		API_polar::template f  <   4>(   l, 32752+    0, 32752+    4,              32752+    8,    4);
		API_polar::template rep<   4>(s, l, 32760+    0,                            8288+    0,    4);
		API_polar::template gr <   4>(s, l, 32752+    0, 32752+    4,  8288+    0, 32752+    8,    4);
		API_polar::template spc<   4>(s, l, 32760+    0,                            8292+    0,    4);
		API_polar::template xo <   4>(s,     8288+    0,  8288+    4,               8288+    0,    4);
		API_polar::template g  <   8>(s, l, 32736+    0, 32736+    8,  8288+    0, 32736+   16,    8);
		API_polar::template h  <   8>(s, l, 32752+    0,                            8296+    0,    8);
		API_polar::template xo <   8>(s,     8288+    0,  8288+    8,               8288+    0,    8);
		API_polar::template g  <  16>(s, l, 32704+    0, 32704+   16,  8288+    0, 32704+   32,   16);
		API_polar::template h  <  16>(s, l, 32736+    0,                            8304+    0,   16);
		API_polar::template xo <  16>(s,     8288+    0,  8288+   16,               8288+    0,   16);
		API_polar::template xo <  32>(s,     8256+    0,  8256+   32,               8256+    0,   32);
		API_polar::template xo <  64>(s,     8192+    0,  8192+   64,               8192+    0,   64);
		API_polar::template g  < 128>(s, l, 32256+    0, 32256+  128,  8192+    0, 32256+  256,  128);
		API_polar::template f  <  64>(   l, 32512+    0, 32512+   64,              32512+  128,   64);
		API_polar::template f  <  32>(   l, 32640+    0, 32640+   32,              32640+   64,   32);
		API_polar::template f  <  16>(   l, 32704+    0, 32704+   16,              32704+   32,   16);
		API_polar::template f  <   8>(   l, 32736+    0, 32736+    8,              32736+   16,    8);
		API_polar::template rep<   8>(s, l, 32752+    0,                            8320+    0,    8);
		API_polar::template gr <   8>(s, l, 32736+    0, 32736+    8,  8320+    0, 32736+   16,    8);
		API_polar::template f  <   4>(   l, 32752+    0, 32752+    4,              32752+    8,    4);
		API_polar::template rep<   4>(s, l, 32760+    0,                            8328+    0,    4);
		API_polar::template gr <   4>(s, l, 32752+    0, 32752+    4,  8328+    0, 32752+    8,    4);
		API_polar::template spc<   4>(s, l, 32760+    0,                            8332+    0,    4);
		API_polar::template xo <   4>(s,     8328+    0,  8328+    4,               8328+    0,    4);
		API_polar::template xo <   8>(s,     8320+    0,  8320+    8,               8320+    0,    8);
		API_polar::template g  <  16>(s, l, 32704+    0, 32704+   16,  8320+    0, 32704+   32,   16);
		API_polar::template f  <   8>(   l, 32736+    0, 32736+    8,              32736+   16,    8);
		API_polar::template f  <   4>(   l, 32752+    0, 32752+    4,              32752+    8,    4);
		API_polar::template rep<   4>(s, l, 32760+    0,                            8336+    0,    4);
		API_polar::template gr <   4>(s, l, 32752+    0, 32752+    4,  8336+    0, 32752+    8,    4);
		API_polar::template h  <   4>(s, l, 32760+    0,                            8340+    0,    4);
		API_polar::template xo <   4>(s,     8336+    0,  8336+    4,               8336+    0,    4);
		API_polar::template g  <   8>(s, l, 32736+    0, 32736+    8,  8336+    0, 32736+   16,    8);
		API_polar::template h  <   8>(s, l, 32752+    0,                            8344+    0,    8);
		API_polar::template xo <   8>(s,     8336+    0,  8336+    8,               8336+    0,    8);
		API_polar::template xo <  16>(s,     8320+    0,  8320+   16,               8320+    0,   16);
		API_polar::template g  <  32>(s, l, 32640+    0, 32640+   32,  8320+    0, 32640+   64,   32);
		API_polar::template spc<  32>(s, l, 32704+    0,                            8352+    0,   32);
		API_polar::template xo <  32>(s,     8320+    0,  8320+   32,               8320+    0,   32);
		API_polar::template g  <  64>(s, l, 32512+    0, 32512+   64,  8320+    0, 32512+  128,   64);
		API_polar::template spc<  64>(s, l, 32640+    0,                            8384+    0,   64);
		API_polar::template xo <  64>(s,     8320+    0,  8320+   64,               8320+    0,   64);
		API_polar::template xo < 128>(s,     8192+    0,  8192+  128,               8192+    0,  128);
		API_polar::template g  < 256>(s, l, 31744+    0, 31744+  256,  8192+    0, 31744+  512,  256);
		API_polar::template f  < 128>(   l, 32256+    0, 32256+  128,              32256+  256,  128);
		API_polar::template f  <  64>(   l, 32512+    0, 32512+   64,              32512+  128,   64);
		API_polar::template f  <  32>(   l, 32640+    0, 32640+   32,              32640+   64,   32);
		API_polar::template f  <  16>(   l, 32704+    0, 32704+   16,              32704+   32,   16);
		API_polar::template f  <   8>(   l, 32736+    0, 32736+    8,              32736+   16,    8);
		API_polar::template rep<   8>(s, l, 32752+    0,                            8448+    0,    8);
		API_polar::template gr <   8>(s, l, 32736+    0, 32736+    8,  8448+    0, 32736+   16,    8);
		API_polar::template f  <   4>(   l, 32752+    0, 32752+    4,              32752+    8,    4);
		API_polar::template g0 <   2>(   l, 32760+    0, 32760+    2,              32760+    4,    2);
		API_polar::template h  <   2>(s, l, 32764+    0,                            8458+    0,    2);
		API_polar::template xo0<   2>(s,     8456+    2,                            8456+    0,    2);
		API_polar::template g  <   4>(s, l, 32752+    0, 32752+    4,  8456+    0, 32752+    8,    4);
		API_polar::template h  <   4>(s, l, 32760+    0,                            8460+    0,    4);
		API_polar::template xo <   4>(s,     8456+    0,  8456+    4,               8456+    0,    4);
		API_polar::template xo <   8>(s,     8448+    0,  8448+    8,               8448+    0,    8);
		API_polar::template g  <  16>(s, l, 32704+    0, 32704+   16,  8448+    0, 32704+   32,   16);
		API_polar::template spc<  16>(s, l, 32736+    0,                            8464+    0,   16);
		API_polar::template xo <  16>(s,     8448+    0,  8448+   16,               8448+    0,   16);
		API_polar::template g  <  32>(s, l, 32640+    0, 32640+   32,  8448+    0, 32640+   64,   32);
		API_polar::template spc<  32>(s, l, 32704+    0,                            8480+    0,   32);
		API_polar::template xo <  32>(s,     8448+    0,  8448+   32,               8448+    0,   32);
		API_polar::template g  <  64>(s, l, 32512+    0, 32512+   64,  8448+    0, 32512+  128,   64);
		API_polar::template spc<  64>(s, l, 32640+    0,                            8512+    0,   64);
		API_polar::template xo <  64>(s,     8448+    0,  8448+   64,               8448+    0,   64);
		API_polar::template g  < 128>(s, l, 32256+    0, 32256+  128,  8448+    0, 32256+  256,  128);
		API_polar::template spc< 128>(s, l, 32512+    0,                            8576+    0,  128);
		API_polar::template xo < 128>(s,     8448+    0,  8448+  128,               8448+    0,  128);
		API_polar::template xo < 256>(s,     8192+    0,  8192+  256,               8192+    0,  256);
		API_polar::template g  < 512>(s, l, 30720+    0, 30720+  512,  8192+    0, 30720+ 1024,  512);
		API_polar::template f  < 256>(   l, 31744+    0, 31744+  256,              31744+  512,  256);
		API_polar::template f  < 128>(   l, 32256+    0, 32256+  128,              32256+  256,  128);
		API_polar::template f  <  64>(   l, 32512+    0, 32512+   64,              32512+  128,   64);
		API_polar::template f  <  32>(   l, 32640+    0, 32640+   32,              32640+   64,   32);
		API_polar::template f  <  16>(   l, 32704+    0, 32704+   16,              32704+   32,   16);
		API_polar::template f  <   8>(   l, 32736+    0, 32736+    8,              32736+   16,    8);
		API_polar::template g0 <   4>(   l, 32752+    0, 32752+    4,              32752+    8,    4);
		API_polar::template spc<   4>(s, l, 32760+    0,                            8708+    0,    4);
		API_polar::template xo0<   4>(s,     8704+    4,                            8704+    0,    4);
		API_polar::template g  <   8>(s, l, 32736+    0, 32736+    8,  8704+    0, 32736+   16,    8);
		API_polar::template spc<   8>(s, l, 32752+    0,                            8712+    0,    8);
		API_polar::template xo <   8>(s,     8704+    0,  8704+    8,               8704+    0,    8);
		API_polar::template g  <  16>(s, l, 32704+    0, 32704+   16,  8704+    0, 32704+   32,   16);
		API_polar::template spc<  16>(s, l, 32736+    0,                            8720+    0,   16);
		API_polar::template xo <  16>(s,     8704+    0,  8704+   16,               8704+    0,   16);
		API_polar::template g  <  32>(s, l, 32640+    0, 32640+   32,  8704+    0, 32640+   64,   32);
		API_polar::template spc<  32>(s, l, 32704+    0,                            8736+    0,   32);
		API_polar::template xo <  32>(s,     8704+    0,  8704+   32,               8704+    0,   32);
		API_polar::template g  <  64>(s, l, 32512+    0, 32512+   64,  8704+    0, 32512+  128,   64);
		API_polar::template spc<  64>(s, l, 32640+    0,                            8768+    0,   64);
		API_polar::template xo <  64>(s,     8704+    0,  8704+   64,               8704+    0,   64);
		API_polar::template g  < 128>(s, l, 32256+    0, 32256+  128,  8704+    0, 32256+  256,  128);
		API_polar::template h  < 128>(s, l, 32512+    0,                            8832+    0,  128);
		API_polar::template xo < 128>(s,     8704+    0,  8704+  128,               8704+    0,  128);
		API_polar::template g  < 256>(s, l, 31744+    0, 31744+  256,  8704+    0, 31744+  512,  256);
		API_polar::template h  < 256>(s, l, 32256+    0,                            8960+    0,  256);
		API_polar::template xo < 256>(s,     8704+    0,  8704+  256,               8704+    0,  256);
		API_polar::template xo < 512>(s,     8192+    0,  8192+  512,               8192+    0,  512);
		API_polar::template g  <1024>(s, l, 28672+    0, 28672+ 1024,  8192+    0, 28672+ 2048, 1024);
		API_polar::template f  < 512>(   l, 30720+    0, 30720+  512,              30720+ 1024,  512);
		API_polar::template f  < 256>(   l, 31744+    0, 31744+  256,              31744+  512,  256);
		API_polar::template f  < 128>(   l, 32256+    0, 32256+  128,              32256+  256,  128);
		API_polar::template f  <  64>(   l, 32512+    0, 32512+   64,              32512+  128,   64);
		API_polar::template f  <  32>(   l, 32640+    0, 32640+   32,              32640+   64,   32);
		API_polar::template f  <  16>(   l, 32704+    0, 32704+   16,              32704+   32,   16);
		API_polar::template f  <   8>(   l, 32736+    0, 32736+    8,              32736+   16,    8);
		API_polar::template f  <   4>(   l, 32752+    0, 32752+    4,              32752+    8,    4);
		API_polar::template rep<   4>(s, l, 32760+    0,                            9216+    0,    4);
		API_polar::template gr <   4>(s, l, 32752+    0, 32752+    4,  9216+    0, 32752+    8,    4);
		API_polar::template spc<   4>(s, l, 32760+    0,                            9220+    0,    4);
		API_polar::template xo <   4>(s,     9216+    0,  9216+    4,               9216+    0,    4);
		API_polar::template g  <   8>(s, l, 32736+    0, 32736+    8,  9216+    0, 32736+   16,    8);
		API_polar::template spc<   8>(s, l, 32752+    0,                            9224+    0,    8);
		API_polar::template xo <   8>(s,     9216+    0,  9216+    8,               9216+    0,    8);
		API_polar::template g  <  16>(s, l, 32704+    0, 32704+   16,  9216+    0, 32704+   32,   16);
		API_polar::template spc<  16>(s, l, 32736+    0,                            9232+    0,   16);
		API_polar::template xo <  16>(s,     9216+    0,  9216+   16,               9216+    0,   16);
		API_polar::template g  <  32>(s, l, 32640+    0, 32640+   32,  9216+    0, 32640+   64,   32);
		API_polar::template h  <  32>(s, l, 32704+    0,                            9248+    0,   32);
		API_polar::template xo <  32>(s,     9216+    0,  9216+   32,               9216+    0,   32);
		API_polar::template g  <  64>(s, l, 32512+    0, 32512+   64,  9216+    0, 32512+  128,   64);
		API_polar::template h  <  64>(s, l, 32640+    0,                            9280+    0,   64);
		API_polar::template xo <  64>(s,     9216+    0,  9216+   64,               9216+    0,   64);
		API_polar::template g  < 128>(s, l, 32256+    0, 32256+  128,  9216+    0, 32256+  256,  128);
		API_polar::template h  < 128>(s, l, 32512+    0,                            9344+    0,  128);
		API_polar::template xo < 128>(s,     9216+    0,  9216+  128,               9216+    0,  128);
		API_polar::template g  < 256>(s, l, 31744+    0, 31744+  256,  9216+    0, 31744+  512,  256);
		API_polar::template h  < 256>(s, l, 32256+    0,                            9472+    0,  256);
		API_polar::template xo < 256>(s,     9216+    0,  9216+  256,               9216+    0,  256);
		API_polar::template g  < 512>(s, l, 30720+    0, 30720+  512,  9216+    0, 30720+ 1024,  512);
		API_polar::template h  < 512>(s, l, 31744+    0,                            9728+    0,  512);
		API_polar::template xo < 512>(s,     9216+    0,  9216+  512,               9216+    0,  512);
		API_polar::template xo <1024>(s,     8192+    0,  8192+ 1024,               8192+    0, 1024);
		API_polar::template g  <2048>(s, l, 24576+    0, 24576+ 2048,  8192+    0, 24576+ 4096, 2048);
		API_polar::template f  <1024>(   l, 28672+    0, 28672+ 1024,              28672+ 2048, 1024);
		API_polar::template f  < 512>(   l, 30720+    0, 30720+  512,              30720+ 1024,  512);
		API_polar::template f  < 256>(   l, 31744+    0, 31744+  256,              31744+  512,  256);
		API_polar::template f  < 128>(   l, 32256+    0, 32256+  128,              32256+  256,  128);
		API_polar::template f  <  64>(   l, 32512+    0, 32512+   64,              32512+  128,   64);
		API_polar::template f  <  32>(   l, 32640+    0, 32640+   32,              32640+   64,   32);
		API_polar::template f  <  16>(   l, 32704+    0, 32704+   16,              32704+   32,   16);
		API_polar::template f  <   8>(   l, 32736+    0, 32736+    8,              32736+   16,    8);
		API_polar::template f  <   4>(   l, 32752+    0, 32752+    4,              32752+    8,    4);
		API_polar::template rep<   4>(s, l, 32760+    0,                           10240+    0,    4);
		API_polar::template gr <   4>(s, l, 32752+    0, 32752+    4, 10240+    0, 32752+    8,    4);
		API_polar::template spc<   4>(s, l, 32760+    0,                           10244+    0,    4);
		API_polar::template xo <   4>(s,    10240+    0, 10240+    4,              10240+    0,    4);
		API_polar::template g  <   8>(s, l, 32736+    0, 32736+    8, 10240+    0, 32736+   16,    8);
		API_polar::template h  <   8>(s, l, 32752+    0,                           10248+    0,    8);
		API_polar::template xo <   8>(s,    10240+    0, 10240+    8,              10240+    0,    8);
		API_polar::template g  <  16>(s, l, 32704+    0, 32704+   16, 10240+    0, 32704+   32,   16);
		API_polar::template h  <  16>(s, l, 32736+    0,                           10256+    0,   16);
		API_polar::template xo <  16>(s,    10240+    0, 10240+   16,              10240+    0,   16);
		API_polar::template g  <  32>(s, l, 32640+    0, 32640+   32, 10240+    0, 32640+   64,   32);
		API_polar::template h  <  32>(s, l, 32704+    0,                           10272+    0,   32);
		API_polar::template xo <  32>(s,    10240+    0, 10240+   32,              10240+    0,   32);
		API_polar::template g  <  64>(s, l, 32512+    0, 32512+   64, 10240+    0, 32512+  128,   64);
		API_polar::template h  <  64>(s, l, 32640+    0,                           10304+    0,   64);
		API_polar::template xo <  64>(s,    10240+    0, 10240+   64,              10240+    0,   64);
		API_polar::template g  < 128>(s, l, 32256+    0, 32256+  128, 10240+    0, 32256+  256,  128);
		API_polar::template h  < 128>(s, l, 32512+    0,                           10368+    0,  128);
		API_polar::template xo < 128>(s,    10240+    0, 10240+  128,              10240+    0,  128);
		API_polar::template g  < 256>(s, l, 31744+    0, 31744+  256, 10240+    0, 31744+  512,  256);
		API_polar::template h  < 256>(s, l, 32256+    0,                           10496+    0,  256);
		API_polar::template xo < 256>(s,    10240+    0, 10240+  256,              10240+    0,  256);
		API_polar::template g  < 512>(s, l, 30720+    0, 30720+  512, 10240+    0, 30720+ 1024,  512);
		API_polar::template h  < 512>(s, l, 31744+    0,                           10752+    0,  512);
		API_polar::template xo < 512>(s,    10240+    0, 10240+  512,              10240+    0,  512);
		API_polar::template g  <1024>(s, l, 28672+    0, 28672+ 1024, 10240+    0, 28672+ 2048, 1024);
		API_polar::template h  <1024>(s, l, 30720+    0,                           11264+    0, 1024);
		API_polar::template xo <1024>(s,    10240+    0, 10240+ 1024,              10240+    0, 1024);
		API_polar::template xo <2048>(s,     8192+    0,  8192+ 2048,               8192+    0, 2048);
		API_polar::template g  <4096>(s, l, 16384+    0, 16384+ 4096,  8192+    0, 16384+ 8192, 4096);
		API_polar::template f  <2048>(   l, 24576+    0, 24576+ 2048,              24576+ 4096, 2048);
		API_polar::template f  <1024>(   l, 28672+    0, 28672+ 1024,              28672+ 2048, 1024);
		API_polar::template f  < 512>(   l, 30720+    0, 30720+  512,              30720+ 1024,  512);
		API_polar::template f  < 256>(   l, 31744+    0, 31744+  256,              31744+  512,  256);
		API_polar::template f  < 128>(   l, 32256+    0, 32256+  128,              32256+  256,  128);
		API_polar::template f  <  64>(   l, 32512+    0, 32512+   64,              32512+  128,   64);
		API_polar::template f  <  32>(   l, 32640+    0, 32640+   32,              32640+   64,   32);
		API_polar::template f  <  16>(   l, 32704+    0, 32704+   16,              32704+   32,   16);
		API_polar::template f  <   8>(   l, 32736+    0, 32736+    8,              32736+   16,    8);
		API_polar::template f  <   4>(   l, 32752+    0, 32752+    4,              32752+    8,    4);
		API_polar::template g0 <   2>(   l, 32760+    0, 32760+    2,              32760+    4,    2);
		API_polar::template h  <   2>(s, l, 32764+    0,                           12290+    0,    2);
		API_polar::template xo0<   2>(s,    12288+    2,                           12288+    0,    2);
		API_polar::template g  <   4>(s, l, 32752+    0, 32752+    4, 12288+    0, 32752+    8,    4);
		API_polar::template h  <   4>(s, l, 32760+    0,                           12292+    0,    4);
		API_polar::template xo <   4>(s,    12288+    0, 12288+    4,              12288+    0,    4);
		API_polar::template g  <   8>(s, l, 32736+    0, 32736+    8, 12288+    0, 32736+   16,    8);
		API_polar::template h  <   8>(s, l, 32752+    0,                           12296+    0,    8);
		API_polar::template xo <   8>(s,    12288+    0, 12288+    8,              12288+    0,    8);
		API_polar::template g  <  16>(s, l, 32704+    0, 32704+   16, 12288+    0, 32704+   32,   16);
		API_polar::template h  <  16>(s, l, 32736+    0,                           12304+    0,   16);
		API_polar::template xo <  16>(s,    12288+    0, 12288+   16,              12288+    0,   16);
		API_polar::template g  <  32>(s, l, 32640+    0, 32640+   32, 12288+    0, 32640+   64,   32);
		API_polar::template h  <  32>(s, l, 32704+    0,                           12320+    0,   32);
		API_polar::template xo <  32>(s,    12288+    0, 12288+   32,              12288+    0,   32);
		API_polar::template g  <  64>(s, l, 32512+    0, 32512+   64, 12288+    0, 32512+  128,   64);
		API_polar::template h  <  64>(s, l, 32640+    0,                           12352+    0,   64);
		API_polar::template xo <  64>(s,    12288+    0, 12288+   64,              12288+    0,   64);
		API_polar::template g  < 128>(s, l, 32256+    0, 32256+  128, 12288+    0, 32256+  256,  128);
		API_polar::template h  < 128>(s, l, 32512+    0,                           12416+    0,  128);
		API_polar::template xo < 128>(s,    12288+    0, 12288+  128,              12288+    0,  128);
		API_polar::template g  < 256>(s, l, 31744+    0, 31744+  256, 12288+    0, 31744+  512,  256);
		API_polar::template h  < 256>(s, l, 32256+    0,                           12544+    0,  256);
		API_polar::template xo < 256>(s,    12288+    0, 12288+  256,              12288+    0,  256);
		API_polar::template g  < 512>(s, l, 30720+    0, 30720+  512, 12288+    0, 30720+ 1024,  512);
		API_polar::template h  < 512>(s, l, 31744+    0,                           12800+    0,  512);
		API_polar::template xo < 512>(s,    12288+    0, 12288+  512,              12288+    0,  512);
		API_polar::template g  <1024>(s, l, 28672+    0, 28672+ 1024, 12288+    0, 28672+ 2048, 1024);
		API_polar::template h  <1024>(s, l, 30720+    0,                           13312+    0, 1024);
		API_polar::template xo <1024>(s,    12288+    0, 12288+ 1024,              12288+    0, 1024);
		API_polar::template g  <2048>(s, l, 24576+    0, 24576+ 2048, 12288+    0, 24576+ 4096, 2048);
		API_polar::template h  <2048>(s, l, 28672+    0,                           14336+    0, 2048);
		API_polar::template xo <2048>(s,    12288+    0, 12288+ 2048,              12288+    0, 2048);
		API_polar::template xo <4096>(s,     8192+    0,  8192+ 4096,               8192+    0, 4096);
		API_polar::template xo <8192>(s,        0+    0,     0+ 8192,                  0+    0, 8192);
	}
};
}
}
#endif
