#ifndef DECODER_POLAR_SC_FAST_SYS_N32768_K16384_SNR18_HPP_
#define DECODER_POLAR_SC_FAST_SYS_N32768_K16384_SNR18_HPP_

#include <cassert>

#include "../Decoder_polar_SC_fast_sys.hpp"

namespace aff3ct
{
namespace module
{
static const char Frozen_bits_32768_16384_18[32768] = {
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};

template <typename B, typename R, class API_polar>
class Decoder_polar_SC_fast_sys_N32768_K16384_SNR18 : public Decoder_polar_SC_fast_sys<B, R, API_polar>
{
public:
	Decoder_polar_SC_fast_sys_N32768_K16384_SNR18(const int& K, const int& N, const mipp::vector<B>& frozen_bits, const int n_frames = 1)
	: Decoder_polar_SC_fast_sys<B, R, API_polar>(K, N, frozen_bits, n_frames)
	{
		assert(N == 32768);
		assert(K == 16384);
		
		auto i = 0;
		while (i < 32768 && Frozen_bits_32768_16384_18[i] == frozen_bits[i]) i++;
		assert(i == 32768);
	}

	virtual ~Decoder_polar_SC_fast_sys_N32768_K16384_SNR18()
	{
	}

	void decode()
	{
		auto &l = this->l;
		auto &s = this->s;

		API_polar::template f  <16384>(   l,     0+    0,     0+16384,                  0+32768, 16384);
		API_polar::template f  < 8192>(   l, 32768+    0, 32768+ 8192,              32768+16384,  8192);
		API_polar::template f  < 4096>(   l, 49152+    0, 49152+ 4096,              49152+ 8192,  4096);
		API_polar::template g0 < 2048>(   l, 57344+    0, 57344+ 2048,              57344+ 4096,  2048);
		API_polar::template g0 < 1024>(   l, 61440+    0, 61440+ 1024,              61440+ 2048,  1024);
		API_polar::template g0 <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template rep<  256>(s, l, 65024+    0,                            3584+    0,   256);
		API_polar::template gr <  256>(s, l, 64512+    0, 64512+  256,  3584+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template rep<  128>(s, l, 65280+    0,                            3840+    0,   128);
		API_polar::template gr <  128>(s, l, 65024+    0, 65024+  128,  3840+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template g0 <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            4024+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  4024+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            4028+    0,     4);
		API_polar::template xo <    4>(s,     4024+    0,  4024+    4,               4024+    0,     4);
		API_polar::template xo0<    8>(s,     4016+    8,                            4016+    0,     8);
		API_polar::template xo0<   16>(s,     4000+   16,                            4000+    0,    16);
		API_polar::template xo0<   32>(s,     3968+   32,                            3968+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  3968+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            4048+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  4048+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            4056+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  4056+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            4060+    0,     4);
		API_polar::template xo <    4>(s,     4056+    0,  4056+    4,               4056+    0,     4);
		API_polar::template xo <    8>(s,     4048+    0,  4048+    8,               4048+    0,     8);
		API_polar::template xo0<   16>(s,     4032+   16,                            4032+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  4032+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            4064+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  4064+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            4072+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  4072+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            4076+    0,     4);
		API_polar::template xo <    4>(s,     4072+    0,  4072+    4,               4072+    0,     4);
		API_polar::template xo <    8>(s,     4064+    0,  4064+    8,               4064+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  4064+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            4080+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  4080+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            4084+    0,     4);
		API_polar::template xo <    4>(s,     4080+    0,  4080+    4,               4080+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  4080+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            4088+    0,     8);
		API_polar::template xo <    8>(s,     4080+    0,  4080+    8,               4080+    0,     8);
		API_polar::template xo <   16>(s,     4064+    0,  4064+   16,               4064+    0,    16);
		API_polar::template xo <   32>(s,     4032+    0,  4032+   32,               4032+    0,    32);
		API_polar::template xo <   64>(s,     3968+    0,  3968+   64,               3968+    0,    64);
		API_polar::template xo <  128>(s,     3840+    0,  3840+  128,               3840+    0,   128);
		API_polar::template xo <  256>(s,     3584+    0,  3584+  256,               3584+    0,   256);
		API_polar::template xo0<  512>(s,     3072+  512,                            3072+    0,   512);
		API_polar::template xo0< 1024>(s,     2048+ 1024,                            2048+    0,  1024);
		API_polar::template xo0< 2048>(s,        0+ 2048,                               0+    0,  2048);
		API_polar::template g  < 4096>(s, l, 49152+    0, 49152+ 4096,     0+    0, 49152+ 8192,  4096);
		API_polar::template f  < 2048>(   l, 57344+    0, 57344+ 2048,              57344+ 4096,  2048);
		API_polar::template g0 < 1024>(   l, 61440+    0, 61440+ 1024,              61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template rep<  512>(s, l, 64512+    0,                            5120+    0,   512);
		API_polar::template gr <  512>(s, l, 63488+    0, 63488+  512,  5120+    0, 63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template g0 <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template g0 <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template g0 <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            5880+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  5880+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            5884+    0,     4);
		API_polar::template xo <    4>(s,     5880+    0,  5880+    4,               5880+    0,     4);
		API_polar::template xo0<    8>(s,     5872+    8,                            5872+    0,     8);
		API_polar::template xo0<   16>(s,     5856+   16,                            5856+    0,    16);
		API_polar::template xo0<   32>(s,     5824+   32,                            5824+    0,    32);
		API_polar::template xo0<   64>(s,     5760+   64,                            5760+    0,    64);
		API_polar::template xo0<  128>(s,     5632+  128,                            5632+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256,  5632+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template g0 <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template g0 <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                            5984+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16,  5984+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            6000+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  6000+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            6008+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  6008+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            6012+    0,     4);
		API_polar::template xo <    4>(s,     6008+    0,  6008+    4,               6008+    0,     4);
		API_polar::template xo <    8>(s,     6000+    0,  6000+    8,               6000+    0,     8);
		API_polar::template xo <   16>(s,     5984+    0,  5984+   16,               5984+    0,    16);
		API_polar::template xo0<   32>(s,     5952+   32,                            5952+    0,    32);
		API_polar::template xo0<   64>(s,     5888+   64,                            5888+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128,  5888+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                            6016+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32,  6016+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                            6048+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16,  6048+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            6064+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  6064+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                            6074+    0,     2);
		API_polar::template xo0<    2>(s,     6072+    2,                            6072+    0,     2);
		API_polar::template g  <    4>(s, l, 65520+    0, 65520+    4,  6072+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                            6076+    0,     4);
		API_polar::template xo <    4>(s,     6072+    0,  6072+    4,               6072+    0,     4);
		API_polar::template xo <    8>(s,     6064+    0,  6064+    8,               6064+    0,     8);
		API_polar::template xo <   16>(s,     6048+    0,  6048+   16,               6048+    0,    16);
		API_polar::template xo <   32>(s,     6016+    0,  6016+   32,               6016+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  6016+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                            6094+    0,     2);
		API_polar::template xo0<    2>(s,     6092+    2,                            6092+    0,     2);
		API_polar::template xo0<    4>(s,     6088+    4,                            6088+    0,     4);
		API_polar::template xo0<    8>(s,     6080+    8,                            6080+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  6080+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            6096+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  6096+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            6100+    0,     4);
		API_polar::template xo <    4>(s,     6096+    0,  6096+    4,               6096+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  6096+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            6104+    0,     8);
		API_polar::template xo <    8>(s,     6096+    0,  6096+    8,               6096+    0,     8);
		API_polar::template xo <   16>(s,     6080+    0,  6080+   16,               6080+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  6080+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            6112+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  6112+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            6116+    0,     4);
		API_polar::template xo <    4>(s,     6112+    0,  6112+    4,               6112+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  6112+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            6120+    0,     8);
		API_polar::template xo <    8>(s,     6112+    0,  6112+    8,               6112+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  6112+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            6128+    0,    16);
		API_polar::template xo <   16>(s,     6112+    0,  6112+   16,               6112+    0,    16);
		API_polar::template xo <   32>(s,     6080+    0,  6080+   32,               6080+    0,    32);
		API_polar::template xo <   64>(s,     6016+    0,  6016+   64,               6016+    0,    64);
		API_polar::template xo <  128>(s,     5888+    0,  5888+  128,               5888+    0,   128);
		API_polar::template xo <  256>(s,     5632+    0,  5632+  256,               5632+    0,   256);
		API_polar::template xo <  512>(s,     5120+    0,  5120+  512,               5120+    0,   512);
		API_polar::template xo0< 1024>(s,     4096+ 1024,                            4096+    0,  1024);
		API_polar::template g  < 2048>(s, l, 57344+    0, 57344+ 2048,  4096+    0, 57344+ 4096,  2048);
		API_polar::template f  < 1024>(   l, 61440+    0, 61440+ 1024,              61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template g0 <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template g0 <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template g0 <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template g0 <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            6640+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  6640+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            6648+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  6648+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            6652+    0,     4);
		API_polar::template xo <    4>(s,     6648+    0,  6648+    4,               6648+    0,     4);
		API_polar::template xo <    8>(s,     6640+    0,  6640+    8,               6640+    0,     8);
		API_polar::template xo0<   16>(s,     6624+   16,                            6624+    0,    16);
		API_polar::template xo0<   32>(s,     6592+   32,                            6592+    0,    32);
		API_polar::template xo0<   64>(s,     6528+   64,                            6528+    0,    64);
		API_polar::template xo0<  128>(s,     6400+  128,                            6400+    0,   128);
		API_polar::template xo0<  256>(s,     6144+  256,                            6144+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512,  6144+    0, 63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template g0 <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template g0 <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                            6848+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32,  6848+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                            6880+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16,  6880+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            6896+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  6896+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            6904+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  6904+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                            6908+    0,     4);
		API_polar::template xo <    4>(s,     6904+    0,  6904+    4,               6904+    0,     4);
		API_polar::template xo <    8>(s,     6896+    0,  6896+    8,               6896+    0,     8);
		API_polar::template xo <   16>(s,     6880+    0,  6880+   16,               6880+    0,    16);
		API_polar::template xo <   32>(s,     6848+    0,  6848+   32,               6848+    0,    32);
		API_polar::template xo0<   64>(s,     6784+   64,                            6784+    0,    64);
		API_polar::template xo0<  128>(s,     6656+  128,                            6656+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256,  6656+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template rep<   64>(s, l, 65408+    0,                            6912+    0,    64);
		API_polar::template gr <   64>(s, l, 65280+    0, 65280+   64,  6912+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                            6976+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32,  6976+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            7020+    0,     4);
		API_polar::template xo0<    4>(s,     7016+    4,                            7016+    0,     4);
		API_polar::template xo0<    8>(s,     7008+    8,                            7008+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  7008+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            7024+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  7024+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            7028+    0,     4);
		API_polar::template xo <    4>(s,     7024+    0,  7024+    4,               7024+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  7024+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            7032+    0,     8);
		API_polar::template xo <    8>(s,     7024+    0,  7024+    8,               7024+    0,     8);
		API_polar::template xo <   16>(s,     7008+    0,  7008+   16,               7008+    0,    16);
		API_polar::template xo <   32>(s,     6976+    0,  6976+   32,               6976+    0,    32);
		API_polar::template xo <   64>(s,     6912+    0,  6912+   64,               6912+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128,  6912+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            7064+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  7064+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            7068+    0,     4);
		API_polar::template xo <    4>(s,     7064+    0,  7064+    4,               7064+    0,     4);
		API_polar::template xo0<    8>(s,     7056+    8,                            7056+    0,     8);
		API_polar::template xo0<   16>(s,     7040+   16,                            7040+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  7040+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            7072+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  7072+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            7080+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  7080+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            7084+    0,     4);
		API_polar::template xo <    4>(s,     7080+    0,  7080+    4,               7080+    0,     4);
		API_polar::template xo <    8>(s,     7072+    0,  7072+    8,               7072+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  7072+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            7088+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  7088+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            7092+    0,     4);
		API_polar::template xo <    4>(s,     7088+    0,  7088+    4,               7088+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  7088+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            7096+    0,     8);
		API_polar::template xo <    8>(s,     7088+    0,  7088+    8,               7088+    0,     8);
		API_polar::template xo <   16>(s,     7072+    0,  7072+   16,               7072+    0,    16);
		API_polar::template xo <   32>(s,     7040+    0,  7040+   32,               7040+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  7040+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            7104+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  7104+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            7112+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  7112+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            7116+    0,     4);
		API_polar::template xo <    4>(s,     7112+    0,  7112+    4,               7112+    0,     4);
		API_polar::template xo <    8>(s,     7104+    0,  7104+    8,               7104+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  7104+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            7120+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  7120+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            7124+    0,     4);
		API_polar::template xo <    4>(s,     7120+    0,  7120+    4,               7120+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  7120+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            7128+    0,     8);
		API_polar::template xo <    8>(s,     7120+    0,  7120+    8,               7120+    0,     8);
		API_polar::template xo <   16>(s,     7104+    0,  7104+   16,               7104+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  7104+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            7136+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  7136+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                            7140+    0,     4);
		API_polar::template xo <    4>(s,     7136+    0,  7136+    4,               7136+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  7136+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                            7144+    0,     8);
		API_polar::template xo <    8>(s,     7136+    0,  7136+    8,               7136+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  7136+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                            7152+    0,    16);
		API_polar::template xo <   16>(s,     7136+    0,  7136+   16,               7136+    0,    16);
		API_polar::template xo <   32>(s,     7104+    0,  7104+   32,               7104+    0,    32);
		API_polar::template xo <   64>(s,     7040+    0,  7040+   64,               7040+    0,    64);
		API_polar::template xo <  128>(s,     6912+    0,  6912+  128,               6912+    0,   128);
		API_polar::template xo <  256>(s,     6656+    0,  6656+  256,               6656+    0,   256);
		API_polar::template xo <  512>(s,     6144+    0,  6144+  512,               6144+    0,   512);
		API_polar::template g  < 1024>(s, l, 61440+    0, 61440+ 1024,  6144+    0, 61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template rep<  128>(s, l, 65280+    0,                            7168+    0,   128);
		API_polar::template gr <  128>(s, l, 65024+    0, 65024+  128,  7168+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template rep<   64>(s, l, 65408+    0,                            7296+    0,    64);
		API_polar::template gr <   64>(s, l, 65280+    0, 65280+   64,  7296+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            7388+    0,     4);
		API_polar::template xo0<    4>(s,     7384+    4,                            7384+    0,     4);
		API_polar::template xo0<    8>(s,     7376+    8,                            7376+    0,     8);
		API_polar::template xo0<   16>(s,     7360+   16,                            7360+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  7360+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            7392+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  7392+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            7400+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  7400+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            7404+    0,     4);
		API_polar::template xo <    4>(s,     7400+    0,  7400+    4,               7400+    0,     4);
		API_polar::template xo <    8>(s,     7392+    0,  7392+    8,               7392+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  7392+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            7408+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  7408+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            7412+    0,     4);
		API_polar::template xo <    4>(s,     7408+    0,  7408+    4,               7408+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  7408+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            7416+    0,     8);
		API_polar::template xo <    8>(s,     7408+    0,  7408+    8,               7408+    0,     8);
		API_polar::template xo <   16>(s,     7392+    0,  7392+   16,               7392+    0,    16);
		API_polar::template xo <   32>(s,     7360+    0,  7360+   32,               7360+    0,    32);
		API_polar::template xo <   64>(s,     7296+    0,  7296+   64,               7296+    0,    64);
		API_polar::template xo <  128>(s,     7168+    0,  7168+  128,               7168+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256,  7168+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template g0 <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            7480+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  7480+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            7484+    0,     4);
		API_polar::template xo <    4>(s,     7480+    0,  7480+    4,               7480+    0,     4);
		API_polar::template xo0<    8>(s,     7472+    8,                            7472+    0,     8);
		API_polar::template xo0<   16>(s,     7456+   16,                            7456+    0,    16);
		API_polar::template xo0<   32>(s,     7424+   32,                            7424+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  7424+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                            7488+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16,  7488+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            7504+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  7504+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            7512+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  7512+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            7516+    0,     4);
		API_polar::template xo <    4>(s,     7512+    0,  7512+    4,               7512+    0,     4);
		API_polar::template xo <    8>(s,     7504+    0,  7504+    8,               7504+    0,     8);
		API_polar::template xo <   16>(s,     7488+    0,  7488+   16,               7488+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  7488+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            7520+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  7520+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            7528+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  7528+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            7532+    0,     4);
		API_polar::template xo <    4>(s,     7528+    0,  7528+    4,               7528+    0,     4);
		API_polar::template xo <    8>(s,     7520+    0,  7520+    8,               7520+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  7520+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            7536+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  7536+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            7540+    0,     4);
		API_polar::template xo <    4>(s,     7536+    0,  7536+    4,               7536+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  7536+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                            7544+    0,     8);
		API_polar::template xo <    8>(s,     7536+    0,  7536+    8,               7536+    0,     8);
		API_polar::template xo <   16>(s,     7520+    0,  7520+   16,               7520+    0,    16);
		API_polar::template xo <   32>(s,     7488+    0,  7488+   32,               7488+    0,    32);
		API_polar::template xo <   64>(s,     7424+    0,  7424+   64,               7424+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128,  7424+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                            7552+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16,  7552+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            7568+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  7568+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            7576+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  7576+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            7580+    0,     4);
		API_polar::template xo <    4>(s,     7576+    0,  7576+    4,               7576+    0,     4);
		API_polar::template xo <    8>(s,     7568+    0,  7568+    8,               7568+    0,     8);
		API_polar::template xo <   16>(s,     7552+    0,  7552+   16,               7552+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  7552+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            7584+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  7584+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            7592+    0,     8);
		API_polar::template xo <    8>(s,     7584+    0,  7584+    8,               7584+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  7584+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            7600+    0,    16);
		API_polar::template xo <   16>(s,     7584+    0,  7584+   16,               7584+    0,    16);
		API_polar::template xo <   32>(s,     7552+    0,  7552+   32,               7552+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  7552+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            7620+    0,     4);
		API_polar::template xo0<    4>(s,     7616+    4,                            7616+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  7616+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            7624+    0,     8);
		API_polar::template xo <    8>(s,     7616+    0,  7616+    8,               7616+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  7616+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            7632+    0,    16);
		API_polar::template xo <   16>(s,     7616+    0,  7616+   16,               7616+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  7616+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                            7648+    0,    32);
		API_polar::template xo <   32>(s,     7616+    0,  7616+   32,               7616+    0,    32);
		API_polar::template xo <   64>(s,     7552+    0,  7552+   64,               7552+    0,    64);
		API_polar::template xo <  128>(s,     7424+    0,  7424+  128,               7424+    0,   128);
		API_polar::template xo <  256>(s,     7168+    0,  7168+  256,               7168+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512,  7168+    0, 63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template g0 <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                            7712+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16,  7712+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            7728+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  7728+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            7736+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  7736+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            7740+    0,     4);
		API_polar::template xo <    4>(s,     7736+    0,  7736+    4,               7736+    0,     4);
		API_polar::template xo <    8>(s,     7728+    0,  7728+    8,               7728+    0,     8);
		API_polar::template xo <   16>(s,     7712+    0,  7712+   16,               7712+    0,    16);
		API_polar::template xo0<   32>(s,     7680+   32,                            7680+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  7680+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                            7744+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16,  7744+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            7760+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  7760+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                            7770+    0,     2);
		API_polar::template xo0<    2>(s,     7768+    2,                            7768+    0,     2);
		API_polar::template g  <    4>(s, l, 65520+    0, 65520+    4,  7768+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                            7772+    0,     4);
		API_polar::template xo <    4>(s,     7768+    0,  7768+    4,               7768+    0,     4);
		API_polar::template xo <    8>(s,     7760+    0,  7760+    8,               7760+    0,     8);
		API_polar::template xo <   16>(s,     7744+    0,  7744+   16,               7744+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  7744+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            7780+    0,     4);
		API_polar::template xo0<    4>(s,     7776+    4,                            7776+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  7776+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            7784+    0,     8);
		API_polar::template xo <    8>(s,     7776+    0,  7776+    8,               7776+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  7776+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            7792+    0,    16);
		API_polar::template xo <   16>(s,     7776+    0,  7776+   16,               7776+    0,    16);
		API_polar::template xo <   32>(s,     7744+    0,  7744+   32,               7744+    0,    32);
		API_polar::template xo <   64>(s,     7680+    0,  7680+   64,               7680+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128,  7680+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                            7822+    0,     2);
		API_polar::template xo0<    2>(s,     7820+    2,                            7820+    0,     2);
		API_polar::template xo0<    4>(s,     7816+    4,                            7816+    0,     4);
		API_polar::template xo0<    8>(s,     7808+    8,                            7808+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  7808+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            7824+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  7824+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            7828+    0,     4);
		API_polar::template xo <    4>(s,     7824+    0,  7824+    4,               7824+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  7824+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            7832+    0,     8);
		API_polar::template xo <    8>(s,     7824+    0,  7824+    8,               7824+    0,     8);
		API_polar::template xo <   16>(s,     7808+    0,  7808+   16,               7808+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  7808+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            7840+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  7840+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            7844+    0,     4);
		API_polar::template xo <    4>(s,     7840+    0,  7840+    4,               7840+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  7840+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            7848+    0,     8);
		API_polar::template xo <    8>(s,     7840+    0,  7840+    8,               7840+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  7840+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            7856+    0,    16);
		API_polar::template xo <   16>(s,     7840+    0,  7840+   16,               7840+    0,    16);
		API_polar::template xo <   32>(s,     7808+    0,  7808+   32,               7808+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  7808+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            7872+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  7872+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            7876+    0,     4);
		API_polar::template xo <    4>(s,     7872+    0,  7872+    4,               7872+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  7872+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            7880+    0,     8);
		API_polar::template xo <    8>(s,     7872+    0,  7872+    8,               7872+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  7872+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            7888+    0,    16);
		API_polar::template xo <   16>(s,     7872+    0,  7872+   16,               7872+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  7872+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                            7904+    0,    32);
		API_polar::template xo <   32>(s,     7872+    0,  7872+   32,               7872+    0,    32);
		API_polar::template xo <   64>(s,     7808+    0,  7808+   64,               7808+    0,    64);
		API_polar::template xo <  128>(s,     7680+    0,  7680+  128,               7680+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256,  7680+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            7936+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  7936+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            7944+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  7944+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            7948+    0,     4);
		API_polar::template xo <    4>(s,     7944+    0,  7944+    4,               7944+    0,     4);
		API_polar::template xo <    8>(s,     7936+    0,  7936+    8,               7936+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  7936+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            7952+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  7952+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            7956+    0,     4);
		API_polar::template xo <    4>(s,     7952+    0,  7952+    4,               7952+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  7952+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            7960+    0,     8);
		API_polar::template xo <    8>(s,     7952+    0,  7952+    8,               7952+    0,     8);
		API_polar::template xo <   16>(s,     7936+    0,  7936+   16,               7936+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  7936+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            7968+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  7968+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            7972+    0,     4);
		API_polar::template xo <    4>(s,     7968+    0,  7968+    4,               7968+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  7968+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            7976+    0,     8);
		API_polar::template xo <    8>(s,     7968+    0,  7968+    8,               7968+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  7968+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            7984+    0,    16);
		API_polar::template xo <   16>(s,     7968+    0,  7968+   16,               7968+    0,    16);
		API_polar::template xo <   32>(s,     7936+    0,  7936+   32,               7936+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  7936+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            8000+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  8000+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            8004+    0,     4);
		API_polar::template xo <    4>(s,     8000+    0,  8000+    4,               8000+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  8000+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            8008+    0,     8);
		API_polar::template xo <    8>(s,     8000+    0,  8000+    8,               8000+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  8000+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            8016+    0,    16);
		API_polar::template xo <   16>(s,     8000+    0,  8000+   16,               8000+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  8000+    0, 65408+   64,    32);
		API_polar::template h  <   32>(s, l, 65472+    0,                            8032+    0,    32);
		API_polar::template xo <   32>(s,     8000+    0,  8000+   32,               8000+    0,    32);
		API_polar::template xo <   64>(s,     7936+    0,  7936+   64,               7936+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128,  7936+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            8064+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  8064+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            8068+    0,     4);
		API_polar::template xo <    4>(s,     8064+    0,  8064+    4,               8064+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  8064+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                            8072+    0,     8);
		API_polar::template xo <    8>(s,     8064+    0,  8064+    8,               8064+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  8064+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                            8080+    0,    16);
		API_polar::template xo <   16>(s,     8064+    0,  8064+   16,               8064+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  8064+    0, 65408+   64,    32);
		API_polar::template h  <   32>(s, l, 65472+    0,                            8096+    0,    32);
		API_polar::template xo <   32>(s,     8064+    0,  8064+   32,               8064+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  8064+    0, 65280+  128,    64);
		API_polar::template h  <   64>(s, l, 65408+    0,                            8128+    0,    64);
		API_polar::template xo <   64>(s,     8064+    0,  8064+   64,               8064+    0,    64);
		API_polar::template xo <  128>(s,     7936+    0,  7936+  128,               7936+    0,   128);
		API_polar::template xo <  256>(s,     7680+    0,  7680+  256,               7680+    0,   256);
		API_polar::template xo <  512>(s,     7168+    0,  7168+  512,               7168+    0,   512);
		API_polar::template xo < 1024>(s,     6144+    0,  6144+ 1024,               6144+    0,  1024);
		API_polar::template xo < 2048>(s,     4096+    0,  4096+ 2048,               4096+    0,  2048);
		API_polar::template xo < 4096>(s,        0+    0,     0+ 4096,                  0+    0,  4096);
		API_polar::template g  < 8192>(s, l, 32768+    0, 32768+ 8192,     0+    0, 32768+16384,  8192);
		API_polar::template f  < 4096>(   l, 49152+    0, 49152+ 4096,              49152+ 8192,  4096);
		API_polar::template f  < 2048>(   l, 57344+    0, 57344+ 2048,              57344+ 4096,  2048);
		API_polar::template f  < 1024>(   l, 61440+    0, 61440+ 1024,              61440+ 2048,  1024);
		API_polar::template g0 <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template g0 <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template g0 <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template g0 <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template g0 <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            9208+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  9208+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            9212+    0,     4);
		API_polar::template xo <    4>(s,     9208+    0,  9208+    4,               9208+    0,     4);
		API_polar::template xo0<    8>(s,     9200+    8,                            9200+    0,     8);
		API_polar::template xo0<   16>(s,     9184+   16,                            9184+    0,    16);
		API_polar::template xo0<   32>(s,     9152+   32,                            9152+    0,    32);
		API_polar::template xo0<   64>(s,     9088+   64,                            9088+    0,    64);
		API_polar::template xo0<  128>(s,     8960+  128,                            8960+    0,   128);
		API_polar::template xo0<  256>(s,     8704+  256,                            8704+    0,   256);
		API_polar::template xo0<  512>(s,     8192+  512,                            8192+    0,   512);
		API_polar::template g  < 1024>(s, l, 61440+    0, 61440+ 1024,  8192+    0, 61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template g0 <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template g0 <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template g0 <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template g0 <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                            9696+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16,  9696+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            9712+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  9712+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            9720+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  9720+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            9724+    0,     4);
		API_polar::template xo <    4>(s,     9720+    0,  9720+    4,               9720+    0,     4);
		API_polar::template xo <    8>(s,     9712+    0,  9712+    8,               9712+    0,     8);
		API_polar::template xo <   16>(s,     9696+    0,  9696+   16,               9696+    0,    16);
		API_polar::template xo0<   32>(s,     9664+   32,                            9664+    0,    32);
		API_polar::template xo0<   64>(s,     9600+   64,                            9600+    0,    64);
		API_polar::template xo0<  128>(s,     9472+  128,                            9472+    0,   128);
		API_polar::template xo0<  256>(s,     9216+  256,                            9216+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512,  9216+    0, 63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template g0 <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template rep<   64>(s, l, 65408+    0,                            9856+    0,    64);
		API_polar::template gr <   64>(s, l, 65280+    0, 65280+   64,  9856+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                            9920+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32,  9920+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                            9966+    0,     2);
		API_polar::template xo0<    2>(s,     9964+    2,                            9964+    0,     2);
		API_polar::template xo0<    4>(s,     9960+    4,                            9960+    0,     4);
		API_polar::template xo0<    8>(s,     9952+    8,                            9952+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  9952+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            9968+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  9968+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            9972+    0,     4);
		API_polar::template xo <    4>(s,     9968+    0,  9968+    4,               9968+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  9968+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            9976+    0,     8);
		API_polar::template xo <    8>(s,     9968+    0,  9968+    8,               9968+    0,     8);
		API_polar::template xo <   16>(s,     9952+    0,  9952+   16,               9952+    0,    16);
		API_polar::template xo <   32>(s,     9920+    0,  9920+   32,               9920+    0,    32);
		API_polar::template xo <   64>(s,     9856+    0,  9856+   64,               9856+    0,    64);
		API_polar::template xo0<  128>(s,     9728+  128,                            9728+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256,  9728+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template rep<   64>(s, l, 65408+    0,                            9984+    0,    64);
		API_polar::template gr <   64>(s, l, 65280+    0, 65280+   64,  9984+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           10072+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 10072+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           10076+    0,     4);
		API_polar::template xo <    4>(s,    10072+    0, 10072+    4,              10072+    0,     4);
		API_polar::template xo0<    8>(s,    10064+    8,                           10064+    0,     8);
		API_polar::template xo0<   16>(s,    10048+   16,                           10048+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 10048+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           10080+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 10080+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           10088+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 10088+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           10092+    0,     4);
		API_polar::template xo <    4>(s,    10088+    0, 10088+    4,              10088+    0,     4);
		API_polar::template xo <    8>(s,    10080+    0, 10080+    8,              10080+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 10080+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           10096+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 10096+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           10100+    0,     4);
		API_polar::template xo <    4>(s,    10096+    0, 10096+    4,              10096+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 10096+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           10104+    0,     8);
		API_polar::template xo <    8>(s,    10096+    0, 10096+    8,              10096+    0,     8);
		API_polar::template xo <   16>(s,    10080+    0, 10080+   16,              10080+    0,    16);
		API_polar::template xo <   32>(s,    10048+    0, 10048+   32,              10048+    0,    32);
		API_polar::template xo <   64>(s,     9984+    0,  9984+   64,               9984+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128,  9984+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           10112+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 10112+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           10128+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 10128+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           10136+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 10136+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           10140+    0,     4);
		API_polar::template xo <    4>(s,    10136+    0, 10136+    4,              10136+    0,     4);
		API_polar::template xo <    8>(s,    10128+    0, 10128+    8,              10128+    0,     8);
		API_polar::template xo <   16>(s,    10112+    0, 10112+   16,              10112+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 10112+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           10144+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 10144+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           10152+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 10152+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           10156+    0,     4);
		API_polar::template xo <    4>(s,    10152+    0, 10152+    4,              10152+    0,     4);
		API_polar::template xo <    8>(s,    10144+    0, 10144+    8,              10144+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 10144+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           10160+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 10160+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           10164+    0,     4);
		API_polar::template xo <    4>(s,    10160+    0, 10160+    4,              10160+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 10160+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                           10168+    0,     8);
		API_polar::template xo <    8>(s,    10160+    0, 10160+    8,              10160+    0,     8);
		API_polar::template xo <   16>(s,    10144+    0, 10144+   16,              10144+    0,    16);
		API_polar::template xo <   32>(s,    10112+    0, 10112+   32,              10112+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 10112+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           10176+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 10176+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                           10186+    0,     2);
		API_polar::template xo0<    2>(s,    10184+    2,                           10184+    0,     2);
		API_polar::template g  <    4>(s, l, 65520+    0, 65520+    4, 10184+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           10188+    0,     4);
		API_polar::template xo <    4>(s,    10184+    0, 10184+    4,              10184+    0,     4);
		API_polar::template xo <    8>(s,    10176+    0, 10176+    8,              10176+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 10176+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           10192+    0,    16);
		API_polar::template xo <   16>(s,    10176+    0, 10176+   16,              10176+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 10176+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           10208+    0,    32);
		API_polar::template xo <   32>(s,    10176+    0, 10176+   32,              10176+    0,    32);
		API_polar::template xo <   64>(s,    10112+    0, 10112+   64,              10112+    0,    64);
		API_polar::template xo <  128>(s,     9984+    0,  9984+  128,               9984+    0,   128);
		API_polar::template xo <  256>(s,     9728+    0,  9728+  256,               9728+    0,   256);
		API_polar::template xo <  512>(s,     9216+    0,  9216+  512,               9216+    0,   512);
		API_polar::template xo < 1024>(s,     8192+    0,  8192+ 1024,               8192+    0,  1024);
		API_polar::template g  < 2048>(s, l, 57344+    0, 57344+ 2048,  8192+    0, 57344+ 4096,  2048);
		API_polar::template f  < 1024>(   l, 61440+    0, 61440+ 1024,              61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template g0 <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template rep<  128>(s, l, 65280+    0,                           10496+    0,   128);
		API_polar::template gr <  128>(s, l, 65024+    0, 65024+  128, 10496+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template rep<   64>(s, l, 65408+    0,                           10624+    0,    64);
		API_polar::template gr <   64>(s, l, 65280+    0, 65280+   64, 10624+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                           10718+    0,     2);
		API_polar::template xo0<    2>(s,    10716+    2,                           10716+    0,     2);
		API_polar::template xo0<    4>(s,    10712+    4,                           10712+    0,     4);
		API_polar::template xo0<    8>(s,    10704+    8,                           10704+    0,     8);
		API_polar::template xo0<   16>(s,    10688+   16,                           10688+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 10688+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           10728+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 10728+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           10732+    0,     4);
		API_polar::template xo <    4>(s,    10728+    0, 10728+    4,              10728+    0,     4);
		API_polar::template xo0<    8>(s,    10720+    8,                           10720+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 10720+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           10736+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 10736+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           10740+    0,     4);
		API_polar::template xo <    4>(s,    10736+    0, 10736+    4,              10736+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 10736+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           10744+    0,     8);
		API_polar::template xo <    8>(s,    10736+    0, 10736+    8,              10736+    0,     8);
		API_polar::template xo <   16>(s,    10720+    0, 10720+   16,              10720+    0,    16);
		API_polar::template xo <   32>(s,    10688+    0, 10688+   32,              10688+    0,    32);
		API_polar::template xo <   64>(s,    10624+    0, 10624+   64,              10624+    0,    64);
		API_polar::template xo <  128>(s,    10496+    0, 10496+  128,              10496+    0,   128);
		API_polar::template xo0<  256>(s,    10240+  256,                           10240+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512, 10240+    0, 63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template rep<  128>(s, l, 65280+    0,                           10752+    0,   128);
		API_polar::template gr <  128>(s, l, 65024+    0, 65024+  128, 10752+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template g0 <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           10936+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 10936+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           10940+    0,     4);
		API_polar::template xo <    4>(s,    10936+    0, 10936+    4,              10936+    0,     4);
		API_polar::template xo0<    8>(s,    10928+    8,                           10928+    0,     8);
		API_polar::template xo0<   16>(s,    10912+   16,                           10912+    0,    16);
		API_polar::template xo0<   32>(s,    10880+   32,                           10880+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 10880+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           10944+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 10944+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           10960+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 10960+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           10968+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 10968+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           10972+    0,     4);
		API_polar::template xo <    4>(s,    10968+    0, 10968+    4,              10968+    0,     4);
		API_polar::template xo <    8>(s,    10960+    0, 10960+    8,              10960+    0,     8);
		API_polar::template xo <   16>(s,    10944+    0, 10944+   16,              10944+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 10944+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           10976+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 10976+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           10984+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 10984+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           10988+    0,     4);
		API_polar::template xo <    4>(s,    10984+    0, 10984+    4,              10984+    0,     4);
		API_polar::template xo <    8>(s,    10976+    0, 10976+    8,              10976+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 10976+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           10992+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 10992+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           10996+    0,     4);
		API_polar::template xo <    4>(s,    10992+    0, 10992+    4,              10992+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 10992+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                           11000+    0,     8);
		API_polar::template xo <    8>(s,    10992+    0, 10992+    8,              10992+    0,     8);
		API_polar::template xo <   16>(s,    10976+    0, 10976+   16,              10976+    0,    16);
		API_polar::template xo <   32>(s,    10944+    0, 10944+   32,              10944+    0,    32);
		API_polar::template xo <   64>(s,    10880+    0, 10880+   64,              10880+    0,    64);
		API_polar::template xo <  128>(s,    10752+    0, 10752+  128,              10752+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 10752+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template g0 <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           11040+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 11040+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           11056+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 11056+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           11064+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 11064+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           11068+    0,     4);
		API_polar::template xo <    4>(s,    11064+    0, 11064+    4,              11064+    0,     4);
		API_polar::template xo <    8>(s,    11056+    0, 11056+    8,              11056+    0,     8);
		API_polar::template xo <   16>(s,    11040+    0, 11040+   16,              11040+    0,    16);
		API_polar::template xo0<   32>(s,    11008+   32,                           11008+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 11008+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           11072+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 11072+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           11088+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 11088+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                           11098+    0,     2);
		API_polar::template xo0<    2>(s,    11096+    2,                           11096+    0,     2);
		API_polar::template g  <    4>(s, l, 65520+    0, 65520+    4, 11096+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           11100+    0,     4);
		API_polar::template xo <    4>(s,    11096+    0, 11096+    4,              11096+    0,     4);
		API_polar::template xo <    8>(s,    11088+    0, 11088+    8,              11088+    0,     8);
		API_polar::template xo <   16>(s,    11072+    0, 11072+   16,              11072+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 11072+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           11108+    0,     4);
		API_polar::template xo0<    4>(s,    11104+    4,                           11104+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 11104+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           11112+    0,     8);
		API_polar::template xo <    8>(s,    11104+    0, 11104+    8,              11104+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 11104+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           11120+    0,    16);
		API_polar::template xo <   16>(s,    11104+    0, 11104+   16,              11104+    0,    16);
		API_polar::template xo <   32>(s,    11072+    0, 11072+   32,              11072+    0,    32);
		API_polar::template xo <   64>(s,    11008+    0, 11008+   64,              11008+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 11008+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                           11150+    0,     2);
		API_polar::template xo0<    2>(s,    11148+    2,                           11148+    0,     2);
		API_polar::template xo0<    4>(s,    11144+    4,                           11144+    0,     4);
		API_polar::template xo0<    8>(s,    11136+    8,                           11136+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 11136+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           11152+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 11152+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           11156+    0,     4);
		API_polar::template xo <    4>(s,    11152+    0, 11152+    4,              11152+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 11152+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           11160+    0,     8);
		API_polar::template xo <    8>(s,    11152+    0, 11152+    8,              11152+    0,     8);
		API_polar::template xo <   16>(s,    11136+    0, 11136+   16,              11136+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 11136+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           11168+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 11168+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           11172+    0,     4);
		API_polar::template xo <    4>(s,    11168+    0, 11168+    4,              11168+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 11168+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           11176+    0,     8);
		API_polar::template xo <    8>(s,    11168+    0, 11168+    8,              11168+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 11168+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           11184+    0,    16);
		API_polar::template xo <   16>(s,    11168+    0, 11168+   16,              11168+    0,    16);
		API_polar::template xo <   32>(s,    11136+    0, 11136+   32,              11136+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 11136+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           11200+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 11200+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           11204+    0,     4);
		API_polar::template xo <    4>(s,    11200+    0, 11200+    4,              11200+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 11200+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           11208+    0,     8);
		API_polar::template xo <    8>(s,    11200+    0, 11200+    8,              11200+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 11200+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           11216+    0,    16);
		API_polar::template xo <   16>(s,    11200+    0, 11200+   16,              11200+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 11200+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           11232+    0,    32);
		API_polar::template xo <   32>(s,    11200+    0, 11200+   32,              11200+    0,    32);
		API_polar::template xo <   64>(s,    11136+    0, 11136+   64,              11136+    0,    64);
		API_polar::template xo <  128>(s,    11008+    0, 11008+  128,              11008+    0,   128);
		API_polar::template xo <  256>(s,    10752+    0, 10752+  256,              10752+    0,   256);
		API_polar::template xo <  512>(s,    10240+    0, 10240+  512,              10240+    0,   512);
		API_polar::template g  < 1024>(s, l, 61440+    0, 61440+ 1024, 10240+    0, 61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template g0 <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template g0 <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           11360+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 11360+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           11376+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 11376+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           11384+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 11384+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           11388+    0,     4);
		API_polar::template xo <    4>(s,    11384+    0, 11384+    4,              11384+    0,     4);
		API_polar::template xo <    8>(s,    11376+    0, 11376+    8,              11376+    0,     8);
		API_polar::template xo <   16>(s,    11360+    0, 11360+   16,              11360+    0,    16);
		API_polar::template xo0<   32>(s,    11328+   32,                           11328+    0,    32);
		API_polar::template xo0<   64>(s,    11264+   64,                           11264+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 11264+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                           11392+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32, 11392+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           11424+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 11424+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           11440+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 11440+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           11448+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 11448+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           11452+    0,     4);
		API_polar::template xo <    4>(s,    11448+    0, 11448+    4,              11448+    0,     4);
		API_polar::template xo <    8>(s,    11440+    0, 11440+    8,              11440+    0,     8);
		API_polar::template xo <   16>(s,    11424+    0, 11424+   16,              11424+    0,    16);
		API_polar::template xo <   32>(s,    11392+    0, 11392+   32,              11392+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 11392+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           11456+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 11456+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           11476+    0,     4);
		API_polar::template xo0<    4>(s,    11472+    4,                           11472+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 11472+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           11480+    0,     8);
		API_polar::template xo <    8>(s,    11472+    0, 11472+    8,              11472+    0,     8);
		API_polar::template xo <   16>(s,    11456+    0, 11456+   16,              11456+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 11456+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           11488+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 11488+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           11492+    0,     4);
		API_polar::template xo <    4>(s,    11488+    0, 11488+    4,              11488+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 11488+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           11496+    0,     8);
		API_polar::template xo <    8>(s,    11488+    0, 11488+    8,              11488+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 11488+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           11504+    0,    16);
		API_polar::template xo <   16>(s,    11488+    0, 11488+   16,              11488+    0,    16);
		API_polar::template xo <   32>(s,    11456+    0, 11456+   32,              11456+    0,    32);
		API_polar::template xo <   64>(s,    11392+    0, 11392+   64,              11392+    0,    64);
		API_polar::template xo <  128>(s,    11264+    0, 11264+  128,              11264+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 11264+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                           11520+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32, 11520+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                           11566+    0,     2);
		API_polar::template xo0<    2>(s,    11564+    2,                           11564+    0,     2);
		API_polar::template xo0<    4>(s,    11560+    4,                           11560+    0,     4);
		API_polar::template xo0<    8>(s,    11552+    8,                           11552+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 11552+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           11568+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 11568+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           11572+    0,     4);
		API_polar::template xo <    4>(s,    11568+    0, 11568+    4,              11568+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 11568+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           11576+    0,     8);
		API_polar::template xo <    8>(s,    11568+    0, 11568+    8,              11568+    0,     8);
		API_polar::template xo <   16>(s,    11552+    0, 11552+   16,              11552+    0,    16);
		API_polar::template xo <   32>(s,    11520+    0, 11520+   32,              11520+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 11520+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           11592+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 11592+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           11596+    0,     4);
		API_polar::template xo <    4>(s,    11592+    0, 11592+    4,              11592+    0,     4);
		API_polar::template xo0<    8>(s,    11584+    8,                           11584+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 11584+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           11600+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 11600+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           11604+    0,     4);
		API_polar::template xo <    4>(s,    11600+    0, 11600+    4,              11600+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 11600+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           11608+    0,     8);
		API_polar::template xo <    8>(s,    11600+    0, 11600+    8,              11600+    0,     8);
		API_polar::template xo <   16>(s,    11584+    0, 11584+   16,              11584+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 11584+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           11616+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 11616+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           11620+    0,     4);
		API_polar::template xo <    4>(s,    11616+    0, 11616+    4,              11616+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 11616+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           11624+    0,     8);
		API_polar::template xo <    8>(s,    11616+    0, 11616+    8,              11616+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 11616+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           11632+    0,    16);
		API_polar::template xo <   16>(s,    11616+    0, 11616+   16,              11616+    0,    16);
		API_polar::template xo <   32>(s,    11584+    0, 11584+   32,              11584+    0,    32);
		API_polar::template xo <   64>(s,    11520+    0, 11520+   64,              11520+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 11520+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           11648+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 11648+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           11656+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 11656+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           11660+    0,     4);
		API_polar::template xo <    4>(s,    11656+    0, 11656+    4,              11656+    0,     4);
		API_polar::template xo <    8>(s,    11648+    0, 11648+    8,              11648+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 11648+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           11664+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 11664+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           11668+    0,     4);
		API_polar::template xo <    4>(s,    11664+    0, 11664+    4,              11664+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 11664+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           11672+    0,     8);
		API_polar::template xo <    8>(s,    11664+    0, 11664+    8,              11664+    0,     8);
		API_polar::template xo <   16>(s,    11648+    0, 11648+   16,              11648+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 11648+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           11680+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 11680+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           11684+    0,     4);
		API_polar::template xo <    4>(s,    11680+    0, 11680+    4,              11680+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 11680+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           11688+    0,     8);
		API_polar::template xo <    8>(s,    11680+    0, 11680+    8,              11680+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 11680+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                           11696+    0,    16);
		API_polar::template xo <   16>(s,    11680+    0, 11680+   16,              11680+    0,    16);
		API_polar::template xo <   32>(s,    11648+    0, 11648+   32,              11648+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 11648+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           11712+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 11712+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           11716+    0,     4);
		API_polar::template xo <    4>(s,    11712+    0, 11712+    4,              11712+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 11712+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                           11720+    0,     8);
		API_polar::template xo <    8>(s,    11712+    0, 11712+    8,              11712+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 11712+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                           11728+    0,    16);
		API_polar::template xo <   16>(s,    11712+    0, 11712+   16,              11712+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 11712+    0, 65408+   64,    32);
		API_polar::template h  <   32>(s, l, 65472+    0,                           11744+    0,    32);
		API_polar::template xo <   32>(s,    11712+    0, 11712+   32,              11712+    0,    32);
		API_polar::template xo <   64>(s,    11648+    0, 11648+   64,              11648+    0,    64);
		API_polar::template xo <  128>(s,    11520+    0, 11520+  128,              11520+    0,   128);
		API_polar::template xo <  256>(s,    11264+    0, 11264+  256,              11264+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512, 11264+    0, 63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           11800+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 11800+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           11804+    0,     4);
		API_polar::template xo <    4>(s,    11800+    0, 11800+    4,              11800+    0,     4);
		API_polar::template xo0<    8>(s,    11792+    8,                           11792+    0,     8);
		API_polar::template xo0<   16>(s,    11776+   16,                           11776+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 11776+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           11808+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 11808+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           11816+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 11816+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           11820+    0,     4);
		API_polar::template xo <    4>(s,    11816+    0, 11816+    4,              11816+    0,     4);
		API_polar::template xo <    8>(s,    11808+    0, 11808+    8,              11808+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 11808+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           11824+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 11824+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           11828+    0,     4);
		API_polar::template xo <    4>(s,    11824+    0, 11824+    4,              11824+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 11824+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           11832+    0,     8);
		API_polar::template xo <    8>(s,    11824+    0, 11824+    8,              11824+    0,     8);
		API_polar::template xo <   16>(s,    11808+    0, 11808+   16,              11808+    0,    16);
		API_polar::template xo <   32>(s,    11776+    0, 11776+   32,              11776+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 11776+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           11840+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 11840+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           11848+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 11848+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           11852+    0,     4);
		API_polar::template xo <    4>(s,    11848+    0, 11848+    4,              11848+    0,     4);
		API_polar::template xo <    8>(s,    11840+    0, 11840+    8,              11840+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 11840+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           11856+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 11856+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           11860+    0,     4);
		API_polar::template xo <    4>(s,    11856+    0, 11856+    4,              11856+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 11856+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           11864+    0,     8);
		API_polar::template xo <    8>(s,    11856+    0, 11856+    8,              11856+    0,     8);
		API_polar::template xo <   16>(s,    11840+    0, 11840+   16,              11840+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 11840+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           11872+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 11872+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           11876+    0,     4);
		API_polar::template xo <    4>(s,    11872+    0, 11872+    4,              11872+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 11872+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                           11880+    0,     8);
		API_polar::template xo <    8>(s,    11872+    0, 11872+    8,              11872+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 11872+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                           11888+    0,    16);
		API_polar::template xo <   16>(s,    11872+    0, 11872+   16,              11872+    0,    16);
		API_polar::template xo <   32>(s,    11840+    0, 11840+   32,              11840+    0,    32);
		API_polar::template xo <   64>(s,    11776+    0, 11776+   64,              11776+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 11776+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           11904+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 11904+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           11912+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 11912+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           11916+    0,     4);
		API_polar::template xo <    4>(s,    11912+    0, 11912+    4,              11912+    0,     4);
		API_polar::template xo <    8>(s,    11904+    0, 11904+    8,              11904+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 11904+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                           11922+    0,     2);
		API_polar::template xo0<    2>(s,    11920+    2,                           11920+    0,     2);
		API_polar::template g  <    4>(s, l, 65520+    0, 65520+    4, 11920+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           11924+    0,     4);
		API_polar::template xo <    4>(s,    11920+    0, 11920+    4,              11920+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 11920+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                           11928+    0,     8);
		API_polar::template xo <    8>(s,    11920+    0, 11920+    8,              11920+    0,     8);
		API_polar::template xo <   16>(s,    11904+    0, 11904+   16,              11904+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 11904+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           11936+    0,    32);
		API_polar::template xo <   32>(s,    11904+    0, 11904+   32,              11904+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 11904+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           11968+    0,    64);
		API_polar::template xo <   64>(s,    11904+    0, 11904+   64,              11904+    0,    64);
		API_polar::template xo <  128>(s,    11776+    0, 11776+  128,              11776+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 11776+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                           12038+    0,     2);
		API_polar::template xo0<    2>(s,    12036+    2,                           12036+    0,     2);
		API_polar::template xo0<    4>(s,    12032+    4,                           12032+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 12032+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           12040+    0,     8);
		API_polar::template xo <    8>(s,    12032+    0, 12032+    8,              12032+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 12032+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           12048+    0,    16);
		API_polar::template xo <   16>(s,    12032+    0, 12032+   16,              12032+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 12032+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           12064+    0,    32);
		API_polar::template xo <   32>(s,    12032+    0, 12032+   32,              12032+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 12032+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           12096+    0,    64);
		API_polar::template xo <   64>(s,    12032+    0, 12032+   64,              12032+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 12032+    0, 65024+  256,   128);
		API_polar::template spc<  128>(s, l, 65280+    0,                           12160+    0,   128);
		API_polar::template xo <  128>(s,    12032+    0, 12032+  128,              12032+    0,   128);
		API_polar::template xo <  256>(s,    11776+    0, 11776+  256,              11776+    0,   256);
		API_polar::template xo <  512>(s,    11264+    0, 11264+  512,              11264+    0,   512);
		API_polar::template xo < 1024>(s,    10240+    0, 10240+ 1024,              10240+    0,  1024);
		API_polar::template xo < 2048>(s,     8192+    0,  8192+ 2048,               8192+    0,  2048);
		API_polar::template g  < 4096>(s, l, 49152+    0, 49152+ 4096,  8192+    0, 49152+ 8192,  4096);
		API_polar::template f  < 2048>(   l, 57344+    0, 57344+ 2048,              57344+ 4096,  2048);
		API_polar::template f  < 1024>(   l, 61440+    0, 61440+ 1024,              61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template rep<  256>(s, l, 65024+    0,                           12288+    0,   256);
		API_polar::template gr <  256>(s, l, 64512+    0, 64512+  256, 12288+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template g0 <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template g0 <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           12664+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 12664+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           12668+    0,     4);
		API_polar::template xo <    4>(s,    12664+    0, 12664+    4,              12664+    0,     4);
		API_polar::template xo0<    8>(s,    12656+    8,                           12656+    0,     8);
		API_polar::template xo0<   16>(s,    12640+   16,                           12640+    0,    16);
		API_polar::template xo0<   32>(s,    12608+   32,                           12608+    0,    32);
		API_polar::template xo0<   64>(s,    12544+   64,                           12544+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 12544+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template g0 <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           12704+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 12704+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           12720+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 12720+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           12728+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 12728+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           12732+    0,     4);
		API_polar::template xo <    4>(s,    12728+    0, 12728+    4,              12728+    0,     4);
		API_polar::template xo <    8>(s,    12720+    0, 12720+    8,              12720+    0,     8);
		API_polar::template xo <   16>(s,    12704+    0, 12704+   16,              12704+    0,    16);
		API_polar::template xo0<   32>(s,    12672+   32,                           12672+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 12672+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           12736+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 12736+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           12752+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 12752+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           12760+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 12760+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           12764+    0,     4);
		API_polar::template xo <    4>(s,    12760+    0, 12760+    4,              12760+    0,     4);
		API_polar::template xo <    8>(s,    12752+    0, 12752+    8,              12752+    0,     8);
		API_polar::template xo <   16>(s,    12736+    0, 12736+   16,              12736+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 12736+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                           12774+    0,     2);
		API_polar::template xo0<    2>(s,    12772+    2,                           12772+    0,     2);
		API_polar::template xo0<    4>(s,    12768+    4,                           12768+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 12768+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           12776+    0,     8);
		API_polar::template xo <    8>(s,    12768+    0, 12768+    8,              12768+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 12768+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           12784+    0,    16);
		API_polar::template xo <   16>(s,    12768+    0, 12768+   16,              12768+    0,    16);
		API_polar::template xo <   32>(s,    12736+    0, 12736+   32,              12736+    0,    32);
		API_polar::template xo <   64>(s,    12672+    0, 12672+   64,              12672+    0,    64);
		API_polar::template xo <  128>(s,    12544+    0, 12544+  128,              12544+    0,   128);
		API_polar::template xo <  256>(s,    12288+    0, 12288+  256,              12288+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512, 12288+    0, 63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template g0 <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                           12864+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32, 12864+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           12896+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 12896+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           12912+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 12912+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           12920+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 12920+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           12924+    0,     4);
		API_polar::template xo <    4>(s,    12920+    0, 12920+    4,              12920+    0,     4);
		API_polar::template xo <    8>(s,    12912+    0, 12912+    8,              12912+    0,     8);
		API_polar::template xo <   16>(s,    12896+    0, 12896+   16,              12896+    0,    16);
		API_polar::template xo <   32>(s,    12864+    0, 12864+   32,              12864+    0,    32);
		API_polar::template xo0<   64>(s,    12800+   64,                           12800+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 12800+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                           12928+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32, 12928+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           12960+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 12960+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           12980+    0,     4);
		API_polar::template xo0<    4>(s,    12976+    4,                           12976+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 12976+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           12984+    0,     8);
		API_polar::template xo <    8>(s,    12976+    0, 12976+    8,              12976+    0,     8);
		API_polar::template xo <   16>(s,    12960+    0, 12960+   16,              12960+    0,    16);
		API_polar::template xo <   32>(s,    12928+    0, 12928+   32,              12928+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 12928+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           13000+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 13000+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           13004+    0,     4);
		API_polar::template xo <    4>(s,    13000+    0, 13000+    4,              13000+    0,     4);
		API_polar::template xo0<    8>(s,    12992+    8,                           12992+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 12992+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           13008+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 13008+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           13012+    0,     4);
		API_polar::template xo <    4>(s,    13008+    0, 13008+    4,              13008+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 13008+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           13016+    0,     8);
		API_polar::template xo <    8>(s,    13008+    0, 13008+    8,              13008+    0,     8);
		API_polar::template xo <   16>(s,    12992+    0, 12992+   16,              12992+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 12992+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           13024+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 13024+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           13028+    0,     4);
		API_polar::template xo <    4>(s,    13024+    0, 13024+    4,              13024+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 13024+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           13032+    0,     8);
		API_polar::template xo <    8>(s,    13024+    0, 13024+    8,              13024+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 13024+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           13040+    0,    16);
		API_polar::template xo <   16>(s,    13024+    0, 13024+   16,              13024+    0,    16);
		API_polar::template xo <   32>(s,    12992+    0, 12992+   32,              12992+    0,    32);
		API_polar::template xo <   64>(s,    12928+    0, 12928+   64,              12928+    0,    64);
		API_polar::template xo <  128>(s,    12800+    0, 12800+  128,              12800+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 12800+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           13084+    0,     4);
		API_polar::template xo0<    4>(s,    13080+    4,                           13080+    0,     4);
		API_polar::template xo0<    8>(s,    13072+    8,                           13072+    0,     8);
		API_polar::template xo0<   16>(s,    13056+   16,                           13056+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 13056+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           13096+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 13096+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           13100+    0,     4);
		API_polar::template xo <    4>(s,    13096+    0, 13096+    4,              13096+    0,     4);
		API_polar::template xo0<    8>(s,    13088+    8,                           13088+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 13088+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           13104+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 13104+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           13108+    0,     4);
		API_polar::template xo <    4>(s,    13104+    0, 13104+    4,              13104+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 13104+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           13112+    0,     8);
		API_polar::template xo <    8>(s,    13104+    0, 13104+    8,              13104+    0,     8);
		API_polar::template xo <   16>(s,    13088+    0, 13088+   16,              13088+    0,    16);
		API_polar::template xo <   32>(s,    13056+    0, 13056+   32,              13056+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 13056+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           13120+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 13120+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           13128+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 13128+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           13132+    0,     4);
		API_polar::template xo <    4>(s,    13128+    0, 13128+    4,              13128+    0,     4);
		API_polar::template xo <    8>(s,    13120+    0, 13120+    8,              13120+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 13120+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           13136+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 13136+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           13140+    0,     4);
		API_polar::template xo <    4>(s,    13136+    0, 13136+    4,              13136+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 13136+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           13144+    0,     8);
		API_polar::template xo <    8>(s,    13136+    0, 13136+    8,              13136+    0,     8);
		API_polar::template xo <   16>(s,    13120+    0, 13120+   16,              13120+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 13120+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           13152+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 13152+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           13156+    0,     4);
		API_polar::template xo <    4>(s,    13152+    0, 13152+    4,              13152+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 13152+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           13160+    0,     8);
		API_polar::template xo <    8>(s,    13152+    0, 13152+    8,              13152+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 13152+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                           13168+    0,    16);
		API_polar::template xo <   16>(s,    13152+    0, 13152+   16,              13152+    0,    16);
		API_polar::template xo <   32>(s,    13120+    0, 13120+   32,              13120+    0,    32);
		API_polar::template xo <   64>(s,    13056+    0, 13056+   64,              13056+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 13056+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           13184+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 13184+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           13192+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 13192+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           13196+    0,     4);
		API_polar::template xo <    4>(s,    13192+    0, 13192+    4,              13192+    0,     4);
		API_polar::template xo <    8>(s,    13184+    0, 13184+    8,              13184+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 13184+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           13200+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 13200+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           13204+    0,     4);
		API_polar::template xo <    4>(s,    13200+    0, 13200+    4,              13200+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 13200+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                           13208+    0,     8);
		API_polar::template xo <    8>(s,    13200+    0, 13200+    8,              13200+    0,     8);
		API_polar::template xo <   16>(s,    13184+    0, 13184+   16,              13184+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 13184+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                           13218+    0,     2);
		API_polar::template xo0<    2>(s,    13216+    2,                           13216+    0,     2);
		API_polar::template g  <    4>(s, l, 65520+    0, 65520+    4, 13216+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           13220+    0,     4);
		API_polar::template xo <    4>(s,    13216+    0, 13216+    4,              13216+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 13216+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                           13224+    0,     8);
		API_polar::template xo <    8>(s,    13216+    0, 13216+    8,              13216+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 13216+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                           13232+    0,    16);
		API_polar::template xo <   16>(s,    13216+    0, 13216+   16,              13216+    0,    16);
		API_polar::template xo <   32>(s,    13184+    0, 13184+   32,              13184+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 13184+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           13248+    0,    64);
		API_polar::template xo <   64>(s,    13184+    0, 13184+   64,              13184+    0,    64);
		API_polar::template xo <  128>(s,    13056+    0, 13056+  128,              13056+    0,   128);
		API_polar::template xo <  256>(s,    12800+    0, 12800+  256,              12800+    0,   256);
		API_polar::template xo <  512>(s,    12288+    0, 12288+  512,              12288+    0,   512);
		API_polar::template g  < 1024>(s, l, 61440+    0, 61440+ 1024, 12288+    0, 61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template rep<   64>(s, l, 65408+    0,                           13312+    0,    64);
		API_polar::template gr <   64>(s, l, 65280+    0, 65280+   64, 13312+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                           13376+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32, 13376+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           13420+    0,     4);
		API_polar::template xo0<    4>(s,    13416+    4,                           13416+    0,     4);
		API_polar::template xo0<    8>(s,    13408+    8,                           13408+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 13408+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           13424+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 13424+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           13428+    0,     4);
		API_polar::template xo <    4>(s,    13424+    0, 13424+    4,              13424+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 13424+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           13432+    0,     8);
		API_polar::template xo <    8>(s,    13424+    0, 13424+    8,              13424+    0,     8);
		API_polar::template xo <   16>(s,    13408+    0, 13408+   16,              13408+    0,    16);
		API_polar::template xo <   32>(s,    13376+    0, 13376+   32,              13376+    0,    32);
		API_polar::template xo <   64>(s,    13312+    0, 13312+   64,              13312+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 13312+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           13464+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 13464+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           13468+    0,     4);
		API_polar::template xo <    4>(s,    13464+    0, 13464+    4,              13464+    0,     4);
		API_polar::template xo0<    8>(s,    13456+    8,                           13456+    0,     8);
		API_polar::template xo0<   16>(s,    13440+   16,                           13440+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 13440+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           13472+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 13472+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           13480+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 13480+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           13484+    0,     4);
		API_polar::template xo <    4>(s,    13480+    0, 13480+    4,              13480+    0,     4);
		API_polar::template xo <    8>(s,    13472+    0, 13472+    8,              13472+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 13472+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           13488+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 13488+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           13492+    0,     4);
		API_polar::template xo <    4>(s,    13488+    0, 13488+    4,              13488+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 13488+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           13496+    0,     8);
		API_polar::template xo <    8>(s,    13488+    0, 13488+    8,              13488+    0,     8);
		API_polar::template xo <   16>(s,    13472+    0, 13472+   16,              13472+    0,    16);
		API_polar::template xo <   32>(s,    13440+    0, 13440+   32,              13440+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 13440+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           13504+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 13504+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           13512+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 13512+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           13516+    0,     4);
		API_polar::template xo <    4>(s,    13512+    0, 13512+    4,              13512+    0,     4);
		API_polar::template xo <    8>(s,    13504+    0, 13504+    8,              13504+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 13504+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           13520+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 13520+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           13524+    0,     4);
		API_polar::template xo <    4>(s,    13520+    0, 13520+    4,              13520+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 13520+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           13528+    0,     8);
		API_polar::template xo <    8>(s,    13520+    0, 13520+    8,              13520+    0,     8);
		API_polar::template xo <   16>(s,    13504+    0, 13504+   16,              13504+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 13504+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           13536+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 13536+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           13540+    0,     4);
		API_polar::template xo <    4>(s,    13536+    0, 13536+    4,              13536+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 13536+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                           13544+    0,     8);
		API_polar::template xo <    8>(s,    13536+    0, 13536+    8,              13536+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 13536+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                           13552+    0,    16);
		API_polar::template xo <   16>(s,    13536+    0, 13536+   16,              13536+    0,    16);
		API_polar::template xo <   32>(s,    13504+    0, 13504+   32,              13504+    0,    32);
		API_polar::template xo <   64>(s,    13440+    0, 13440+   64,              13440+    0,    64);
		API_polar::template xo <  128>(s,    13312+    0, 13312+  128,              13312+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 13312+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           13568+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 13568+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           13584+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 13584+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           13592+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 13592+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           13596+    0,     4);
		API_polar::template xo <    4>(s,    13592+    0, 13592+    4,              13592+    0,     4);
		API_polar::template xo <    8>(s,    13584+    0, 13584+    8,              13584+    0,     8);
		API_polar::template xo <   16>(s,    13568+    0, 13568+   16,              13568+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 13568+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           13600+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 13600+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           13608+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 13608+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           13612+    0,     4);
		API_polar::template xo <    4>(s,    13608+    0, 13608+    4,              13608+    0,     4);
		API_polar::template xo <    8>(s,    13600+    0, 13600+    8,              13600+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 13600+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           13616+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 13616+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           13620+    0,     4);
		API_polar::template xo <    4>(s,    13616+    0, 13616+    4,              13616+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 13616+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                           13624+    0,     8);
		API_polar::template xo <    8>(s,    13616+    0, 13616+    8,              13616+    0,     8);
		API_polar::template xo <   16>(s,    13600+    0, 13600+   16,              13600+    0,    16);
		API_polar::template xo <   32>(s,    13568+    0, 13568+   32,              13568+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 13568+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           13632+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 13632+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                           13642+    0,     2);
		API_polar::template xo0<    2>(s,    13640+    2,                           13640+    0,     2);
		API_polar::template g  <    4>(s, l, 65520+    0, 65520+    4, 13640+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           13644+    0,     4);
		API_polar::template xo <    4>(s,    13640+    0, 13640+    4,              13640+    0,     4);
		API_polar::template xo <    8>(s,    13632+    0, 13632+    8,              13632+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 13632+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           13648+    0,    16);
		API_polar::template xo <   16>(s,    13632+    0, 13632+   16,              13632+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 13632+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           13664+    0,    32);
		API_polar::template xo <   32>(s,    13632+    0, 13632+   32,              13632+    0,    32);
		API_polar::template xo <   64>(s,    13568+    0, 13568+   64,              13568+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 13568+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           13700+    0,     4);
		API_polar::template xo0<    4>(s,    13696+    4,                           13696+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 13696+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           13704+    0,     8);
		API_polar::template xo <    8>(s,    13696+    0, 13696+    8,              13696+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 13696+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           13712+    0,    16);
		API_polar::template xo <   16>(s,    13696+    0, 13696+   16,              13696+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 13696+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           13728+    0,    32);
		API_polar::template xo <   32>(s,    13696+    0, 13696+   32,              13696+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 13696+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           13760+    0,    64);
		API_polar::template xo <   64>(s,    13696+    0, 13696+   64,              13696+    0,    64);
		API_polar::template xo <  128>(s,    13568+    0, 13568+  128,              13568+    0,   128);
		API_polar::template xo <  256>(s,    13312+    0, 13312+  256,              13312+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512, 13312+    0, 63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           13824+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 13824+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           13840+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 13840+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                           13850+    0,     2);
		API_polar::template xo0<    2>(s,    13848+    2,                           13848+    0,     2);
		API_polar::template g  <    4>(s, l, 65520+    0, 65520+    4, 13848+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           13852+    0,     4);
		API_polar::template xo <    4>(s,    13848+    0, 13848+    4,              13848+    0,     4);
		API_polar::template xo <    8>(s,    13840+    0, 13840+    8,              13840+    0,     8);
		API_polar::template xo <   16>(s,    13824+    0, 13824+   16,              13824+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 13824+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           13860+    0,     4);
		API_polar::template xo0<    4>(s,    13856+    4,                           13856+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 13856+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           13864+    0,     8);
		API_polar::template xo <    8>(s,    13856+    0, 13856+    8,              13856+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 13856+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           13872+    0,    16);
		API_polar::template xo <   16>(s,    13856+    0, 13856+   16,              13856+    0,    16);
		API_polar::template xo <   32>(s,    13824+    0, 13824+   32,              13824+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 13824+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           13888+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 13888+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           13892+    0,     4);
		API_polar::template xo <    4>(s,    13888+    0, 13888+    4,              13888+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 13888+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           13896+    0,     8);
		API_polar::template xo <    8>(s,    13888+    0, 13888+    8,              13888+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 13888+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           13904+    0,    16);
		API_polar::template xo <   16>(s,    13888+    0, 13888+   16,              13888+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 13888+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           13920+    0,    32);
		API_polar::template xo <   32>(s,    13888+    0, 13888+   32,              13888+    0,    32);
		API_polar::template xo <   64>(s,    13824+    0, 13824+   64,              13824+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 13824+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           13952+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 13952+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           13956+    0,     4);
		API_polar::template xo <    4>(s,    13952+    0, 13952+    4,              13952+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 13952+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           13960+    0,     8);
		API_polar::template xo <    8>(s,    13952+    0, 13952+    8,              13952+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 13952+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           13968+    0,    16);
		API_polar::template xo <   16>(s,    13952+    0, 13952+   16,              13952+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 13952+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           13984+    0,    32);
		API_polar::template xo <   32>(s,    13952+    0, 13952+   32,              13952+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 13952+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           14016+    0,    64);
		API_polar::template xo <   64>(s,    13952+    0, 13952+   64,              13952+    0,    64);
		API_polar::template xo <  128>(s,    13824+    0, 13824+  128,              13824+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 13824+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           14080+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 14080+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           14084+    0,     4);
		API_polar::template xo <    4>(s,    14080+    0, 14080+    4,              14080+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 14080+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           14088+    0,     8);
		API_polar::template xo <    8>(s,    14080+    0, 14080+    8,              14080+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 14080+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           14096+    0,    16);
		API_polar::template xo <   16>(s,    14080+    0, 14080+   16,              14080+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 14080+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           14112+    0,    32);
		API_polar::template xo <   32>(s,    14080+    0, 14080+   32,              14080+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 14080+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           14144+    0,    64);
		API_polar::template xo <   64>(s,    14080+    0, 14080+   64,              14080+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 14080+    0, 65024+  256,   128);
		API_polar::template h  <  128>(s, l, 65280+    0,                           14208+    0,   128);
		API_polar::template xo <  128>(s,    14080+    0, 14080+  128,              14080+    0,   128);
		API_polar::template xo <  256>(s,    13824+    0, 13824+  256,              13824+    0,   256);
		API_polar::template xo <  512>(s,    13312+    0, 13312+  512,              13312+    0,   512);
		API_polar::template xo < 1024>(s,    12288+    0, 12288+ 1024,              12288+    0,  1024);
		API_polar::template g  < 2048>(s, l, 57344+    0, 57344+ 2048, 12288+    0, 57344+ 4096,  2048);
		API_polar::template f  < 1024>(   l, 61440+    0, 61440+ 1024,              61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template g0 <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           14392+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 14392+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           14396+    0,     4);
		API_polar::template xo <    4>(s,    14392+    0, 14392+    4,              14392+    0,     4);
		API_polar::template xo0<    8>(s,    14384+    8,                           14384+    0,     8);
		API_polar::template xo0<   16>(s,    14368+   16,                           14368+    0,    16);
		API_polar::template xo0<   32>(s,    14336+   32,                           14336+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 14336+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           14400+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 14400+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           14416+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 14416+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           14424+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 14424+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           14428+    0,     4);
		API_polar::template xo <    4>(s,    14424+    0, 14424+    4,              14424+    0,     4);
		API_polar::template xo <    8>(s,    14416+    0, 14416+    8,              14416+    0,     8);
		API_polar::template xo <   16>(s,    14400+    0, 14400+   16,              14400+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 14400+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           14432+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 14432+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           14440+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 14440+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           14444+    0,     4);
		API_polar::template xo <    4>(s,    14440+    0, 14440+    4,              14440+    0,     4);
		API_polar::template xo <    8>(s,    14432+    0, 14432+    8,              14432+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 14432+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           14448+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 14448+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           14452+    0,     4);
		API_polar::template xo <    4>(s,    14448+    0, 14448+    4,              14448+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 14448+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                           14456+    0,     8);
		API_polar::template xo <    8>(s,    14448+    0, 14448+    8,              14448+    0,     8);
		API_polar::template xo <   16>(s,    14432+    0, 14432+   16,              14432+    0,    16);
		API_polar::template xo <   32>(s,    14400+    0, 14400+   32,              14400+    0,    32);
		API_polar::template xo <   64>(s,    14336+    0, 14336+   64,              14336+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 14336+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           14464+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 14464+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           14480+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 14480+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           14488+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 14488+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           14492+    0,     4);
		API_polar::template xo <    4>(s,    14488+    0, 14488+    4,              14488+    0,     4);
		API_polar::template xo <    8>(s,    14480+    0, 14480+    8,              14480+    0,     8);
		API_polar::template xo <   16>(s,    14464+    0, 14464+   16,              14464+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 14464+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           14496+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 14496+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                           14506+    0,     2);
		API_polar::template xo0<    2>(s,    14504+    2,                           14504+    0,     2);
		API_polar::template g  <    4>(s, l, 65520+    0, 65520+    4, 14504+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           14508+    0,     4);
		API_polar::template xo <    4>(s,    14504+    0, 14504+    4,              14504+    0,     4);
		API_polar::template xo <    8>(s,    14496+    0, 14496+    8,              14496+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 14496+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           14512+    0,    16);
		API_polar::template xo <   16>(s,    14496+    0, 14496+   16,              14496+    0,    16);
		API_polar::template xo <   32>(s,    14464+    0, 14464+   32,              14464+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 14464+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           14532+    0,     4);
		API_polar::template xo0<    4>(s,    14528+    4,                           14528+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 14528+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           14536+    0,     8);
		API_polar::template xo <    8>(s,    14528+    0, 14528+    8,              14528+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 14528+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           14544+    0,    16);
		API_polar::template xo <   16>(s,    14528+    0, 14528+   16,              14528+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 14528+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           14560+    0,    32);
		API_polar::template xo <   32>(s,    14528+    0, 14528+   32,              14528+    0,    32);
		API_polar::template xo <   64>(s,    14464+    0, 14464+   64,              14464+    0,    64);
		API_polar::template xo <  128>(s,    14336+    0, 14336+  128,              14336+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 14336+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           14592+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 14592+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           14612+    0,     4);
		API_polar::template xo0<    4>(s,    14608+    4,                           14608+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 14608+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           14616+    0,     8);
		API_polar::template xo <    8>(s,    14608+    0, 14608+    8,              14608+    0,     8);
		API_polar::template xo <   16>(s,    14592+    0, 14592+   16,              14592+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 14592+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           14624+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 14624+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           14628+    0,     4);
		API_polar::template xo <    4>(s,    14624+    0, 14624+    4,              14624+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 14624+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           14632+    0,     8);
		API_polar::template xo <    8>(s,    14624+    0, 14624+    8,              14624+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 14624+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           14640+    0,    16);
		API_polar::template xo <   16>(s,    14624+    0, 14624+   16,              14624+    0,    16);
		API_polar::template xo <   32>(s,    14592+    0, 14592+   32,              14592+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 14592+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           14656+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 14656+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           14660+    0,     4);
		API_polar::template xo <    4>(s,    14656+    0, 14656+    4,              14656+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 14656+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           14664+    0,     8);
		API_polar::template xo <    8>(s,    14656+    0, 14656+    8,              14656+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 14656+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           14672+    0,    16);
		API_polar::template xo <   16>(s,    14656+    0, 14656+   16,              14656+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 14656+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           14688+    0,    32);
		API_polar::template xo <   32>(s,    14656+    0, 14656+   32,              14656+    0,    32);
		API_polar::template xo <   64>(s,    14592+    0, 14592+   64,              14592+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 14592+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           14720+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 14720+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           14724+    0,     4);
		API_polar::template xo <    4>(s,    14720+    0, 14720+    4,              14720+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 14720+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           14728+    0,     8);
		API_polar::template xo <    8>(s,    14720+    0, 14720+    8,              14720+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 14720+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           14736+    0,    16);
		API_polar::template xo <   16>(s,    14720+    0, 14720+   16,              14720+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 14720+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           14752+    0,    32);
		API_polar::template xo <   32>(s,    14720+    0, 14720+   32,              14720+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 14720+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           14784+    0,    64);
		API_polar::template xo <   64>(s,    14720+    0, 14720+   64,              14720+    0,    64);
		API_polar::template xo <  128>(s,    14592+    0, 14592+  128,              14592+    0,   128);
		API_polar::template xo <  256>(s,    14336+    0, 14336+  256,              14336+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512, 14336+    0, 63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           14856+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 14856+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           14860+    0,     4);
		API_polar::template xo <    4>(s,    14856+    0, 14856+    4,              14856+    0,     4);
		API_polar::template xo0<    8>(s,    14848+    8,                           14848+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 14848+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           14864+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 14864+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           14868+    0,     4);
		API_polar::template xo <    4>(s,    14864+    0, 14864+    4,              14864+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 14864+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           14872+    0,     8);
		API_polar::template xo <    8>(s,    14864+    0, 14864+    8,              14864+    0,     8);
		API_polar::template xo <   16>(s,    14848+    0, 14848+   16,              14848+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 14848+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           14880+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 14880+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           14884+    0,     4);
		API_polar::template xo <    4>(s,    14880+    0, 14880+    4,              14880+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 14880+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           14888+    0,     8);
		API_polar::template xo <    8>(s,    14880+    0, 14880+    8,              14880+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 14880+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           14896+    0,    16);
		API_polar::template xo <   16>(s,    14880+    0, 14880+   16,              14880+    0,    16);
		API_polar::template xo <   32>(s,    14848+    0, 14848+   32,              14848+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 14848+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           14912+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 14912+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           14916+    0,     4);
		API_polar::template xo <    4>(s,    14912+    0, 14912+    4,              14912+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 14912+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           14920+    0,     8);
		API_polar::template xo <    8>(s,    14912+    0, 14912+    8,              14912+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 14912+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           14928+    0,    16);
		API_polar::template xo <   16>(s,    14912+    0, 14912+   16,              14912+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 14912+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           14944+    0,    32);
		API_polar::template xo <   32>(s,    14912+    0, 14912+   32,              14912+    0,    32);
		API_polar::template xo <   64>(s,    14848+    0, 14848+   64,              14848+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 14848+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           14976+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 14976+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           14980+    0,     4);
		API_polar::template xo <    4>(s,    14976+    0, 14976+    4,              14976+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 14976+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           14984+    0,     8);
		API_polar::template xo <    8>(s,    14976+    0, 14976+    8,              14976+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 14976+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                           14992+    0,    16);
		API_polar::template xo <   16>(s,    14976+    0, 14976+   16,              14976+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 14976+    0, 65408+   64,    32);
		API_polar::template h  <   32>(s, l, 65472+    0,                           15008+    0,    32);
		API_polar::template xo <   32>(s,    14976+    0, 14976+   32,              14976+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 14976+    0, 65280+  128,    64);
		API_polar::template h  <   64>(s, l, 65408+    0,                           15040+    0,    64);
		API_polar::template xo <   64>(s,    14976+    0, 14976+   64,              14976+    0,    64);
		API_polar::template xo <  128>(s,    14848+    0, 14848+  128,              14848+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 14848+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           15104+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 15104+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           15108+    0,     4);
		API_polar::template xo <    4>(s,    15104+    0, 15104+    4,              15104+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 15104+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                           15112+    0,     8);
		API_polar::template xo <    8>(s,    15104+    0, 15104+    8,              15104+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 15104+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                           15120+    0,    16);
		API_polar::template xo <   16>(s,    15104+    0, 15104+   16,              15104+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 15104+    0, 65408+   64,    32);
		API_polar::template h  <   32>(s, l, 65472+    0,                           15136+    0,    32);
		API_polar::template xo <   32>(s,    15104+    0, 15104+   32,              15104+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 15104+    0, 65280+  128,    64);
		API_polar::template h  <   64>(s, l, 65408+    0,                           15168+    0,    64);
		API_polar::template xo <   64>(s,    15104+    0, 15104+   64,              15104+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 15104+    0, 65024+  256,   128);
		API_polar::template h  <  128>(s, l, 65280+    0,                           15232+    0,   128);
		API_polar::template xo <  128>(s,    15104+    0, 15104+  128,              15104+    0,   128);
		API_polar::template xo <  256>(s,    14848+    0, 14848+  256,              14848+    0,   256);
		API_polar::template xo <  512>(s,    14336+    0, 14336+  512,              14336+    0,   512);
		API_polar::template g  < 1024>(s, l, 61440+    0, 61440+ 1024, 14336+    0, 61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           15360+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 15360+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           15368+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 15368+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           15372+    0,     4);
		API_polar::template xo <    4>(s,    15368+    0, 15368+    4,              15368+    0,     4);
		API_polar::template xo <    8>(s,    15360+    0, 15360+    8,              15360+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 15360+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           15376+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 15376+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           15380+    0,     4);
		API_polar::template xo <    4>(s,    15376+    0, 15376+    4,              15376+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 15376+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           15384+    0,     8);
		API_polar::template xo <    8>(s,    15376+    0, 15376+    8,              15376+    0,     8);
		API_polar::template xo <   16>(s,    15360+    0, 15360+   16,              15360+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 15360+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           15392+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 15392+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           15396+    0,     4);
		API_polar::template xo <    4>(s,    15392+    0, 15392+    4,              15392+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 15392+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           15400+    0,     8);
		API_polar::template xo <    8>(s,    15392+    0, 15392+    8,              15392+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 15392+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                           15408+    0,    16);
		API_polar::template xo <   16>(s,    15392+    0, 15392+   16,              15392+    0,    16);
		API_polar::template xo <   32>(s,    15360+    0, 15360+   32,              15360+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 15360+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           15424+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 15424+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           15428+    0,     4);
		API_polar::template xo <    4>(s,    15424+    0, 15424+    4,              15424+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 15424+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                           15432+    0,     8);
		API_polar::template xo <    8>(s,    15424+    0, 15424+    8,              15424+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 15424+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                           15440+    0,    16);
		API_polar::template xo <   16>(s,    15424+    0, 15424+   16,              15424+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 15424+    0, 65408+   64,    32);
		API_polar::template h  <   32>(s, l, 65472+    0,                           15456+    0,    32);
		API_polar::template xo <   32>(s,    15424+    0, 15424+   32,              15424+    0,    32);
		API_polar::template xo <   64>(s,    15360+    0, 15360+   64,              15360+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 15360+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                           15490+    0,     2);
		API_polar::template xo0<    2>(s,    15488+    2,                           15488+    0,     2);
		API_polar::template g  <    4>(s, l, 65520+    0, 65520+    4, 15488+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           15492+    0,     4);
		API_polar::template xo <    4>(s,    15488+    0, 15488+    4,              15488+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 15488+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                           15496+    0,     8);
		API_polar::template xo <    8>(s,    15488+    0, 15488+    8,              15488+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 15488+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                           15504+    0,    16);
		API_polar::template xo <   16>(s,    15488+    0, 15488+   16,              15488+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 15488+    0, 65408+   64,    32);
		API_polar::template h  <   32>(s, l, 65472+    0,                           15520+    0,    32);
		API_polar::template xo <   32>(s,    15488+    0, 15488+   32,              15488+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 15488+    0, 65280+  128,    64);
		API_polar::template h  <   64>(s, l, 65408+    0,                           15552+    0,    64);
		API_polar::template xo <   64>(s,    15488+    0, 15488+   64,              15488+    0,    64);
		API_polar::template xo <  128>(s,    15360+    0, 15360+  128,              15360+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 15360+    0, 64512+  512,   256);
		API_polar::template spc<  256>(s, l, 65024+    0,                           15616+    0,   256);
		API_polar::template xo <  256>(s,    15360+    0, 15360+  256,              15360+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512, 15360+    0, 63488+ 1024,   512);
		API_polar::template spc<  512>(s, l, 64512+    0,                           15872+    0,   512);
		API_polar::template xo <  512>(s,    15360+    0, 15360+  512,              15360+    0,   512);
		API_polar::template xo < 1024>(s,    14336+    0, 14336+ 1024,              14336+    0,  1024);
		API_polar::template xo < 2048>(s,    12288+    0, 12288+ 2048,              12288+    0,  2048);
		API_polar::template xo < 4096>(s,     8192+    0,  8192+ 4096,               8192+    0,  4096);
		API_polar::template xo < 8192>(s,        0+    0,     0+ 8192,                  0+    0,  8192);
		API_polar::template g  <16384>(s, l,     0+    0,     0+16384,     0+    0,     0+32768, 16384);
		API_polar::template f  < 8192>(   l, 32768+    0, 32768+ 8192,              32768+16384,  8192);
		API_polar::template f  < 4096>(   l, 49152+    0, 49152+ 4096,              49152+ 8192,  4096);
		API_polar::template f  < 2048>(   l, 57344+    0, 57344+ 2048,              57344+ 4096,  2048);
		API_polar::template f  < 1024>(   l, 61440+    0, 61440+ 1024,              61440+ 2048,  1024);
		API_polar::template g0 <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template g0 <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template rep<  128>(s, l, 65280+    0,                           17152+    0,   128);
		API_polar::template gr <  128>(s, l, 65024+    0, 65024+  128, 17152+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template rep<   64>(s, l, 65408+    0,                           17280+    0,    64);
		API_polar::template gr <   64>(s, l, 65280+    0, 65280+   64, 17280+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                           17344+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32, 17344+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           17384+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 17384+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           17388+    0,     4);
		API_polar::template xo <    4>(s,    17384+    0, 17384+    4,              17384+    0,     4);
		API_polar::template xo0<    8>(s,    17376+    8,                           17376+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 17376+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           17392+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 17392+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           17396+    0,     4);
		API_polar::template xo <    4>(s,    17392+    0, 17392+    4,              17392+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 17392+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           17400+    0,     8);
		API_polar::template xo <    8>(s,    17392+    0, 17392+    8,              17392+    0,     8);
		API_polar::template xo <   16>(s,    17376+    0, 17376+   16,              17376+    0,    16);
		API_polar::template xo <   32>(s,    17344+    0, 17344+   32,              17344+    0,    32);
		API_polar::template xo <   64>(s,    17280+    0, 17280+   64,              17280+    0,    64);
		API_polar::template xo <  128>(s,    17152+    0, 17152+  128,              17152+    0,   128);
		API_polar::template xo0<  256>(s,    16896+  256,                           16896+    0,   256);
		API_polar::template xo0<  512>(s,    16384+  512,                           16384+    0,   512);
		API_polar::template g  < 1024>(s, l, 61440+    0, 61440+ 1024, 16384+    0, 61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template rep<  256>(s, l, 65024+    0,                           17408+    0,   256);
		API_polar::template gr <  256>(s, l, 64512+    0, 64512+  256, 17408+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template rep<  128>(s, l, 65280+    0,                           17664+    0,   128);
		API_polar::template gr <  128>(s, l, 65024+    0, 65024+  128, 17664+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template g0 <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           17848+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 17848+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           17852+    0,     4);
		API_polar::template xo <    4>(s,    17848+    0, 17848+    4,              17848+    0,     4);
		API_polar::template xo0<    8>(s,    17840+    8,                           17840+    0,     8);
		API_polar::template xo0<   16>(s,    17824+   16,                           17824+    0,    16);
		API_polar::template xo0<   32>(s,    17792+   32,                           17792+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 17792+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           17856+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 17856+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           17872+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 17872+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           17880+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 17880+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           17884+    0,     4);
		API_polar::template xo <    4>(s,    17880+    0, 17880+    4,              17880+    0,     4);
		API_polar::template xo <    8>(s,    17872+    0, 17872+    8,              17872+    0,     8);
		API_polar::template xo <   16>(s,    17856+    0, 17856+   16,              17856+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 17856+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           17888+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 17888+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           17896+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 17896+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           17900+    0,     4);
		API_polar::template xo <    4>(s,    17896+    0, 17896+    4,              17896+    0,     4);
		API_polar::template xo <    8>(s,    17888+    0, 17888+    8,              17888+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 17888+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           17904+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 17904+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           17908+    0,     4);
		API_polar::template xo <    4>(s,    17904+    0, 17904+    4,              17904+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 17904+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                           17912+    0,     8);
		API_polar::template xo <    8>(s,    17904+    0, 17904+    8,              17904+    0,     8);
		API_polar::template xo <   16>(s,    17888+    0, 17888+   16,              17888+    0,    16);
		API_polar::template xo <   32>(s,    17856+    0, 17856+   32,              17856+    0,    32);
		API_polar::template xo <   64>(s,    17792+    0, 17792+   64,              17792+    0,    64);
		API_polar::template xo <  128>(s,    17664+    0, 17664+  128,              17664+    0,   128);
		API_polar::template xo <  256>(s,    17408+    0, 17408+  256,              17408+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512, 17408+    0, 63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template g0 <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template g0 <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           18032+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 18032+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           18040+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 18040+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           18044+    0,     4);
		API_polar::template xo <    4>(s,    18040+    0, 18040+    4,              18040+    0,     4);
		API_polar::template xo <    8>(s,    18032+    0, 18032+    8,              18032+    0,     8);
		API_polar::template xo0<   16>(s,    18016+   16,                           18016+    0,    16);
		API_polar::template xo0<   32>(s,    17984+   32,                           17984+    0,    32);
		API_polar::template xo0<   64>(s,    17920+   64,                           17920+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 17920+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                           18048+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32, 18048+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           18080+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 18080+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           18096+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 18096+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           18104+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 18104+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           18108+    0,     4);
		API_polar::template xo <    4>(s,    18104+    0, 18104+    4,              18104+    0,     4);
		API_polar::template xo <    8>(s,    18096+    0, 18096+    8,              18096+    0,     8);
		API_polar::template xo <   16>(s,    18080+    0, 18080+   16,              18080+    0,    16);
		API_polar::template xo <   32>(s,    18048+    0, 18048+   32,              18048+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 18048+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           18112+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 18112+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           18128+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 18128+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           18136+    0,     8);
		API_polar::template xo <    8>(s,    18128+    0, 18128+    8,              18128+    0,     8);
		API_polar::template xo <   16>(s,    18112+    0, 18112+   16,              18112+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 18112+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           18144+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 18144+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           18148+    0,     4);
		API_polar::template xo <    4>(s,    18144+    0, 18144+    4,              18144+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 18144+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           18152+    0,     8);
		API_polar::template xo <    8>(s,    18144+    0, 18144+    8,              18144+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 18144+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           18160+    0,    16);
		API_polar::template xo <   16>(s,    18144+    0, 18144+   16,              18144+    0,    16);
		API_polar::template xo <   32>(s,    18112+    0, 18112+   32,              18112+    0,    32);
		API_polar::template xo <   64>(s,    18048+    0, 18048+   64,              18048+    0,    64);
		API_polar::template xo <  128>(s,    17920+    0, 17920+  128,              17920+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 17920+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                           18176+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32, 18176+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           18208+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 18208+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           18228+    0,     4);
		API_polar::template xo0<    4>(s,    18224+    4,                           18224+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 18224+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           18232+    0,     8);
		API_polar::template xo <    8>(s,    18224+    0, 18224+    8,              18224+    0,     8);
		API_polar::template xo <   16>(s,    18208+    0, 18208+   16,              18208+    0,    16);
		API_polar::template xo <   32>(s,    18176+    0, 18176+   32,              18176+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 18176+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           18248+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 18248+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           18252+    0,     4);
		API_polar::template xo <    4>(s,    18248+    0, 18248+    4,              18248+    0,     4);
		API_polar::template xo0<    8>(s,    18240+    8,                           18240+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 18240+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           18256+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 18256+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           18260+    0,     4);
		API_polar::template xo <    4>(s,    18256+    0, 18256+    4,              18256+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 18256+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           18264+    0,     8);
		API_polar::template xo <    8>(s,    18256+    0, 18256+    8,              18256+    0,     8);
		API_polar::template xo <   16>(s,    18240+    0, 18240+   16,              18240+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 18240+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           18272+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 18272+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           18276+    0,     4);
		API_polar::template xo <    4>(s,    18272+    0, 18272+    4,              18272+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 18272+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           18280+    0,     8);
		API_polar::template xo <    8>(s,    18272+    0, 18272+    8,              18272+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 18272+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           18288+    0,    16);
		API_polar::template xo <   16>(s,    18272+    0, 18272+   16,              18272+    0,    16);
		API_polar::template xo <   32>(s,    18240+    0, 18240+   32,              18240+    0,    32);
		API_polar::template xo <   64>(s,    18176+    0, 18176+   64,              18176+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 18176+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           18304+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 18304+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           18312+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 18312+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           18316+    0,     4);
		API_polar::template xo <    4>(s,    18312+    0, 18312+    4,              18312+    0,     4);
		API_polar::template xo <    8>(s,    18304+    0, 18304+    8,              18304+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 18304+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           18320+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 18320+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           18324+    0,     4);
		API_polar::template xo <    4>(s,    18320+    0, 18320+    4,              18320+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 18320+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           18328+    0,     8);
		API_polar::template xo <    8>(s,    18320+    0, 18320+    8,              18320+    0,     8);
		API_polar::template xo <   16>(s,    18304+    0, 18304+   16,              18304+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 18304+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           18336+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 18336+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           18340+    0,     4);
		API_polar::template xo <    4>(s,    18336+    0, 18336+    4,              18336+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 18336+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           18344+    0,     8);
		API_polar::template xo <    8>(s,    18336+    0, 18336+    8,              18336+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 18336+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           18352+    0,    16);
		API_polar::template xo <   16>(s,    18336+    0, 18336+   16,              18336+    0,    16);
		API_polar::template xo <   32>(s,    18304+    0, 18304+   32,              18304+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 18304+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           18368+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 18368+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           18372+    0,     4);
		API_polar::template xo <    4>(s,    18368+    0, 18368+    4,              18368+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 18368+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                           18376+    0,     8);
		API_polar::template xo <    8>(s,    18368+    0, 18368+    8,              18368+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 18368+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                           18384+    0,    16);
		API_polar::template xo <   16>(s,    18368+    0, 18368+   16,              18368+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 18368+    0, 65408+   64,    32);
		API_polar::template h  <   32>(s, l, 65472+    0,                           18400+    0,    32);
		API_polar::template xo <   32>(s,    18368+    0, 18368+   32,              18368+    0,    32);
		API_polar::template xo <   64>(s,    18304+    0, 18304+   64,              18304+    0,    64);
		API_polar::template xo <  128>(s,    18176+    0, 18176+  128,              18176+    0,   128);
		API_polar::template xo <  256>(s,    17920+    0, 17920+  256,              17920+    0,   256);
		API_polar::template xo <  512>(s,    17408+    0, 17408+  512,              17408+    0,   512);
		API_polar::template xo < 1024>(s,    16384+    0, 16384+ 1024,              16384+    0,  1024);
		API_polar::template g  < 2048>(s, l, 57344+    0, 57344+ 2048, 16384+    0, 57344+ 4096,  2048);
		API_polar::template f  < 1024>(   l, 61440+    0, 61440+ 1024,              61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template g0 <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template g0 <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template g0 <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           18680+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 18680+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           18684+    0,     4);
		API_polar::template xo <    4>(s,    18680+    0, 18680+    4,              18680+    0,     4);
		API_polar::template xo0<    8>(s,    18672+    8,                           18672+    0,     8);
		API_polar::template xo0<   16>(s,    18656+   16,                           18656+    0,    16);
		API_polar::template xo0<   32>(s,    18624+   32,                           18624+    0,    32);
		API_polar::template xo0<   64>(s,    18560+   64,                           18560+    0,    64);
		API_polar::template xo0<  128>(s,    18432+  128,                           18432+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 18432+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template g0 <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template g0 <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           18784+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 18784+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           18800+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 18800+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           18808+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 18808+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           18812+    0,     4);
		API_polar::template xo <    4>(s,    18808+    0, 18808+    4,              18808+    0,     4);
		API_polar::template xo <    8>(s,    18800+    0, 18800+    8,              18800+    0,     8);
		API_polar::template xo <   16>(s,    18784+    0, 18784+   16,              18784+    0,    16);
		API_polar::template xo0<   32>(s,    18752+   32,                           18752+    0,    32);
		API_polar::template xo0<   64>(s,    18688+   64,                           18688+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 18688+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                           18816+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32, 18816+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           18848+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 18848+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           18864+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 18864+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           18872+    0,     8);
		API_polar::template xo <    8>(s,    18864+    0, 18864+    8,              18864+    0,     8);
		API_polar::template xo <   16>(s,    18848+    0, 18848+   16,              18848+    0,    16);
		API_polar::template xo <   32>(s,    18816+    0, 18816+   32,              18816+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 18816+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                           18894+    0,     2);
		API_polar::template xo0<    2>(s,    18892+    2,                           18892+    0,     2);
		API_polar::template xo0<    4>(s,    18888+    4,                           18888+    0,     4);
		API_polar::template xo0<    8>(s,    18880+    8,                           18880+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 18880+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           18896+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 18896+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           18900+    0,     4);
		API_polar::template xo <    4>(s,    18896+    0, 18896+    4,              18896+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 18896+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           18904+    0,     8);
		API_polar::template xo <    8>(s,    18896+    0, 18896+    8,              18896+    0,     8);
		API_polar::template xo <   16>(s,    18880+    0, 18880+   16,              18880+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 18880+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           18912+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 18912+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           18916+    0,     4);
		API_polar::template xo <    4>(s,    18912+    0, 18912+    4,              18912+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 18912+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           18920+    0,     8);
		API_polar::template xo <    8>(s,    18912+    0, 18912+    8,              18912+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 18912+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           18928+    0,    16);
		API_polar::template xo <   16>(s,    18912+    0, 18912+   16,              18912+    0,    16);
		API_polar::template xo <   32>(s,    18880+    0, 18880+   32,              18880+    0,    32);
		API_polar::template xo <   64>(s,    18816+    0, 18816+   64,              18816+    0,    64);
		API_polar::template xo <  128>(s,    18688+    0, 18688+  128,              18688+    0,   128);
		API_polar::template xo <  256>(s,    18432+    0, 18432+  256,              18432+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512, 18432+    0, 63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template rep<   64>(s, l, 65408+    0,                           18944+    0,    64);
		API_polar::template gr <   64>(s, l, 65280+    0, 65280+   64, 18944+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                           19008+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32, 19008+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           19040+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 19040+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           19060+    0,     4);
		API_polar::template xo0<    4>(s,    19056+    4,                           19056+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 19056+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           19064+    0,     8);
		API_polar::template xo <    8>(s,    19056+    0, 19056+    8,              19056+    0,     8);
		API_polar::template xo <   16>(s,    19040+    0, 19040+   16,              19040+    0,    16);
		API_polar::template xo <   32>(s,    19008+    0, 19008+   32,              19008+    0,    32);
		API_polar::template xo <   64>(s,    18944+    0, 18944+   64,              18944+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 18944+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                           19102+    0,     2);
		API_polar::template xo0<    2>(s,    19100+    2,                           19100+    0,     2);
		API_polar::template xo0<    4>(s,    19096+    4,                           19096+    0,     4);
		API_polar::template xo0<    8>(s,    19088+    8,                           19088+    0,     8);
		API_polar::template xo0<   16>(s,    19072+   16,                           19072+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 19072+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           19112+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 19112+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           19116+    0,     4);
		API_polar::template xo <    4>(s,    19112+    0, 19112+    4,              19112+    0,     4);
		API_polar::template xo0<    8>(s,    19104+    8,                           19104+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 19104+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           19120+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 19120+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           19124+    0,     4);
		API_polar::template xo <    4>(s,    19120+    0, 19120+    4,              19120+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 19120+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           19128+    0,     8);
		API_polar::template xo <    8>(s,    19120+    0, 19120+    8,              19120+    0,     8);
		API_polar::template xo <   16>(s,    19104+    0, 19104+   16,              19104+    0,    16);
		API_polar::template xo <   32>(s,    19072+    0, 19072+   32,              19072+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 19072+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           19136+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 19136+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           19144+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 19144+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           19148+    0,     4);
		API_polar::template xo <    4>(s,    19144+    0, 19144+    4,              19144+    0,     4);
		API_polar::template xo <    8>(s,    19136+    0, 19136+    8,              19136+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 19136+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           19152+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 19152+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           19156+    0,     4);
		API_polar::template xo <    4>(s,    19152+    0, 19152+    4,              19152+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 19152+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           19160+    0,     8);
		API_polar::template xo <    8>(s,    19152+    0, 19152+    8,              19152+    0,     8);
		API_polar::template xo <   16>(s,    19136+    0, 19136+   16,              19136+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 19136+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           19168+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 19168+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           19172+    0,     4);
		API_polar::template xo <    4>(s,    19168+    0, 19168+    4,              19168+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 19168+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           19176+    0,     8);
		API_polar::template xo <    8>(s,    19168+    0, 19168+    8,              19168+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 19168+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                           19184+    0,    16);
		API_polar::template xo <   16>(s,    19168+    0, 19168+   16,              19168+    0,    16);
		API_polar::template xo <   32>(s,    19136+    0, 19136+   32,              19136+    0,    32);
		API_polar::template xo <   64>(s,    19072+    0, 19072+   64,              19072+    0,    64);
		API_polar::template xo <  128>(s,    18944+    0, 18944+  128,              18944+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 18944+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           19216+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 19216+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           19224+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 19224+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           19228+    0,     4);
		API_polar::template xo <    4>(s,    19224+    0, 19224+    4,              19224+    0,     4);
		API_polar::template xo <    8>(s,    19216+    0, 19216+    8,              19216+    0,     8);
		API_polar::template xo0<   16>(s,    19200+   16,                           19200+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 19200+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           19232+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 19232+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           19240+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 19240+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           19244+    0,     4);
		API_polar::template xo <    4>(s,    19240+    0, 19240+    4,              19240+    0,     4);
		API_polar::template xo <    8>(s,    19232+    0, 19232+    8,              19232+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 19232+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           19248+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 19248+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           19252+    0,     4);
		API_polar::template xo <    4>(s,    19248+    0, 19248+    4,              19248+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 19248+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           19256+    0,     8);
		API_polar::template xo <    8>(s,    19248+    0, 19248+    8,              19248+    0,     8);
		API_polar::template xo <   16>(s,    19232+    0, 19232+   16,              19232+    0,    16);
		API_polar::template xo <   32>(s,    19200+    0, 19200+   32,              19200+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 19200+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           19264+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 19264+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           19272+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 19272+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           19276+    0,     4);
		API_polar::template xo <    4>(s,    19272+    0, 19272+    4,              19272+    0,     4);
		API_polar::template xo <    8>(s,    19264+    0, 19264+    8,              19264+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 19264+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                           19282+    0,     2);
		API_polar::template xo0<    2>(s,    19280+    2,                           19280+    0,     2);
		API_polar::template g  <    4>(s, l, 65520+    0, 65520+    4, 19280+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           19284+    0,     4);
		API_polar::template xo <    4>(s,    19280+    0, 19280+    4,              19280+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 19280+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                           19288+    0,     8);
		API_polar::template xo <    8>(s,    19280+    0, 19280+    8,              19280+    0,     8);
		API_polar::template xo <   16>(s,    19264+    0, 19264+   16,              19264+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 19264+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           19296+    0,    32);
		API_polar::template xo <   32>(s,    19264+    0, 19264+   32,              19264+    0,    32);
		API_polar::template xo <   64>(s,    19200+    0, 19200+   64,              19200+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 19200+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           19328+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 19328+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           19336+    0,     8);
		API_polar::template xo <    8>(s,    19328+    0, 19328+    8,              19328+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 19328+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           19344+    0,    16);
		API_polar::template xo <   16>(s,    19328+    0, 19328+   16,              19328+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 19328+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           19360+    0,    32);
		API_polar::template xo <   32>(s,    19328+    0, 19328+   32,              19328+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 19328+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           19392+    0,    64);
		API_polar::template xo <   64>(s,    19328+    0, 19328+   64,              19328+    0,    64);
		API_polar::template xo <  128>(s,    19200+    0, 19200+  128,              19200+    0,   128);
		API_polar::template xo <  256>(s,    18944+    0, 18944+  256,              18944+    0,   256);
		API_polar::template xo <  512>(s,    18432+    0, 18432+  512,              18432+    0,   512);
		API_polar::template g  < 1024>(s, l, 61440+    0, 61440+ 1024, 18432+    0, 61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template rep<   64>(s, l, 65408+    0,                           19456+    0,    64);
		API_polar::template gr <   64>(s, l, 65280+    0, 65280+   64, 19456+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           19544+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 19544+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           19548+    0,     4);
		API_polar::template xo <    4>(s,    19544+    0, 19544+    4,              19544+    0,     4);
		API_polar::template xo0<    8>(s,    19536+    8,                           19536+    0,     8);
		API_polar::template xo0<   16>(s,    19520+   16,                           19520+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 19520+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           19552+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 19552+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           19560+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 19560+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           19564+    0,     4);
		API_polar::template xo <    4>(s,    19560+    0, 19560+    4,              19560+    0,     4);
		API_polar::template xo <    8>(s,    19552+    0, 19552+    8,              19552+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 19552+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           19568+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 19568+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           19572+    0,     4);
		API_polar::template xo <    4>(s,    19568+    0, 19568+    4,              19568+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 19568+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           19576+    0,     8);
		API_polar::template xo <    8>(s,    19568+    0, 19568+    8,              19568+    0,     8);
		API_polar::template xo <   16>(s,    19552+    0, 19552+   16,              19552+    0,    16);
		API_polar::template xo <   32>(s,    19520+    0, 19520+   32,              19520+    0,    32);
		API_polar::template xo <   64>(s,    19456+    0, 19456+   64,              19456+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 19456+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           19584+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 19584+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           19600+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 19600+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           19608+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 19608+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           19612+    0,     4);
		API_polar::template xo <    4>(s,    19608+    0, 19608+    4,              19608+    0,     4);
		API_polar::template xo <    8>(s,    19600+    0, 19600+    8,              19600+    0,     8);
		API_polar::template xo <   16>(s,    19584+    0, 19584+   16,              19584+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 19584+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           19616+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 19616+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           19624+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 19624+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           19628+    0,     4);
		API_polar::template xo <    4>(s,    19624+    0, 19624+    4,              19624+    0,     4);
		API_polar::template xo <    8>(s,    19616+    0, 19616+    8,              19616+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 19616+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           19632+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 19632+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           19636+    0,     4);
		API_polar::template xo <    4>(s,    19632+    0, 19632+    4,              19632+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 19632+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                           19640+    0,     8);
		API_polar::template xo <    8>(s,    19632+    0, 19632+    8,              19632+    0,     8);
		API_polar::template xo <   16>(s,    19616+    0, 19616+   16,              19616+    0,    16);
		API_polar::template xo <   32>(s,    19584+    0, 19584+   32,              19584+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 19584+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           19648+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 19648+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                           19658+    0,     2);
		API_polar::template xo0<    2>(s,    19656+    2,                           19656+    0,     2);
		API_polar::template g  <    4>(s, l, 65520+    0, 65520+    4, 19656+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           19660+    0,     4);
		API_polar::template xo <    4>(s,    19656+    0, 19656+    4,              19656+    0,     4);
		API_polar::template xo <    8>(s,    19648+    0, 19648+    8,              19648+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 19648+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           19664+    0,    16);
		API_polar::template xo <   16>(s,    19648+    0, 19648+   16,              19648+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 19648+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           19680+    0,    32);
		API_polar::template xo <   32>(s,    19648+    0, 19648+   32,              19648+    0,    32);
		API_polar::template xo <   64>(s,    19584+    0, 19584+   64,              19584+    0,    64);
		API_polar::template xo <  128>(s,    19456+    0, 19456+  128,              19456+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 19456+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           19712+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 19712+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           19728+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 19728+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           19736+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 19736+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           19740+    0,     4);
		API_polar::template xo <    4>(s,    19736+    0, 19736+    4,              19736+    0,     4);
		API_polar::template xo <    8>(s,    19728+    0, 19728+    8,              19728+    0,     8);
		API_polar::template xo <   16>(s,    19712+    0, 19712+   16,              19712+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 19712+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                           19750+    0,     2);
		API_polar::template xo0<    2>(s,    19748+    2,                           19748+    0,     2);
		API_polar::template xo0<    4>(s,    19744+    4,                           19744+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 19744+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           19752+    0,     8);
		API_polar::template xo <    8>(s,    19744+    0, 19744+    8,              19744+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 19744+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           19760+    0,    16);
		API_polar::template xo <   16>(s,    19744+    0, 19744+   16,              19744+    0,    16);
		API_polar::template xo <   32>(s,    19712+    0, 19712+   32,              19712+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 19712+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           19776+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 19776+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           19780+    0,     4);
		API_polar::template xo <    4>(s,    19776+    0, 19776+    4,              19776+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 19776+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           19784+    0,     8);
		API_polar::template xo <    8>(s,    19776+    0, 19776+    8,              19776+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 19776+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           19792+    0,    16);
		API_polar::template xo <   16>(s,    19776+    0, 19776+   16,              19776+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 19776+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           19808+    0,    32);
		API_polar::template xo <   32>(s,    19776+    0, 19776+   32,              19776+    0,    32);
		API_polar::template xo <   64>(s,    19712+    0, 19712+   64,              19712+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 19712+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           19840+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 19840+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           19844+    0,     4);
		API_polar::template xo <    4>(s,    19840+    0, 19840+    4,              19840+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 19840+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           19848+    0,     8);
		API_polar::template xo <    8>(s,    19840+    0, 19840+    8,              19840+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 19840+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           19856+    0,    16);
		API_polar::template xo <   16>(s,    19840+    0, 19840+   16,              19840+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 19840+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           19872+    0,    32);
		API_polar::template xo <   32>(s,    19840+    0, 19840+   32,              19840+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 19840+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           19904+    0,    64);
		API_polar::template xo <   64>(s,    19840+    0, 19840+   64,              19840+    0,    64);
		API_polar::template xo <  128>(s,    19712+    0, 19712+  128,              19712+    0,   128);
		API_polar::template xo <  256>(s,    19456+    0, 19456+  256,              19456+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512, 19456+    0, 63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                           19982+    0,     2);
		API_polar::template xo0<    2>(s,    19980+    2,                           19980+    0,     2);
		API_polar::template xo0<    4>(s,    19976+    4,                           19976+    0,     4);
		API_polar::template xo0<    8>(s,    19968+    8,                           19968+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 19968+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           19984+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 19984+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           19988+    0,     4);
		API_polar::template xo <    4>(s,    19984+    0, 19984+    4,              19984+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 19984+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           19992+    0,     8);
		API_polar::template xo <    8>(s,    19984+    0, 19984+    8,              19984+    0,     8);
		API_polar::template xo <   16>(s,    19968+    0, 19968+   16,              19968+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 19968+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           20000+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 20000+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           20004+    0,     4);
		API_polar::template xo <    4>(s,    20000+    0, 20000+    4,              20000+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 20000+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           20008+    0,     8);
		API_polar::template xo <    8>(s,    20000+    0, 20000+    8,              20000+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 20000+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           20016+    0,    16);
		API_polar::template xo <   16>(s,    20000+    0, 20000+   16,              20000+    0,    16);
		API_polar::template xo <   32>(s,    19968+    0, 19968+   32,              19968+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 19968+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           20032+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 20032+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           20036+    0,     4);
		API_polar::template xo <    4>(s,    20032+    0, 20032+    4,              20032+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 20032+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           20040+    0,     8);
		API_polar::template xo <    8>(s,    20032+    0, 20032+    8,              20032+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 20032+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           20048+    0,    16);
		API_polar::template xo <   16>(s,    20032+    0, 20032+   16,              20032+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 20032+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           20064+    0,    32);
		API_polar::template xo <   32>(s,    20032+    0, 20032+   32,              20032+    0,    32);
		API_polar::template xo <   64>(s,    19968+    0, 19968+   64,              19968+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 19968+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           20096+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 20096+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           20100+    0,     4);
		API_polar::template xo <    4>(s,    20096+    0, 20096+    4,              20096+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 20096+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           20104+    0,     8);
		API_polar::template xo <    8>(s,    20096+    0, 20096+    8,              20096+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 20096+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           20112+    0,    16);
		API_polar::template xo <   16>(s,    20096+    0, 20096+   16,              20096+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 20096+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           20128+    0,    32);
		API_polar::template xo <   32>(s,    20096+    0, 20096+   32,              20096+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 20096+    0, 65280+  128,    64);
		API_polar::template h  <   64>(s, l, 65408+    0,                           20160+    0,    64);
		API_polar::template xo <   64>(s,    20096+    0, 20096+   64,              20096+    0,    64);
		API_polar::template xo <  128>(s,    19968+    0, 19968+  128,              19968+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 19968+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           20224+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 20224+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           20228+    0,     4);
		API_polar::template xo <    4>(s,    20224+    0, 20224+    4,              20224+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 20224+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           20232+    0,     8);
		API_polar::template xo <    8>(s,    20224+    0, 20224+    8,              20224+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 20224+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                           20240+    0,    16);
		API_polar::template xo <   16>(s,    20224+    0, 20224+   16,              20224+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 20224+    0, 65408+   64,    32);
		API_polar::template h  <   32>(s, l, 65472+    0,                           20256+    0,    32);
		API_polar::template xo <   32>(s,    20224+    0, 20224+   32,              20224+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 20224+    0, 65280+  128,    64);
		API_polar::template h  <   64>(s, l, 65408+    0,                           20288+    0,    64);
		API_polar::template xo <   64>(s,    20224+    0, 20224+   64,              20224+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 20224+    0, 65024+  256,   128);
		API_polar::template h  <  128>(s, l, 65280+    0,                           20352+    0,   128);
		API_polar::template xo <  128>(s,    20224+    0, 20224+  128,              20224+    0,   128);
		API_polar::template xo <  256>(s,    19968+    0, 19968+  256,              19968+    0,   256);
		API_polar::template xo <  512>(s,    19456+    0, 19456+  512,              19456+    0,   512);
		API_polar::template xo < 1024>(s,    18432+    0, 18432+ 1024,              18432+    0,  1024);
		API_polar::template xo < 2048>(s,    16384+    0, 16384+ 2048,              16384+    0,  2048);
		API_polar::template g  < 4096>(s, l, 49152+    0, 49152+ 4096, 16384+    0, 49152+ 8192,  4096);
		API_polar::template f  < 2048>(   l, 57344+    0, 57344+ 2048,              57344+ 4096,  2048);
		API_polar::template f  < 1024>(   l, 61440+    0, 61440+ 1024,              61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template g0 <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template rep<   64>(s, l, 65408+    0,                           20608+    0,    64);
		API_polar::template gr <   64>(s, l, 65280+    0, 65280+   64, 20608+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                           20672+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32, 20672+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           20704+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 20704+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                           20726+    0,     2);
		API_polar::template xo0<    2>(s,    20724+    2,                           20724+    0,     2);
		API_polar::template xo0<    4>(s,    20720+    4,                           20720+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 20720+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           20728+    0,     8);
		API_polar::template xo <    8>(s,    20720+    0, 20720+    8,              20720+    0,     8);
		API_polar::template xo <   16>(s,    20704+    0, 20704+   16,              20704+    0,    16);
		API_polar::template xo <   32>(s,    20672+    0, 20672+   32,              20672+    0,    32);
		API_polar::template xo <   64>(s,    20608+    0, 20608+   64,              20608+    0,    64);
		API_polar::template xo0<  128>(s,    20480+  128,                           20480+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 20480+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template rep<   64>(s, l, 65408+    0,                           20736+    0,    64);
		API_polar::template gr <   64>(s, l, 65280+    0, 65280+   64, 20736+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                           20830+    0,     2);
		API_polar::template xo0<    2>(s,    20828+    2,                           20828+    0,     2);
		API_polar::template xo0<    4>(s,    20824+    4,                           20824+    0,     4);
		API_polar::template xo0<    8>(s,    20816+    8,                           20816+    0,     8);
		API_polar::template xo0<   16>(s,    20800+   16,                           20800+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 20800+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           20840+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 20840+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           20844+    0,     4);
		API_polar::template xo <    4>(s,    20840+    0, 20840+    4,              20840+    0,     4);
		API_polar::template xo0<    8>(s,    20832+    8,                           20832+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 20832+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           20848+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 20848+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           20852+    0,     4);
		API_polar::template xo <    4>(s,    20848+    0, 20848+    4,              20848+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 20848+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           20856+    0,     8);
		API_polar::template xo <    8>(s,    20848+    0, 20848+    8,              20848+    0,     8);
		API_polar::template xo <   16>(s,    20832+    0, 20832+   16,              20832+    0,    16);
		API_polar::template xo <   32>(s,    20800+    0, 20800+   32,              20800+    0,    32);
		API_polar::template xo <   64>(s,    20736+    0, 20736+   64,              20736+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 20736+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           20880+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 20880+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           20888+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 20888+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           20892+    0,     4);
		API_polar::template xo <    4>(s,    20888+    0, 20888+    4,              20888+    0,     4);
		API_polar::template xo <    8>(s,    20880+    0, 20880+    8,              20880+    0,     8);
		API_polar::template xo0<   16>(s,    20864+   16,                           20864+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 20864+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           20896+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 20896+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           20904+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 20904+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           20908+    0,     4);
		API_polar::template xo <    4>(s,    20904+    0, 20904+    4,              20904+    0,     4);
		API_polar::template xo <    8>(s,    20896+    0, 20896+    8,              20896+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 20896+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           20912+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 20912+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           20916+    0,     4);
		API_polar::template xo <    4>(s,    20912+    0, 20912+    4,              20912+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 20912+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           20920+    0,     8);
		API_polar::template xo <    8>(s,    20912+    0, 20912+    8,              20912+    0,     8);
		API_polar::template xo <   16>(s,    20896+    0, 20896+   16,              20896+    0,    16);
		API_polar::template xo <   32>(s,    20864+    0, 20864+   32,              20864+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 20864+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           20928+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 20928+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           20936+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 20936+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           20940+    0,     4);
		API_polar::template xo <    4>(s,    20936+    0, 20936+    4,              20936+    0,     4);
		API_polar::template xo <    8>(s,    20928+    0, 20928+    8,              20928+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 20928+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           20944+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 20944+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           20948+    0,     4);
		API_polar::template xo <    4>(s,    20944+    0, 20944+    4,              20944+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 20944+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                           20952+    0,     8);
		API_polar::template xo <    8>(s,    20944+    0, 20944+    8,              20944+    0,     8);
		API_polar::template xo <   16>(s,    20928+    0, 20928+   16,              20928+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 20928+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           20960+    0,    32);
		API_polar::template xo <   32>(s,    20928+    0, 20928+   32,              20928+    0,    32);
		API_polar::template xo <   64>(s,    20864+    0, 20864+   64,              20864+    0,    64);
		API_polar::template xo <  128>(s,    20736+    0, 20736+  128,              20736+    0,   128);
		API_polar::template xo <  256>(s,    20480+    0, 20480+  256,              20480+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512, 20480+    0, 63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template g0 <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           21048+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 21048+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           21052+    0,     4);
		API_polar::template xo <    4>(s,    21048+    0, 21048+    4,              21048+    0,     4);
		API_polar::template xo0<    8>(s,    21040+    8,                           21040+    0,     8);
		API_polar::template xo0<   16>(s,    21024+   16,                           21024+    0,    16);
		API_polar::template xo0<   32>(s,    20992+   32,                           20992+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 20992+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           21056+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 21056+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           21072+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 21072+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           21080+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 21080+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           21084+    0,     4);
		API_polar::template xo <    4>(s,    21080+    0, 21080+    4,              21080+    0,     4);
		API_polar::template xo <    8>(s,    21072+    0, 21072+    8,              21072+    0,     8);
		API_polar::template xo <   16>(s,    21056+    0, 21056+   16,              21056+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 21056+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           21088+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 21088+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           21096+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 21096+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           21100+    0,     4);
		API_polar::template xo <    4>(s,    21096+    0, 21096+    4,              21096+    0,     4);
		API_polar::template xo <    8>(s,    21088+    0, 21088+    8,              21088+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 21088+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           21104+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 21104+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           21108+    0,     4);
		API_polar::template xo <    4>(s,    21104+    0, 21104+    4,              21104+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 21104+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                           21112+    0,     8);
		API_polar::template xo <    8>(s,    21104+    0, 21104+    8,              21104+    0,     8);
		API_polar::template xo <   16>(s,    21088+    0, 21088+   16,              21088+    0,    16);
		API_polar::template xo <   32>(s,    21056+    0, 21056+   32,              21056+    0,    32);
		API_polar::template xo <   64>(s,    20992+    0, 20992+   64,              20992+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 20992+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           21120+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 21120+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           21136+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 21136+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           21144+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 21144+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           21148+    0,     4);
		API_polar::template xo <    4>(s,    21144+    0, 21144+    4,              21144+    0,     4);
		API_polar::template xo <    8>(s,    21136+    0, 21136+    8,              21136+    0,     8);
		API_polar::template xo <   16>(s,    21120+    0, 21120+   16,              21120+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 21120+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           21152+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 21152+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           21160+    0,     8);
		API_polar::template xo <    8>(s,    21152+    0, 21152+    8,              21152+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 21152+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           21168+    0,    16);
		API_polar::template xo <   16>(s,    21152+    0, 21152+   16,              21152+    0,    16);
		API_polar::template xo <   32>(s,    21120+    0, 21120+   32,              21120+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 21120+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           21188+    0,     4);
		API_polar::template xo0<    4>(s,    21184+    4,                           21184+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 21184+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           21192+    0,     8);
		API_polar::template xo <    8>(s,    21184+    0, 21184+    8,              21184+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 21184+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           21200+    0,    16);
		API_polar::template xo <   16>(s,    21184+    0, 21184+   16,              21184+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 21184+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           21216+    0,    32);
		API_polar::template xo <   32>(s,    21184+    0, 21184+   32,              21184+    0,    32);
		API_polar::template xo <   64>(s,    21120+    0, 21120+   64,              21120+    0,    64);
		API_polar::template xo <  128>(s,    20992+    0, 20992+  128,              20992+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 20992+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           21248+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 21248+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           21268+    0,     4);
		API_polar::template xo0<    4>(s,    21264+    4,                           21264+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 21264+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           21272+    0,     8);
		API_polar::template xo <    8>(s,    21264+    0, 21264+    8,              21264+    0,     8);
		API_polar::template xo <   16>(s,    21248+    0, 21248+   16,              21248+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 21248+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           21280+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 21280+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           21284+    0,     4);
		API_polar::template xo <    4>(s,    21280+    0, 21280+    4,              21280+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 21280+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           21288+    0,     8);
		API_polar::template xo <    8>(s,    21280+    0, 21280+    8,              21280+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 21280+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           21296+    0,    16);
		API_polar::template xo <   16>(s,    21280+    0, 21280+   16,              21280+    0,    16);
		API_polar::template xo <   32>(s,    21248+    0, 21248+   32,              21248+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 21248+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           21312+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 21312+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           21316+    0,     4);
		API_polar::template xo <    4>(s,    21312+    0, 21312+    4,              21312+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 21312+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           21320+    0,     8);
		API_polar::template xo <    8>(s,    21312+    0, 21312+    8,              21312+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 21312+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           21328+    0,    16);
		API_polar::template xo <   16>(s,    21312+    0, 21312+   16,              21312+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 21312+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           21344+    0,    32);
		API_polar::template xo <   32>(s,    21312+    0, 21312+   32,              21312+    0,    32);
		API_polar::template xo <   64>(s,    21248+    0, 21248+   64,              21248+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 21248+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           21376+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 21376+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           21380+    0,     4);
		API_polar::template xo <    4>(s,    21376+    0, 21376+    4,              21376+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 21376+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           21384+    0,     8);
		API_polar::template xo <    8>(s,    21376+    0, 21376+    8,              21376+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 21376+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           21392+    0,    16);
		API_polar::template xo <   16>(s,    21376+    0, 21376+   16,              21376+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 21376+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           21408+    0,    32);
		API_polar::template xo <   32>(s,    21376+    0, 21376+   32,              21376+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 21376+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           21440+    0,    64);
		API_polar::template xo <   64>(s,    21376+    0, 21376+   64,              21376+    0,    64);
		API_polar::template xo <  128>(s,    21248+    0, 21248+  128,              21248+    0,   128);
		API_polar::template xo <  256>(s,    20992+    0, 20992+  256,              20992+    0,   256);
		API_polar::template xo <  512>(s,    20480+    0, 20480+  512,              20480+    0,   512);
		API_polar::template g  < 1024>(s, l, 61440+    0, 61440+ 1024, 20480+    0, 61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                           21504+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32, 21504+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           21536+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 21536+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           21552+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 21552+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           21560+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 21560+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           21564+    0,     4);
		API_polar::template xo <    4>(s,    21560+    0, 21560+    4,              21560+    0,     4);
		API_polar::template xo <    8>(s,    21552+    0, 21552+    8,              21552+    0,     8);
		API_polar::template xo <   16>(s,    21536+    0, 21536+   16,              21536+    0,    16);
		API_polar::template xo <   32>(s,    21504+    0, 21504+   32,              21504+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 21504+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           21568+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 21568+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           21584+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 21584+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           21592+    0,     8);
		API_polar::template xo <    8>(s,    21584+    0, 21584+    8,              21584+    0,     8);
		API_polar::template xo <   16>(s,    21568+    0, 21568+   16,              21568+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 21568+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           21604+    0,     4);
		API_polar::template xo0<    4>(s,    21600+    4,                           21600+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 21600+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           21608+    0,     8);
		API_polar::template xo <    8>(s,    21600+    0, 21600+    8,              21600+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 21600+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           21616+    0,    16);
		API_polar::template xo <   16>(s,    21600+    0, 21600+   16,              21600+    0,    16);
		API_polar::template xo <   32>(s,    21568+    0, 21568+   32,              21568+    0,    32);
		API_polar::template xo <   64>(s,    21504+    0, 21504+   64,              21504+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 21504+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           21644+    0,     4);
		API_polar::template xo0<    4>(s,    21640+    4,                           21640+    0,     4);
		API_polar::template xo0<    8>(s,    21632+    8,                           21632+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 21632+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           21648+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 21648+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           21652+    0,     4);
		API_polar::template xo <    4>(s,    21648+    0, 21648+    4,              21648+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 21648+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           21656+    0,     8);
		API_polar::template xo <    8>(s,    21648+    0, 21648+    8,              21648+    0,     8);
		API_polar::template xo <   16>(s,    21632+    0, 21632+   16,              21632+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 21632+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           21664+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 21664+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           21668+    0,     4);
		API_polar::template xo <    4>(s,    21664+    0, 21664+    4,              21664+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 21664+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           21672+    0,     8);
		API_polar::template xo <    8>(s,    21664+    0, 21664+    8,              21664+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 21664+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           21680+    0,    16);
		API_polar::template xo <   16>(s,    21664+    0, 21664+   16,              21664+    0,    16);
		API_polar::template xo <   32>(s,    21632+    0, 21632+   32,              21632+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 21632+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           21696+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 21696+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           21700+    0,     4);
		API_polar::template xo <    4>(s,    21696+    0, 21696+    4,              21696+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 21696+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           21704+    0,     8);
		API_polar::template xo <    8>(s,    21696+    0, 21696+    8,              21696+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 21696+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           21712+    0,    16);
		API_polar::template xo <   16>(s,    21696+    0, 21696+   16,              21696+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 21696+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           21728+    0,    32);
		API_polar::template xo <   32>(s,    21696+    0, 21696+   32,              21696+    0,    32);
		API_polar::template xo <   64>(s,    21632+    0, 21632+   64,              21632+    0,    64);
		API_polar::template xo <  128>(s,    21504+    0, 21504+  128,              21504+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 21504+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           21760+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 21760+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           21768+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 21768+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           21772+    0,     4);
		API_polar::template xo <    4>(s,    21768+    0, 21768+    4,              21768+    0,     4);
		API_polar::template xo <    8>(s,    21760+    0, 21760+    8,              21760+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 21760+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           21776+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 21776+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           21780+    0,     4);
		API_polar::template xo <    4>(s,    21776+    0, 21776+    4,              21776+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 21776+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           21784+    0,     8);
		API_polar::template xo <    8>(s,    21776+    0, 21776+    8,              21776+    0,     8);
		API_polar::template xo <   16>(s,    21760+    0, 21760+   16,              21760+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 21760+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           21792+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 21792+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           21796+    0,     4);
		API_polar::template xo <    4>(s,    21792+    0, 21792+    4,              21792+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 21792+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           21800+    0,     8);
		API_polar::template xo <    8>(s,    21792+    0, 21792+    8,              21792+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 21792+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           21808+    0,    16);
		API_polar::template xo <   16>(s,    21792+    0, 21792+   16,              21792+    0,    16);
		API_polar::template xo <   32>(s,    21760+    0, 21760+   32,              21760+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 21760+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           21824+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 21824+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           21828+    0,     4);
		API_polar::template xo <    4>(s,    21824+    0, 21824+    4,              21824+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 21824+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           21832+    0,     8);
		API_polar::template xo <    8>(s,    21824+    0, 21824+    8,              21824+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 21824+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                           21840+    0,    16);
		API_polar::template xo <   16>(s,    21824+    0, 21824+   16,              21824+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 21824+    0, 65408+   64,    32);
		API_polar::template h  <   32>(s, l, 65472+    0,                           21856+    0,    32);
		API_polar::template xo <   32>(s,    21824+    0, 21824+   32,              21824+    0,    32);
		API_polar::template xo <   64>(s,    21760+    0, 21760+   64,              21760+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 21760+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           21888+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 21888+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           21892+    0,     4);
		API_polar::template xo <    4>(s,    21888+    0, 21888+    4,              21888+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 21888+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                           21896+    0,     8);
		API_polar::template xo <    8>(s,    21888+    0, 21888+    8,              21888+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 21888+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                           21904+    0,    16);
		API_polar::template xo <   16>(s,    21888+    0, 21888+   16,              21888+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 21888+    0, 65408+   64,    32);
		API_polar::template h  <   32>(s, l, 65472+    0,                           21920+    0,    32);
		API_polar::template xo <   32>(s,    21888+    0, 21888+   32,              21888+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 21888+    0, 65280+  128,    64);
		API_polar::template h  <   64>(s, l, 65408+    0,                           21952+    0,    64);
		API_polar::template xo <   64>(s,    21888+    0, 21888+   64,              21888+    0,    64);
		API_polar::template xo <  128>(s,    21760+    0, 21760+  128,              21760+    0,   128);
		API_polar::template xo <  256>(s,    21504+    0, 21504+  256,              21504+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512, 21504+    0, 63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           22016+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 22016+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           22024+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 22024+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           22028+    0,     4);
		API_polar::template xo <    4>(s,    22024+    0, 22024+    4,              22024+    0,     4);
		API_polar::template xo <    8>(s,    22016+    0, 22016+    8,              22016+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 22016+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           22032+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 22032+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           22036+    0,     4);
		API_polar::template xo <    4>(s,    22032+    0, 22032+    4,              22032+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 22032+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           22040+    0,     8);
		API_polar::template xo <    8>(s,    22032+    0, 22032+    8,              22032+    0,     8);
		API_polar::template xo <   16>(s,    22016+    0, 22016+   16,              22016+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 22016+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           22048+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 22048+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           22052+    0,     4);
		API_polar::template xo <    4>(s,    22048+    0, 22048+    4,              22048+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 22048+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                           22056+    0,     8);
		API_polar::template xo <    8>(s,    22048+    0, 22048+    8,              22048+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 22048+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                           22064+    0,    16);
		API_polar::template xo <   16>(s,    22048+    0, 22048+   16,              22048+    0,    16);
		API_polar::template xo <   32>(s,    22016+    0, 22016+   32,              22016+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 22016+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                           22082+    0,     2);
		API_polar::template xo0<    2>(s,    22080+    2,                           22080+    0,     2);
		API_polar::template g  <    4>(s, l, 65520+    0, 65520+    4, 22080+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           22084+    0,     4);
		API_polar::template xo <    4>(s,    22080+    0, 22080+    4,              22080+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 22080+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                           22088+    0,     8);
		API_polar::template xo <    8>(s,    22080+    0, 22080+    8,              22080+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 22080+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                           22096+    0,    16);
		API_polar::template xo <   16>(s,    22080+    0, 22080+   16,              22080+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 22080+    0, 65408+   64,    32);
		API_polar::template h  <   32>(s, l, 65472+    0,                           22112+    0,    32);
		API_polar::template xo <   32>(s,    22080+    0, 22080+   32,              22080+    0,    32);
		API_polar::template xo <   64>(s,    22016+    0, 22016+   64,              22016+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 22016+    0, 65024+  256,   128);
		API_polar::template spc<  128>(s, l, 65280+    0,                           22144+    0,   128);
		API_polar::template xo <  128>(s,    22016+    0, 22016+  128,              22016+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 22016+    0, 64512+  512,   256);
		API_polar::template spc<  256>(s, l, 65024+    0,                           22272+    0,   256);
		API_polar::template xo <  256>(s,    22016+    0, 22016+  256,              22016+    0,   256);
		API_polar::template xo <  512>(s,    21504+    0, 21504+  512,              21504+    0,   512);
		API_polar::template xo < 1024>(s,    20480+    0, 20480+ 1024,              20480+    0,  1024);
		API_polar::template g  < 2048>(s, l, 57344+    0, 57344+ 2048, 20480+    0, 57344+ 4096,  2048);
		API_polar::template f  < 1024>(   l, 61440+    0, 61440+ 1024,              61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                           22528+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32, 22528+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                           22574+    0,     2);
		API_polar::template xo0<    2>(s,    22572+    2,                           22572+    0,     2);
		API_polar::template xo0<    4>(s,    22568+    4,                           22568+    0,     4);
		API_polar::template xo0<    8>(s,    22560+    8,                           22560+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 22560+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           22576+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 22576+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           22580+    0,     4);
		API_polar::template xo <    4>(s,    22576+    0, 22576+    4,              22576+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 22576+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           22584+    0,     8);
		API_polar::template xo <    8>(s,    22576+    0, 22576+    8,              22576+    0,     8);
		API_polar::template xo <   16>(s,    22560+    0, 22560+   16,              22560+    0,    16);
		API_polar::template xo <   32>(s,    22528+    0, 22528+   32,              22528+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 22528+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           22600+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 22600+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           22604+    0,     4);
		API_polar::template xo <    4>(s,    22600+    0, 22600+    4,              22600+    0,     4);
		API_polar::template xo0<    8>(s,    22592+    8,                           22592+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 22592+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           22608+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 22608+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           22612+    0,     4);
		API_polar::template xo <    4>(s,    22608+    0, 22608+    4,              22608+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 22608+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           22616+    0,     8);
		API_polar::template xo <    8>(s,    22608+    0, 22608+    8,              22608+    0,     8);
		API_polar::template xo <   16>(s,    22592+    0, 22592+   16,              22592+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 22592+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           22624+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 22624+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           22628+    0,     4);
		API_polar::template xo <    4>(s,    22624+    0, 22624+    4,              22624+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 22624+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           22632+    0,     8);
		API_polar::template xo <    8>(s,    22624+    0, 22624+    8,              22624+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 22624+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           22640+    0,    16);
		API_polar::template xo <   16>(s,    22624+    0, 22624+   16,              22624+    0,    16);
		API_polar::template xo <   32>(s,    22592+    0, 22592+   32,              22592+    0,    32);
		API_polar::template xo <   64>(s,    22528+    0, 22528+   64,              22528+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 22528+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           22656+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 22656+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           22664+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 22664+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           22668+    0,     4);
		API_polar::template xo <    4>(s,    22664+    0, 22664+    4,              22664+    0,     4);
		API_polar::template xo <    8>(s,    22656+    0, 22656+    8,              22656+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 22656+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           22672+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 22672+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           22676+    0,     4);
		API_polar::template xo <    4>(s,    22672+    0, 22672+    4,              22672+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 22672+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           22680+    0,     8);
		API_polar::template xo <    8>(s,    22672+    0, 22672+    8,              22672+    0,     8);
		API_polar::template xo <   16>(s,    22656+    0, 22656+   16,              22656+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 22656+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           22688+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 22688+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           22692+    0,     4);
		API_polar::template xo <    4>(s,    22688+    0, 22688+    4,              22688+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 22688+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           22696+    0,     8);
		API_polar::template xo <    8>(s,    22688+    0, 22688+    8,              22688+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 22688+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                           22704+    0,    16);
		API_polar::template xo <   16>(s,    22688+    0, 22688+   16,              22688+    0,    16);
		API_polar::template xo <   32>(s,    22656+    0, 22656+   32,              22656+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 22656+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           22720+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 22720+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           22724+    0,     4);
		API_polar::template xo <    4>(s,    22720+    0, 22720+    4,              22720+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 22720+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                           22728+    0,     8);
		API_polar::template xo <    8>(s,    22720+    0, 22720+    8,              22720+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 22720+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                           22736+    0,    16);
		API_polar::template xo <   16>(s,    22720+    0, 22720+   16,              22720+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 22720+    0, 65408+   64,    32);
		API_polar::template h  <   32>(s, l, 65472+    0,                           22752+    0,    32);
		API_polar::template xo <   32>(s,    22720+    0, 22720+   32,              22720+    0,    32);
		API_polar::template xo <   64>(s,    22656+    0, 22656+   64,              22656+    0,    64);
		API_polar::template xo <  128>(s,    22528+    0, 22528+  128,              22528+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 22528+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           22784+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 22784+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           22792+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 22792+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           22796+    0,     4);
		API_polar::template xo <    4>(s,    22792+    0, 22792+    4,              22792+    0,     4);
		API_polar::template xo <    8>(s,    22784+    0, 22784+    8,              22784+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 22784+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           22800+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 22800+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           22804+    0,     4);
		API_polar::template xo <    4>(s,    22800+    0, 22800+    4,              22800+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 22800+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                           22808+    0,     8);
		API_polar::template xo <    8>(s,    22800+    0, 22800+    8,              22800+    0,     8);
		API_polar::template xo <   16>(s,    22784+    0, 22784+   16,              22784+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 22784+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                           22818+    0,     2);
		API_polar::template xo0<    2>(s,    22816+    2,                           22816+    0,     2);
		API_polar::template g  <    4>(s, l, 65520+    0, 65520+    4, 22816+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           22820+    0,     4);
		API_polar::template xo <    4>(s,    22816+    0, 22816+    4,              22816+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 22816+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                           22824+    0,     8);
		API_polar::template xo <    8>(s,    22816+    0, 22816+    8,              22816+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 22816+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                           22832+    0,    16);
		API_polar::template xo <   16>(s,    22816+    0, 22816+   16,              22816+    0,    16);
		API_polar::template xo <   32>(s,    22784+    0, 22784+   32,              22784+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 22784+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           22848+    0,    64);
		API_polar::template xo <   64>(s,    22784+    0, 22784+   64,              22784+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 22784+    0, 65024+  256,   128);
		API_polar::template spc<  128>(s, l, 65280+    0,                           22912+    0,   128);
		API_polar::template xo <  128>(s,    22784+    0, 22784+  128,              22784+    0,   128);
		API_polar::template xo <  256>(s,    22528+    0, 22528+  256,              22528+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512, 22528+    0, 63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           23040+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 23040+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                           23050+    0,     2);
		API_polar::template xo0<    2>(s,    23048+    2,                           23048+    0,     2);
		API_polar::template g  <    4>(s, l, 65520+    0, 65520+    4, 23048+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           23052+    0,     4);
		API_polar::template xo <    4>(s,    23048+    0, 23048+    4,              23048+    0,     4);
		API_polar::template xo <    8>(s,    23040+    0, 23040+    8,              23040+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 23040+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           23056+    0,    16);
		API_polar::template xo <   16>(s,    23040+    0, 23040+   16,              23040+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 23040+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           23072+    0,    32);
		API_polar::template xo <   32>(s,    23040+    0, 23040+   32,              23040+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 23040+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           23104+    0,    64);
		API_polar::template xo <   64>(s,    23040+    0, 23040+   64,              23040+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 23040+    0, 65024+  256,   128);
		API_polar::template spc<  128>(s, l, 65280+    0,                           23168+    0,   128);
		API_polar::template xo <  128>(s,    23040+    0, 23040+  128,              23040+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 23040+    0, 64512+  512,   256);
		API_polar::template spc<  256>(s, l, 65024+    0,                           23296+    0,   256);
		API_polar::template xo <  256>(s,    23040+    0, 23040+  256,              23040+    0,   256);
		API_polar::template xo <  512>(s,    22528+    0, 22528+  512,              22528+    0,   512);
		API_polar::template g  < 1024>(s, l, 61440+    0, 61440+ 1024, 22528+    0, 61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           23556+    0,     4);
		API_polar::template xo0<    4>(s,    23552+    4,                           23552+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 23552+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           23560+    0,     8);
		API_polar::template xo <    8>(s,    23552+    0, 23552+    8,              23552+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 23552+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           23568+    0,    16);
		API_polar::template xo <   16>(s,    23552+    0, 23552+   16,              23552+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 23552+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           23584+    0,    32);
		API_polar::template xo <   32>(s,    23552+    0, 23552+   32,              23552+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 23552+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           23616+    0,    64);
		API_polar::template xo <   64>(s,    23552+    0, 23552+   64,              23552+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 23552+    0, 65024+  256,   128);
		API_polar::template spc<  128>(s, l, 65280+    0,                           23680+    0,   128);
		API_polar::template xo <  128>(s,    23552+    0, 23552+  128,              23552+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 23552+    0, 64512+  512,   256);
		API_polar::template spc<  256>(s, l, 65024+    0,                           23808+    0,   256);
		API_polar::template xo <  256>(s,    23552+    0, 23552+  256,              23552+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512, 23552+    0, 63488+ 1024,   512);
		API_polar::template spc<  512>(s, l, 64512+    0,                           24064+    0,   512);
		API_polar::template xo <  512>(s,    23552+    0, 23552+  512,              23552+    0,   512);
		API_polar::template xo < 1024>(s,    22528+    0, 22528+ 1024,              22528+    0,  1024);
		API_polar::template xo < 2048>(s,    20480+    0, 20480+ 2048,              20480+    0,  2048);
		API_polar::template xo < 4096>(s,    16384+    0, 16384+ 4096,              16384+    0,  4096);
		API_polar::template g  < 8192>(s, l, 32768+    0, 32768+ 8192, 16384+    0, 32768+16384,  8192);
		API_polar::template f  < 4096>(   l, 49152+    0, 49152+ 4096,              49152+ 8192,  4096);
		API_polar::template f  < 2048>(   l, 57344+    0, 57344+ 2048,              57344+ 4096,  2048);
		API_polar::template f  < 1024>(   l, 61440+    0, 61440+ 1024,              61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template rep<  128>(s, l, 65280+    0,                           24576+    0,   128);
		API_polar::template gr <  128>(s, l, 65024+    0, 65024+  128, 24576+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template g0 <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           24760+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 24760+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           24764+    0,     4);
		API_polar::template xo <    4>(s,    24760+    0, 24760+    4,              24760+    0,     4);
		API_polar::template xo0<    8>(s,    24752+    8,                           24752+    0,     8);
		API_polar::template xo0<   16>(s,    24736+   16,                           24736+    0,    16);
		API_polar::template xo0<   32>(s,    24704+   32,                           24704+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 24704+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           24768+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 24768+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           24784+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 24784+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           24792+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 24792+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           24796+    0,     4);
		API_polar::template xo <    4>(s,    24792+    0, 24792+    4,              24792+    0,     4);
		API_polar::template xo <    8>(s,    24784+    0, 24784+    8,              24784+    0,     8);
		API_polar::template xo <   16>(s,    24768+    0, 24768+   16,              24768+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 24768+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           24800+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 24800+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           24808+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 24808+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           24812+    0,     4);
		API_polar::template xo <    4>(s,    24808+    0, 24808+    4,              24808+    0,     4);
		API_polar::template xo <    8>(s,    24800+    0, 24800+    8,              24800+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 24800+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           24816+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 24816+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           24820+    0,     4);
		API_polar::template xo <    4>(s,    24816+    0, 24816+    4,              24816+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 24816+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                           24824+    0,     8);
		API_polar::template xo <    8>(s,    24816+    0, 24816+    8,              24816+    0,     8);
		API_polar::template xo <   16>(s,    24800+    0, 24800+   16,              24800+    0,    16);
		API_polar::template xo <   32>(s,    24768+    0, 24768+   32,              24768+    0,    32);
		API_polar::template xo <   64>(s,    24704+    0, 24704+   64,              24704+    0,    64);
		API_polar::template xo <  128>(s,    24576+    0, 24576+  128,              24576+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 24576+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template g0 <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           24864+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 24864+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           24880+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 24880+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           24888+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 24888+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           24892+    0,     4);
		API_polar::template xo <    4>(s,    24888+    0, 24888+    4,              24888+    0,     4);
		API_polar::template xo <    8>(s,    24880+    0, 24880+    8,              24880+    0,     8);
		API_polar::template xo <   16>(s,    24864+    0, 24864+   16,              24864+    0,    16);
		API_polar::template xo0<   32>(s,    24832+   32,                           24832+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 24832+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           24896+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 24896+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           24912+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 24912+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           24920+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 24920+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           24924+    0,     4);
		API_polar::template xo <    4>(s,    24920+    0, 24920+    4,              24920+    0,     4);
		API_polar::template xo <    8>(s,    24912+    0, 24912+    8,              24912+    0,     8);
		API_polar::template xo <   16>(s,    24896+    0, 24896+   16,              24896+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 24896+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                           24934+    0,     2);
		API_polar::template xo0<    2>(s,    24932+    2,                           24932+    0,     2);
		API_polar::template xo0<    4>(s,    24928+    4,                           24928+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 24928+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           24936+    0,     8);
		API_polar::template xo <    8>(s,    24928+    0, 24928+    8,              24928+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 24928+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           24944+    0,    16);
		API_polar::template xo <   16>(s,    24928+    0, 24928+   16,              24928+    0,    16);
		API_polar::template xo <   32>(s,    24896+    0, 24896+   32,              24896+    0,    32);
		API_polar::template xo <   64>(s,    24832+    0, 24832+   64,              24832+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 24832+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           24960+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 24960+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           24980+    0,     4);
		API_polar::template xo0<    4>(s,    24976+    4,                           24976+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 24976+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           24984+    0,     8);
		API_polar::template xo <    8>(s,    24976+    0, 24976+    8,              24976+    0,     8);
		API_polar::template xo <   16>(s,    24960+    0, 24960+   16,              24960+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 24960+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           24992+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 24992+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           24996+    0,     4);
		API_polar::template xo <    4>(s,    24992+    0, 24992+    4,              24992+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 24992+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           25000+    0,     8);
		API_polar::template xo <    8>(s,    24992+    0, 24992+    8,              24992+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 24992+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           25008+    0,    16);
		API_polar::template xo <   16>(s,    24992+    0, 24992+   16,              24992+    0,    16);
		API_polar::template xo <   32>(s,    24960+    0, 24960+   32,              24960+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 24960+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           25024+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 25024+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           25028+    0,     4);
		API_polar::template xo <    4>(s,    25024+    0, 25024+    4,              25024+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 25024+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           25032+    0,     8);
		API_polar::template xo <    8>(s,    25024+    0, 25024+    8,              25024+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 25024+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           25040+    0,    16);
		API_polar::template xo <   16>(s,    25024+    0, 25024+   16,              25024+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 25024+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           25056+    0,    32);
		API_polar::template xo <   32>(s,    25024+    0, 25024+   32,              25024+    0,    32);
		API_polar::template xo <   64>(s,    24960+    0, 24960+   64,              24960+    0,    64);
		API_polar::template xo <  128>(s,    24832+    0, 24832+  128,              24832+    0,   128);
		API_polar::template xo <  256>(s,    24576+    0, 24576+  256,              24576+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512, 24576+    0, 63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                           25088+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32, 25088+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           25120+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 25120+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                           25142+    0,     2);
		API_polar::template xo0<    2>(s,    25140+    2,                           25140+    0,     2);
		API_polar::template xo0<    4>(s,    25136+    4,                           25136+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 25136+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           25144+    0,     8);
		API_polar::template xo <    8>(s,    25136+    0, 25136+    8,              25136+    0,     8);
		API_polar::template xo <   16>(s,    25120+    0, 25120+   16,              25120+    0,    16);
		API_polar::template xo <   32>(s,    25088+    0, 25088+   32,              25088+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 25088+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           25164+    0,     4);
		API_polar::template xo0<    4>(s,    25160+    4,                           25160+    0,     4);
		API_polar::template xo0<    8>(s,    25152+    8,                           25152+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 25152+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           25168+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 25168+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           25172+    0,     4);
		API_polar::template xo <    4>(s,    25168+    0, 25168+    4,              25168+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 25168+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           25176+    0,     8);
		API_polar::template xo <    8>(s,    25168+    0, 25168+    8,              25168+    0,     8);
		API_polar::template xo <   16>(s,    25152+    0, 25152+   16,              25152+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 25152+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           25184+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 25184+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           25188+    0,     4);
		API_polar::template xo <    4>(s,    25184+    0, 25184+    4,              25184+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 25184+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           25192+    0,     8);
		API_polar::template xo <    8>(s,    25184+    0, 25184+    8,              25184+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 25184+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           25200+    0,    16);
		API_polar::template xo <   16>(s,    25184+    0, 25184+   16,              25184+    0,    16);
		API_polar::template xo <   32>(s,    25152+    0, 25152+   32,              25152+    0,    32);
		API_polar::template xo <   64>(s,    25088+    0, 25088+   64,              25088+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 25088+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           25216+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 25216+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           25224+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 25224+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           25228+    0,     4);
		API_polar::template xo <    4>(s,    25224+    0, 25224+    4,              25224+    0,     4);
		API_polar::template xo <    8>(s,    25216+    0, 25216+    8,              25216+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 25216+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           25232+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 25232+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           25236+    0,     4);
		API_polar::template xo <    4>(s,    25232+    0, 25232+    4,              25232+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 25232+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           25240+    0,     8);
		API_polar::template xo <    8>(s,    25232+    0, 25232+    8,              25232+    0,     8);
		API_polar::template xo <   16>(s,    25216+    0, 25216+   16,              25216+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 25216+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           25248+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 25248+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           25252+    0,     4);
		API_polar::template xo <    4>(s,    25248+    0, 25248+    4,              25248+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 25248+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           25256+    0,     8);
		API_polar::template xo <    8>(s,    25248+    0, 25248+    8,              25248+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 25248+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           25264+    0,    16);
		API_polar::template xo <   16>(s,    25248+    0, 25248+   16,              25248+    0,    16);
		API_polar::template xo <   32>(s,    25216+    0, 25216+   32,              25216+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 25216+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           25280+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 25280+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           25284+    0,     4);
		API_polar::template xo <    4>(s,    25280+    0, 25280+    4,              25280+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 25280+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           25288+    0,     8);
		API_polar::template xo <    8>(s,    25280+    0, 25280+    8,              25280+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 25280+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                           25296+    0,    16);
		API_polar::template xo <   16>(s,    25280+    0, 25280+   16,              25280+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 25280+    0, 65408+   64,    32);
		API_polar::template h  <   32>(s, l, 65472+    0,                           25312+    0,    32);
		API_polar::template xo <   32>(s,    25280+    0, 25280+   32,              25280+    0,    32);
		API_polar::template xo <   64>(s,    25216+    0, 25216+   64,              25216+    0,    64);
		API_polar::template xo <  128>(s,    25088+    0, 25088+  128,              25088+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 25088+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           25344+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 25344+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           25352+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 25352+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           25356+    0,     4);
		API_polar::template xo <    4>(s,    25352+    0, 25352+    4,              25352+    0,     4);
		API_polar::template xo <    8>(s,    25344+    0, 25344+    8,              25344+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 25344+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           25360+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 25360+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           25364+    0,     4);
		API_polar::template xo <    4>(s,    25360+    0, 25360+    4,              25360+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 25360+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           25368+    0,     8);
		API_polar::template xo <    8>(s,    25360+    0, 25360+    8,              25360+    0,     8);
		API_polar::template xo <   16>(s,    25344+    0, 25344+   16,              25344+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 25344+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           25376+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 25376+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           25380+    0,     4);
		API_polar::template xo <    4>(s,    25376+    0, 25376+    4,              25376+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 25376+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                           25384+    0,     8);
		API_polar::template xo <    8>(s,    25376+    0, 25376+    8,              25376+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 25376+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                           25392+    0,    16);
		API_polar::template xo <   16>(s,    25376+    0, 25376+   16,              25376+    0,    16);
		API_polar::template xo <   32>(s,    25344+    0, 25344+   32,              25344+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 25344+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                           25410+    0,     2);
		API_polar::template xo0<    2>(s,    25408+    2,                           25408+    0,     2);
		API_polar::template g  <    4>(s, l, 65520+    0, 65520+    4, 25408+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           25412+    0,     4);
		API_polar::template xo <    4>(s,    25408+    0, 25408+    4,              25408+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 25408+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                           25416+    0,     8);
		API_polar::template xo <    8>(s,    25408+    0, 25408+    8,              25408+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 25408+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                           25424+    0,    16);
		API_polar::template xo <   16>(s,    25408+    0, 25408+   16,              25408+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 25408+    0, 65408+   64,    32);
		API_polar::template h  <   32>(s, l, 65472+    0,                           25440+    0,    32);
		API_polar::template xo <   32>(s,    25408+    0, 25408+   32,              25408+    0,    32);
		API_polar::template xo <   64>(s,    25344+    0, 25344+   64,              25344+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 25344+    0, 65024+  256,   128);
		API_polar::template spc<  128>(s, l, 65280+    0,                           25472+    0,   128);
		API_polar::template xo <  128>(s,    25344+    0, 25344+  128,              25344+    0,   128);
		API_polar::template xo <  256>(s,    25088+    0, 25088+  256,              25088+    0,   256);
		API_polar::template xo <  512>(s,    24576+    0, 24576+  512,              24576+    0,   512);
		API_polar::template g  < 1024>(s, l, 61440+    0, 61440+ 1024, 24576+    0, 61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           25628+    0,     4);
		API_polar::template xo0<    4>(s,    25624+    4,                           25624+    0,     4);
		API_polar::template xo0<    8>(s,    25616+    8,                           25616+    0,     8);
		API_polar::template xo0<   16>(s,    25600+   16,                           25600+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 25600+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           25640+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 25640+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           25644+    0,     4);
		API_polar::template xo <    4>(s,    25640+    0, 25640+    4,              25640+    0,     4);
		API_polar::template xo0<    8>(s,    25632+    8,                           25632+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 25632+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           25648+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 25648+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           25652+    0,     4);
		API_polar::template xo <    4>(s,    25648+    0, 25648+    4,              25648+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 25648+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           25656+    0,     8);
		API_polar::template xo <    8>(s,    25648+    0, 25648+    8,              25648+    0,     8);
		API_polar::template xo <   16>(s,    25632+    0, 25632+   16,              25632+    0,    16);
		API_polar::template xo <   32>(s,    25600+    0, 25600+   32,              25600+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 25600+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           25664+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 25664+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           25672+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 25672+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           25676+    0,     4);
		API_polar::template xo <    4>(s,    25672+    0, 25672+    4,              25672+    0,     4);
		API_polar::template xo <    8>(s,    25664+    0, 25664+    8,              25664+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 25664+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           25680+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 25680+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           25684+    0,     4);
		API_polar::template xo <    4>(s,    25680+    0, 25680+    4,              25680+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 25680+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           25688+    0,     8);
		API_polar::template xo <    8>(s,    25680+    0, 25680+    8,              25680+    0,     8);
		API_polar::template xo <   16>(s,    25664+    0, 25664+   16,              25664+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 25664+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           25696+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 25696+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           25700+    0,     4);
		API_polar::template xo <    4>(s,    25696+    0, 25696+    4,              25696+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 25696+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           25704+    0,     8);
		API_polar::template xo <    8>(s,    25696+    0, 25696+    8,              25696+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 25696+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                           25712+    0,    16);
		API_polar::template xo <   16>(s,    25696+    0, 25696+   16,              25696+    0,    16);
		API_polar::template xo <   32>(s,    25664+    0, 25664+   32,              25664+    0,    32);
		API_polar::template xo <   64>(s,    25600+    0, 25600+   64,              25600+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 25600+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           25728+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 25728+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           25736+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 25736+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           25740+    0,     4);
		API_polar::template xo <    4>(s,    25736+    0, 25736+    4,              25736+    0,     4);
		API_polar::template xo <    8>(s,    25728+    0, 25728+    8,              25728+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 25728+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           25744+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 25744+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           25748+    0,     4);
		API_polar::template xo <    4>(s,    25744+    0, 25744+    4,              25744+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 25744+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                           25752+    0,     8);
		API_polar::template xo <    8>(s,    25744+    0, 25744+    8,              25744+    0,     8);
		API_polar::template xo <   16>(s,    25728+    0, 25728+   16,              25728+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 25728+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                           25762+    0,     2);
		API_polar::template xo0<    2>(s,    25760+    2,                           25760+    0,     2);
		API_polar::template g  <    4>(s, l, 65520+    0, 65520+    4, 25760+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           25764+    0,     4);
		API_polar::template xo <    4>(s,    25760+    0, 25760+    4,              25760+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 25760+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                           25768+    0,     8);
		API_polar::template xo <    8>(s,    25760+    0, 25760+    8,              25760+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 25760+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                           25776+    0,    16);
		API_polar::template xo <   16>(s,    25760+    0, 25760+   16,              25760+    0,    16);
		API_polar::template xo <   32>(s,    25728+    0, 25728+   32,              25728+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 25728+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           25792+    0,    64);
		API_polar::template xo <   64>(s,    25728+    0, 25728+   64,              25728+    0,    64);
		API_polar::template xo <  128>(s,    25600+    0, 25600+  128,              25600+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 25600+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           25856+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 25856+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                           25866+    0,     2);
		API_polar::template xo0<    2>(s,    25864+    2,                           25864+    0,     2);
		API_polar::template g  <    4>(s, l, 65520+    0, 65520+    4, 25864+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           25868+    0,     4);
		API_polar::template xo <    4>(s,    25864+    0, 25864+    4,              25864+    0,     4);
		API_polar::template xo <    8>(s,    25856+    0, 25856+    8,              25856+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 25856+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           25872+    0,    16);
		API_polar::template xo <   16>(s,    25856+    0, 25856+   16,              25856+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 25856+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           25888+    0,    32);
		API_polar::template xo <   32>(s,    25856+    0, 25856+   32,              25856+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 25856+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           25920+    0,    64);
		API_polar::template xo <   64>(s,    25856+    0, 25856+   64,              25856+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 25856+    0, 65024+  256,   128);
		API_polar::template spc<  128>(s, l, 65280+    0,                           25984+    0,   128);
		API_polar::template xo <  128>(s,    25856+    0, 25856+  128,              25856+    0,   128);
		API_polar::template xo <  256>(s,    25600+    0, 25600+  256,              25600+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512, 25600+    0, 63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           26116+    0,     4);
		API_polar::template xo0<    4>(s,    26112+    4,                           26112+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 26112+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           26120+    0,     8);
		API_polar::template xo <    8>(s,    26112+    0, 26112+    8,              26112+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 26112+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           26128+    0,    16);
		API_polar::template xo <   16>(s,    26112+    0, 26112+   16,              26112+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 26112+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           26144+    0,    32);
		API_polar::template xo <   32>(s,    26112+    0, 26112+   32,              26112+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 26112+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           26176+    0,    64);
		API_polar::template xo <   64>(s,    26112+    0, 26112+   64,              26112+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 26112+    0, 65024+  256,   128);
		API_polar::template spc<  128>(s, l, 65280+    0,                           26240+    0,   128);
		API_polar::template xo <  128>(s,    26112+    0, 26112+  128,              26112+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 26112+    0, 64512+  512,   256);
		API_polar::template spc<  256>(s, l, 65024+    0,                           26368+    0,   256);
		API_polar::template xo <  256>(s,    26112+    0, 26112+  256,              26112+    0,   256);
		API_polar::template xo <  512>(s,    25600+    0, 25600+  512,              25600+    0,   512);
		API_polar::template xo < 1024>(s,    24576+    0, 24576+ 1024,              24576+    0,  1024);
		API_polar::template g  < 2048>(s, l, 57344+    0, 57344+ 2048, 24576+    0, 57344+ 4096,  2048);
		API_polar::template f  < 1024>(   l, 61440+    0, 61440+ 1024,              61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           26624+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 26624+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           26640+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 26640+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           26648+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 26648+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           26652+    0,     4);
		API_polar::template xo <    4>(s,    26648+    0, 26648+    4,              26648+    0,     4);
		API_polar::template xo <    8>(s,    26640+    0, 26640+    8,              26640+    0,     8);
		API_polar::template xo <   16>(s,    26624+    0, 26624+   16,              26624+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 26624+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           26656+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 26656+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           26664+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 26664+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           26668+    0,     4);
		API_polar::template xo <    4>(s,    26664+    0, 26664+    4,              26664+    0,     4);
		API_polar::template xo <    8>(s,    26656+    0, 26656+    8,              26656+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 26656+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           26672+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 26672+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           26676+    0,     4);
		API_polar::template xo <    4>(s,    26672+    0, 26672+    4,              26672+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 26672+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                           26680+    0,     8);
		API_polar::template xo <    8>(s,    26672+    0, 26672+    8,              26672+    0,     8);
		API_polar::template xo <   16>(s,    26656+    0, 26656+   16,              26656+    0,    16);
		API_polar::template xo <   32>(s,    26624+    0, 26624+   32,              26624+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 26624+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           26688+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 26688+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           26696+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 26696+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           26700+    0,     4);
		API_polar::template xo <    4>(s,    26696+    0, 26696+    4,              26696+    0,     4);
		API_polar::template xo <    8>(s,    26688+    0, 26688+    8,              26688+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 26688+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           26704+    0,    16);
		API_polar::template xo <   16>(s,    26688+    0, 26688+   16,              26688+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 26688+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           26720+    0,    32);
		API_polar::template xo <   32>(s,    26688+    0, 26688+   32,              26688+    0,    32);
		API_polar::template xo <   64>(s,    26624+    0, 26624+   64,              26624+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 26624+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                           26758+    0,     2);
		API_polar::template xo0<    2>(s,    26756+    2,                           26756+    0,     2);
		API_polar::template xo0<    4>(s,    26752+    4,                           26752+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 26752+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           26760+    0,     8);
		API_polar::template xo <    8>(s,    26752+    0, 26752+    8,              26752+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 26752+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           26768+    0,    16);
		API_polar::template xo <   16>(s,    26752+    0, 26752+   16,              26752+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 26752+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           26784+    0,    32);
		API_polar::template xo <   32>(s,    26752+    0, 26752+   32,              26752+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 26752+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           26816+    0,    64);
		API_polar::template xo <   64>(s,    26752+    0, 26752+   64,              26752+    0,    64);
		API_polar::template xo <  128>(s,    26624+    0, 26624+  128,              26624+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 26624+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           26880+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 26880+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           26884+    0,     4);
		API_polar::template xo <    4>(s,    26880+    0, 26880+    4,              26880+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 26880+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           26888+    0,     8);
		API_polar::template xo <    8>(s,    26880+    0, 26880+    8,              26880+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 26880+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           26896+    0,    16);
		API_polar::template xo <   16>(s,    26880+    0, 26880+   16,              26880+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 26880+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           26912+    0,    32);
		API_polar::template xo <   32>(s,    26880+    0, 26880+   32,              26880+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 26880+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           26944+    0,    64);
		API_polar::template xo <   64>(s,    26880+    0, 26880+   64,              26880+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 26880+    0, 65024+  256,   128);
		API_polar::template spc<  128>(s, l, 65280+    0,                           27008+    0,   128);
		API_polar::template xo <  128>(s,    26880+    0, 26880+  128,              26880+    0,   128);
		API_polar::template xo <  256>(s,    26624+    0, 26624+  256,              26624+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512, 26624+    0, 63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           27136+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 27136+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           27140+    0,     4);
		API_polar::template xo <    4>(s,    27136+    0, 27136+    4,              27136+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 27136+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           27144+    0,     8);
		API_polar::template xo <    8>(s,    27136+    0, 27136+    8,              27136+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 27136+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           27152+    0,    16);
		API_polar::template xo <   16>(s,    27136+    0, 27136+   16,              27136+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 27136+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           27168+    0,    32);
		API_polar::template xo <   32>(s,    27136+    0, 27136+   32,              27136+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 27136+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           27200+    0,    64);
		API_polar::template xo <   64>(s,    27136+    0, 27136+   64,              27136+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 27136+    0, 65024+  256,   128);
		API_polar::template spc<  128>(s, l, 65280+    0,                           27264+    0,   128);
		API_polar::template xo <  128>(s,    27136+    0, 27136+  128,              27136+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 27136+    0, 64512+  512,   256);
		API_polar::template spc<  256>(s, l, 65024+    0,                           27392+    0,   256);
		API_polar::template xo <  256>(s,    27136+    0, 27136+  256,              27136+    0,   256);
		API_polar::template xo <  512>(s,    26624+    0, 26624+  512,              26624+    0,   512);
		API_polar::template g  < 1024>(s, l, 61440+    0, 61440+ 1024, 26624+    0, 61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           27648+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 27648+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           27652+    0,     4);
		API_polar::template xo <    4>(s,    27648+    0, 27648+    4,              27648+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 27648+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           27656+    0,     8);
		API_polar::template xo <    8>(s,    27648+    0, 27648+    8,              27648+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 27648+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           27664+    0,    16);
		API_polar::template xo <   16>(s,    27648+    0, 27648+   16,              27648+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 27648+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           27680+    0,    32);
		API_polar::template xo <   32>(s,    27648+    0, 27648+   32,              27648+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 27648+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           27712+    0,    64);
		API_polar::template xo <   64>(s,    27648+    0, 27648+   64,              27648+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 27648+    0, 65024+  256,   128);
		API_polar::template h  <  128>(s, l, 65280+    0,                           27776+    0,   128);
		API_polar::template xo <  128>(s,    27648+    0, 27648+  128,              27648+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 27648+    0, 64512+  512,   256);
		API_polar::template h  <  256>(s, l, 65024+    0,                           27904+    0,   256);
		API_polar::template xo <  256>(s,    27648+    0, 27648+  256,              27648+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512, 27648+    0, 63488+ 1024,   512);
		API_polar::template h  <  512>(s, l, 64512+    0,                           28160+    0,   512);
		API_polar::template xo <  512>(s,    27648+    0, 27648+  512,              27648+    0,   512);
		API_polar::template xo < 1024>(s,    26624+    0, 26624+ 1024,              26624+    0,  1024);
		API_polar::template xo < 2048>(s,    24576+    0, 24576+ 2048,              24576+    0,  2048);
		API_polar::template g  < 4096>(s, l, 49152+    0, 49152+ 4096, 24576+    0, 49152+ 8192,  4096);
		API_polar::template f  < 2048>(   l, 57344+    0, 57344+ 2048,              57344+ 4096,  2048);
		API_polar::template f  < 1024>(   l, 61440+    0, 61440+ 1024,              61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           28672+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 28672+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           28688+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 28688+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           28696+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 28696+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           28700+    0,     4);
		API_polar::template xo <    4>(s,    28696+    0, 28696+    4,              28696+    0,     4);
		API_polar::template xo <    8>(s,    28688+    0, 28688+    8,              28688+    0,     8);
		API_polar::template xo <   16>(s,    28672+    0, 28672+   16,              28672+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 28672+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                           28710+    0,     2);
		API_polar::template xo0<    2>(s,    28708+    2,                           28708+    0,     2);
		API_polar::template xo0<    4>(s,    28704+    4,                           28704+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 28704+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           28712+    0,     8);
		API_polar::template xo <    8>(s,    28704+    0, 28704+    8,              28704+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 28704+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           28720+    0,    16);
		API_polar::template xo <   16>(s,    28704+    0, 28704+   16,              28704+    0,    16);
		API_polar::template xo <   32>(s,    28672+    0, 28672+   32,              28672+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 28672+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           28736+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 28736+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           28740+    0,     4);
		API_polar::template xo <    4>(s,    28736+    0, 28736+    4,              28736+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 28736+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           28744+    0,     8);
		API_polar::template xo <    8>(s,    28736+    0, 28736+    8,              28736+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 28736+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           28752+    0,    16);
		API_polar::template xo <   16>(s,    28736+    0, 28736+   16,              28736+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 28736+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           28768+    0,    32);
		API_polar::template xo <   32>(s,    28736+    0, 28736+   32,              28736+    0,    32);
		API_polar::template xo <   64>(s,    28672+    0, 28672+   64,              28672+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 28672+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           28800+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 28800+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           28804+    0,     4);
		API_polar::template xo <    4>(s,    28800+    0, 28800+    4,              28800+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 28800+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           28808+    0,     8);
		API_polar::template xo <    8>(s,    28800+    0, 28800+    8,              28800+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 28800+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           28816+    0,    16);
		API_polar::template xo <   16>(s,    28800+    0, 28800+   16,              28800+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 28800+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           28832+    0,    32);
		API_polar::template xo <   32>(s,    28800+    0, 28800+   32,              28800+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 28800+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           28864+    0,    64);
		API_polar::template xo <   64>(s,    28800+    0, 28800+   64,              28800+    0,    64);
		API_polar::template xo <  128>(s,    28672+    0, 28672+  128,              28672+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 28672+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           28928+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 28928+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           28932+    0,     4);
		API_polar::template xo <    4>(s,    28928+    0, 28928+    4,              28928+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 28928+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           28936+    0,     8);
		API_polar::template xo <    8>(s,    28928+    0, 28928+    8,              28928+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 28928+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           28944+    0,    16);
		API_polar::template xo <   16>(s,    28928+    0, 28928+   16,              28928+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 28928+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           28960+    0,    32);
		API_polar::template xo <   32>(s,    28928+    0, 28928+   32,              28928+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 28928+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           28992+    0,    64);
		API_polar::template xo <   64>(s,    28928+    0, 28928+   64,              28928+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 28928+    0, 65024+  256,   128);
		API_polar::template h  <  128>(s, l, 65280+    0,                           29056+    0,   128);
		API_polar::template xo <  128>(s,    28928+    0, 28928+  128,              28928+    0,   128);
		API_polar::template xo <  256>(s,    28672+    0, 28672+  256,              28672+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512, 28672+    0, 63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           29184+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 29184+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           29188+    0,     4);
		API_polar::template xo <    4>(s,    29184+    0, 29184+    4,              29184+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 29184+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           29192+    0,     8);
		API_polar::template xo <    8>(s,    29184+    0, 29184+    8,              29184+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 29184+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           29200+    0,    16);
		API_polar::template xo <   16>(s,    29184+    0, 29184+   16,              29184+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 29184+    0, 65408+   64,    32);
		API_polar::template h  <   32>(s, l, 65472+    0,                           29216+    0,    32);
		API_polar::template xo <   32>(s,    29184+    0, 29184+   32,              29184+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 29184+    0, 65280+  128,    64);
		API_polar::template h  <   64>(s, l, 65408+    0,                           29248+    0,    64);
		API_polar::template xo <   64>(s,    29184+    0, 29184+   64,              29184+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 29184+    0, 65024+  256,   128);
		API_polar::template h  <  128>(s, l, 65280+    0,                           29312+    0,   128);
		API_polar::template xo <  128>(s,    29184+    0, 29184+  128,              29184+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 29184+    0, 64512+  512,   256);
		API_polar::template h  <  256>(s, l, 65024+    0,                           29440+    0,   256);
		API_polar::template xo <  256>(s,    29184+    0, 29184+  256,              29184+    0,   256);
		API_polar::template xo <  512>(s,    28672+    0, 28672+  512,              28672+    0,   512);
		API_polar::template g  < 1024>(s, l, 61440+    0, 61440+ 1024, 28672+    0, 61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           29696+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 29696+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           29700+    0,     4);
		API_polar::template xo <    4>(s,    29696+    0, 29696+    4,              29696+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 29696+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                           29704+    0,     8);
		API_polar::template xo <    8>(s,    29696+    0, 29696+    8,              29696+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 29696+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                           29712+    0,    16);
		API_polar::template xo <   16>(s,    29696+    0, 29696+   16,              29696+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 29696+    0, 65408+   64,    32);
		API_polar::template h  <   32>(s, l, 65472+    0,                           29728+    0,    32);
		API_polar::template xo <   32>(s,    29696+    0, 29696+   32,              29696+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 29696+    0, 65280+  128,    64);
		API_polar::template h  <   64>(s, l, 65408+    0,                           29760+    0,    64);
		API_polar::template xo <   64>(s,    29696+    0, 29696+   64,              29696+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 29696+    0, 65024+  256,   128);
		API_polar::template h  <  128>(s, l, 65280+    0,                           29824+    0,   128);
		API_polar::template xo <  128>(s,    29696+    0, 29696+  128,              29696+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 29696+    0, 64512+  512,   256);
		API_polar::template h  <  256>(s, l, 65024+    0,                           29952+    0,   256);
		API_polar::template xo <  256>(s,    29696+    0, 29696+  256,              29696+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512, 29696+    0, 63488+ 1024,   512);
		API_polar::template h  <  512>(s, l, 64512+    0,                           30208+    0,   512);
		API_polar::template xo <  512>(s,    29696+    0, 29696+  512,              29696+    0,   512);
		API_polar::template xo < 1024>(s,    28672+    0, 28672+ 1024,              28672+    0,  1024);
		API_polar::template g  < 2048>(s, l, 57344+    0, 57344+ 2048, 28672+    0, 57344+ 4096,  2048);
		API_polar::template f  < 1024>(   l, 61440+    0, 61440+ 1024,              61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           30720+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 30720+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           30724+    0,     4);
		API_polar::template xo <    4>(s,    30720+    0, 30720+    4,              30720+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 30720+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                           30728+    0,     8);
		API_polar::template xo <    8>(s,    30720+    0, 30720+    8,              30720+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 30720+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                           30736+    0,    16);
		API_polar::template xo <   16>(s,    30720+    0, 30720+   16,              30720+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 30720+    0, 65408+   64,    32);
		API_polar::template h  <   32>(s, l, 65472+    0,                           30752+    0,    32);
		API_polar::template xo <   32>(s,    30720+    0, 30720+   32,              30720+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 30720+    0, 65280+  128,    64);
		API_polar::template h  <   64>(s, l, 65408+    0,                           30784+    0,    64);
		API_polar::template xo <   64>(s,    30720+    0, 30720+   64,              30720+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 30720+    0, 65024+  256,   128);
		API_polar::template h  <  128>(s, l, 65280+    0,                           30848+    0,   128);
		API_polar::template xo <  128>(s,    30720+    0, 30720+  128,              30720+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 30720+    0, 64512+  512,   256);
		API_polar::template h  <  256>(s, l, 65024+    0,                           30976+    0,   256);
		API_polar::template xo <  256>(s,    30720+    0, 30720+  256,              30720+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512, 30720+    0, 63488+ 1024,   512);
		API_polar::template h  <  512>(s, l, 64512+    0,                           31232+    0,   512);
		API_polar::template xo <  512>(s,    30720+    0, 30720+  512,              30720+    0,   512);
		API_polar::template g  < 1024>(s, l, 61440+    0, 61440+ 1024, 30720+    0, 61440+ 2048,  1024);
		API_polar::template h  < 1024>(s, l, 63488+    0,                           31744+    0,  1024);
		API_polar::template xo < 1024>(s,    30720+    0, 30720+ 1024,              30720+    0,  1024);
		API_polar::template xo < 2048>(s,    28672+    0, 28672+ 2048,              28672+    0,  2048);
		API_polar::template xo < 4096>(s,    24576+    0, 24576+ 4096,              24576+    0,  4096);
		API_polar::template xo < 8192>(s,    16384+    0, 16384+ 8192,              16384+    0,  8192);
		API_polar::template xo <16384>(s,        0+    0,     0+16384,                  0+    0, 16384);
	}
};
}
}
#endif
