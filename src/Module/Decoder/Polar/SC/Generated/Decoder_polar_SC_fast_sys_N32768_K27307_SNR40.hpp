#ifndef DECODER_POLAR_SC_FAST_SYS_N32768_K27307_SNR40_HPP_
#define DECODER_POLAR_SC_FAST_SYS_N32768_K27307_SNR40_HPP_

#include <cassert>

#include "../Decoder_polar_SC_fast_sys.hpp"

namespace aff3ct
{
namespace module
{
static const char Frozen_bits_32768_27307_40[32768] = {
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};

template <typename B, typename R, class API_polar>
class Decoder_polar_SC_fast_sys_N32768_K27307_SNR40 : public Decoder_polar_SC_fast_sys<B, R, API_polar>
{
public:
	Decoder_polar_SC_fast_sys_N32768_K27307_SNR40(const int& K, const int& N, const mipp::vector<B>& frozen_bits, const int n_frames = 1)
	: Decoder_polar_SC_fast_sys<B, R, API_polar>(K, N, frozen_bits, n_frames)
	{
		assert(N == 32768);
		assert(K == 27307);
		
		auto i = 0;
		while (i < 32768 && Frozen_bits_32768_27307_40[i] == frozen_bits[i]) i++;
		assert(i == 32768);
	}

	virtual ~Decoder_polar_SC_fast_sys_N32768_K27307_SNR40()
	{
	}

	void decode()
	{
		auto &l = this->l;
		auto &s = this->s;

		API_polar::template f  <16384>(   l,     0+    0,     0+16384,                  0+32768, 16384);
		API_polar::template f  < 8192>(   l, 32768+    0, 32768+ 8192,              32768+16384,  8192);
		API_polar::template f  < 4096>(   l, 49152+    0, 49152+ 4096,              49152+ 8192,  4096);
		API_polar::template f  < 2048>(   l, 57344+    0, 57344+ 2048,              57344+ 4096,  2048);
		API_polar::template f  < 1024>(   l, 61440+    0, 61440+ 1024,              61440+ 2048,  1024);
		API_polar::template g0 <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template g0 <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template g0 <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template rep<   64>(s, l, 65408+    0,                             896+    0,    64);
		API_polar::template gr <   64>(s, l, 65280+    0, 65280+   64,   896+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                             960+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32,   960+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                             992+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16,   992+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            1012+    0,     4);
		API_polar::template xo0<    4>(s,     1008+    4,                            1008+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  1008+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            1016+    0,     8);
		API_polar::template xo <    8>(s,     1008+    0,  1008+    8,               1008+    0,     8);
		API_polar::template xo <   16>(s,      992+    0,   992+   16,                992+    0,    16);
		API_polar::template xo <   32>(s,      960+    0,   960+   32,                960+    0,    32);
		API_polar::template xo <   64>(s,      896+    0,   896+   64,                896+    0,    64);
		API_polar::template xo0<  128>(s,      768+  128,                             768+    0,   128);
		API_polar::template xo0<  256>(s,      512+  256,                             512+    0,   256);
		API_polar::template xo0<  512>(s,        0+  512,                               0+    0,   512);
		API_polar::template g  < 1024>(s, l, 61440+    0, 61440+ 1024,     0+    0, 61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template rep<  256>(s, l, 65024+    0,                            1024+    0,   256);
		API_polar::template gr <  256>(s, l, 64512+    0, 64512+  256,  1024+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template rep<  128>(s, l, 65280+    0,                            1280+    0,   128);
		API_polar::template gr <  128>(s, l, 65024+    0, 65024+  128,  1280+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template g0 <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                            1470+    0,     2);
		API_polar::template xo0<    2>(s,     1468+    2,                            1468+    0,     2);
		API_polar::template xo0<    4>(s,     1464+    4,                            1464+    0,     4);
		API_polar::template xo0<    8>(s,     1456+    8,                            1456+    0,     8);
		API_polar::template xo0<   16>(s,     1440+   16,                            1440+    0,    16);
		API_polar::template xo0<   32>(s,     1408+   32,                            1408+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  1408+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            1488+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  1488+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            1496+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  1496+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            1500+    0,     4);
		API_polar::template xo <    4>(s,     1496+    0,  1496+    4,               1496+    0,     4);
		API_polar::template xo <    8>(s,     1488+    0,  1488+    8,               1488+    0,     8);
		API_polar::template xo0<   16>(s,     1472+   16,                            1472+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  1472+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            1504+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  1504+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            1512+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  1512+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            1516+    0,     4);
		API_polar::template xo <    4>(s,     1512+    0,  1512+    4,               1512+    0,     4);
		API_polar::template xo <    8>(s,     1504+    0,  1504+    8,               1504+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  1504+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            1520+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  1520+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            1524+    0,     4);
		API_polar::template xo <    4>(s,     1520+    0,  1520+    4,               1520+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  1520+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            1528+    0,     8);
		API_polar::template xo <    8>(s,     1520+    0,  1520+    8,               1520+    0,     8);
		API_polar::template xo <   16>(s,     1504+    0,  1504+   16,               1504+    0,    16);
		API_polar::template xo <   32>(s,     1472+    0,  1472+   32,               1472+    0,    32);
		API_polar::template xo <   64>(s,     1408+    0,  1408+   64,               1408+    0,    64);
		API_polar::template xo <  128>(s,     1280+    0,  1280+  128,               1280+    0,   128);
		API_polar::template xo <  256>(s,     1024+    0,  1024+  256,               1024+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512,  1024+    0, 63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template g0 <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template g0 <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            1656+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  1656+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            1660+    0,     4);
		API_polar::template xo <    4>(s,     1656+    0,  1656+    4,               1656+    0,     4);
		API_polar::template xo0<    8>(s,     1648+    8,                            1648+    0,     8);
		API_polar::template xo0<   16>(s,     1632+   16,                            1632+    0,    16);
		API_polar::template xo0<   32>(s,     1600+   32,                            1600+    0,    32);
		API_polar::template xo0<   64>(s,     1536+   64,                            1536+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128,  1536+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template g0 <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                            1696+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16,  1696+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            1712+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  1712+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            1720+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  1720+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            1724+    0,     4);
		API_polar::template xo <    4>(s,     1720+    0,  1720+    4,               1720+    0,     4);
		API_polar::template xo <    8>(s,     1712+    0,  1712+    8,               1712+    0,     8);
		API_polar::template xo <   16>(s,     1696+    0,  1696+   16,               1696+    0,    16);
		API_polar::template xo0<   32>(s,     1664+   32,                            1664+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  1664+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                            1728+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16,  1728+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            1744+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  1744+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            1752+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  1752+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            1756+    0,     4);
		API_polar::template xo <    4>(s,     1752+    0,  1752+    4,               1752+    0,     4);
		API_polar::template xo <    8>(s,     1744+    0,  1744+    8,               1744+    0,     8);
		API_polar::template xo <   16>(s,     1728+    0,  1728+   16,               1728+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  1728+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            1760+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  1760+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                            1770+    0,     2);
		API_polar::template xo0<    2>(s,     1768+    2,                            1768+    0,     2);
		API_polar::template g  <    4>(s, l, 65520+    0, 65520+    4,  1768+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                            1772+    0,     4);
		API_polar::template xo <    4>(s,     1768+    0,  1768+    4,               1768+    0,     4);
		API_polar::template xo <    8>(s,     1760+    0,  1760+    8,               1760+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  1760+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            1776+    0,    16);
		API_polar::template xo <   16>(s,     1760+    0,  1760+   16,               1760+    0,    16);
		API_polar::template xo <   32>(s,     1728+    0,  1728+   32,               1728+    0,    32);
		API_polar::template xo <   64>(s,     1664+    0,  1664+   64,               1664+    0,    64);
		API_polar::template xo <  128>(s,     1536+    0,  1536+  128,               1536+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256,  1536+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                            1792+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32,  1792+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                            1824+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16,  1824+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            1840+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  1840+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            1848+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  1848+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                            1852+    0,     4);
		API_polar::template xo <    4>(s,     1848+    0,  1848+    4,               1848+    0,     4);
		API_polar::template xo <    8>(s,     1840+    0,  1840+    8,               1840+    0,     8);
		API_polar::template xo <   16>(s,     1824+    0,  1824+   16,               1824+    0,    16);
		API_polar::template xo <   32>(s,     1792+    0,  1792+   32,               1792+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  1792+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                            1856+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16,  1856+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            1876+    0,     4);
		API_polar::template xo0<    4>(s,     1872+    4,                            1872+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  1872+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            1880+    0,     8);
		API_polar::template xo <    8>(s,     1872+    0,  1872+    8,               1872+    0,     8);
		API_polar::template xo <   16>(s,     1856+    0,  1856+   16,               1856+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  1856+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            1888+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  1888+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            1892+    0,     4);
		API_polar::template xo <    4>(s,     1888+    0,  1888+    4,               1888+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  1888+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            1896+    0,     8);
		API_polar::template xo <    8>(s,     1888+    0,  1888+    8,               1888+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  1888+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            1904+    0,    16);
		API_polar::template xo <   16>(s,     1888+    0,  1888+   16,               1888+    0,    16);
		API_polar::template xo <   32>(s,     1856+    0,  1856+   32,               1856+    0,    32);
		API_polar::template xo <   64>(s,     1792+    0,  1792+   64,               1792+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128,  1792+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            1928+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  1928+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            1932+    0,     4);
		API_polar::template xo <    4>(s,     1928+    0,  1928+    4,               1928+    0,     4);
		API_polar::template xo0<    8>(s,     1920+    8,                            1920+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  1920+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            1936+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  1936+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            1940+    0,     4);
		API_polar::template xo <    4>(s,     1936+    0,  1936+    4,               1936+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  1936+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            1944+    0,     8);
		API_polar::template xo <    8>(s,     1936+    0,  1936+    8,               1936+    0,     8);
		API_polar::template xo <   16>(s,     1920+    0,  1920+   16,               1920+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  1920+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            1952+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  1952+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            1956+    0,     4);
		API_polar::template xo <    4>(s,     1952+    0,  1952+    4,               1952+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  1952+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            1960+    0,     8);
		API_polar::template xo <    8>(s,     1952+    0,  1952+    8,               1952+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  1952+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            1968+    0,    16);
		API_polar::template xo <   16>(s,     1952+    0,  1952+   16,               1952+    0,    16);
		API_polar::template xo <   32>(s,     1920+    0,  1920+   32,               1920+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  1920+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            1984+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  1984+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            1988+    0,     4);
		API_polar::template xo <    4>(s,     1984+    0,  1984+    4,               1984+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  1984+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            1992+    0,     8);
		API_polar::template xo <    8>(s,     1984+    0,  1984+    8,               1984+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  1984+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            2000+    0,    16);
		API_polar::template xo <   16>(s,     1984+    0,  1984+   16,               1984+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  1984+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                            2016+    0,    32);
		API_polar::template xo <   32>(s,     1984+    0,  1984+   32,               1984+    0,    32);
		API_polar::template xo <   64>(s,     1920+    0,  1920+   64,               1920+    0,    64);
		API_polar::template xo <  128>(s,     1792+    0,  1792+  128,               1792+    0,   128);
		API_polar::template xo <  256>(s,     1536+    0,  1536+  256,               1536+    0,   256);
		API_polar::template xo <  512>(s,     1024+    0,  1024+  512,               1024+    0,   512);
		API_polar::template xo < 1024>(s,        0+    0,     0+ 1024,                  0+    0,  1024);
		API_polar::template g  < 2048>(s, l, 57344+    0, 57344+ 2048,     0+    0, 57344+ 4096,  2048);
		API_polar::template f  < 1024>(   l, 61440+    0, 61440+ 1024,              61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template rep<  256>(s, l, 65024+    0,                            2048+    0,   256);
		API_polar::template gr <  256>(s, l, 64512+    0, 64512+  256,  2048+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template g0 <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template g0 <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            2416+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  2416+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            2424+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  2424+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            2428+    0,     4);
		API_polar::template xo <    4>(s,     2424+    0,  2424+    4,               2424+    0,     4);
		API_polar::template xo <    8>(s,     2416+    0,  2416+    8,               2416+    0,     8);
		API_polar::template xo0<   16>(s,     2400+   16,                            2400+    0,    16);
		API_polar::template xo0<   32>(s,     2368+   32,                            2368+    0,    32);
		API_polar::template xo0<   64>(s,     2304+   64,                            2304+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128,  2304+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                            2432+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32,  2432+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                            2464+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16,  2464+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            2480+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  2480+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            2488+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  2488+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            2492+    0,     4);
		API_polar::template xo <    4>(s,     2488+    0,  2488+    4,               2488+    0,     4);
		API_polar::template xo <    8>(s,     2480+    0,  2480+    8,               2480+    0,     8);
		API_polar::template xo <   16>(s,     2464+    0,  2464+   16,               2464+    0,    16);
		API_polar::template xo <   32>(s,     2432+    0,  2432+   32,               2432+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  2432+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                            2496+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16,  2496+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            2512+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  2512+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            2520+    0,     8);
		API_polar::template xo <    8>(s,     2512+    0,  2512+    8,               2512+    0,     8);
		API_polar::template xo <   16>(s,     2496+    0,  2496+   16,               2496+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  2496+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            2532+    0,     4);
		API_polar::template xo0<    4>(s,     2528+    4,                            2528+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  2528+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            2536+    0,     8);
		API_polar::template xo <    8>(s,     2528+    0,  2528+    8,               2528+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  2528+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            2544+    0,    16);
		API_polar::template xo <   16>(s,     2528+    0,  2528+   16,               2528+    0,    16);
		API_polar::template xo <   32>(s,     2496+    0,  2496+   32,               2496+    0,    32);
		API_polar::template xo <   64>(s,     2432+    0,  2432+   64,               2432+    0,    64);
		API_polar::template xo <  128>(s,     2304+    0,  2304+  128,               2304+    0,   128);
		API_polar::template xo <  256>(s,     2048+    0,  2048+  256,               2048+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512,  2048+    0, 63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template g0 <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                            2624+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32,  2624+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                            2656+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16,  2656+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            2672+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  2672+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            2680+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  2680+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                            2684+    0,     4);
		API_polar::template xo <    4>(s,     2680+    0,  2680+    4,               2680+    0,     4);
		API_polar::template xo <    8>(s,     2672+    0,  2672+    8,               2672+    0,     8);
		API_polar::template xo <   16>(s,     2656+    0,  2656+   16,               2656+    0,    16);
		API_polar::template xo <   32>(s,     2624+    0,  2624+   32,               2624+    0,    32);
		API_polar::template xo0<   64>(s,     2560+   64,                            2560+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128,  2560+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                            2688+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32,  2688+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                            2734+    0,     2);
		API_polar::template xo0<    2>(s,     2732+    2,                            2732+    0,     2);
		API_polar::template xo0<    4>(s,     2728+    4,                            2728+    0,     4);
		API_polar::template xo0<    8>(s,     2720+    8,                            2720+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  2720+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            2736+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  2736+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            2740+    0,     4);
		API_polar::template xo <    4>(s,     2736+    0,  2736+    4,               2736+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  2736+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            2744+    0,     8);
		API_polar::template xo <    8>(s,     2736+    0,  2736+    8,               2736+    0,     8);
		API_polar::template xo <   16>(s,     2720+    0,  2720+   16,               2720+    0,    16);
		API_polar::template xo <   32>(s,     2688+    0,  2688+   32,               2688+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  2688+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            2760+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  2760+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            2764+    0,     4);
		API_polar::template xo <    4>(s,     2760+    0,  2760+    4,               2760+    0,     4);
		API_polar::template xo0<    8>(s,     2752+    8,                            2752+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  2752+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            2768+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  2768+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            2772+    0,     4);
		API_polar::template xo <    4>(s,     2768+    0,  2768+    4,               2768+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  2768+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            2776+    0,     8);
		API_polar::template xo <    8>(s,     2768+    0,  2768+    8,               2768+    0,     8);
		API_polar::template xo <   16>(s,     2752+    0,  2752+   16,               2752+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  2752+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            2784+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  2784+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            2788+    0,     4);
		API_polar::template xo <    4>(s,     2784+    0,  2784+    4,               2784+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  2784+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            2792+    0,     8);
		API_polar::template xo <    8>(s,     2784+    0,  2784+    8,               2784+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  2784+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            2800+    0,    16);
		API_polar::template xo <   16>(s,     2784+    0,  2784+   16,               2784+    0,    16);
		API_polar::template xo <   32>(s,     2752+    0,  2752+   32,               2752+    0,    32);
		API_polar::template xo <   64>(s,     2688+    0,  2688+   64,               2688+    0,    64);
		API_polar::template xo <  128>(s,     2560+    0,  2560+  128,               2560+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256,  2560+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            2840+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  2840+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            2844+    0,     4);
		API_polar::template xo <    4>(s,     2840+    0,  2840+    4,               2840+    0,     4);
		API_polar::template xo0<    8>(s,     2832+    8,                            2832+    0,     8);
		API_polar::template xo0<   16>(s,     2816+   16,                            2816+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  2816+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            2848+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  2848+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            2856+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  2856+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            2860+    0,     4);
		API_polar::template xo <    4>(s,     2856+    0,  2856+    4,               2856+    0,     4);
		API_polar::template xo <    8>(s,     2848+    0,  2848+    8,               2848+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  2848+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            2864+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  2864+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            2868+    0,     4);
		API_polar::template xo <    4>(s,     2864+    0,  2864+    4,               2864+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  2864+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            2872+    0,     8);
		API_polar::template xo <    8>(s,     2864+    0,  2864+    8,               2864+    0,     8);
		API_polar::template xo <   16>(s,     2848+    0,  2848+   16,               2848+    0,    16);
		API_polar::template xo <   32>(s,     2816+    0,  2816+   32,               2816+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  2816+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            2880+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  2880+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            2888+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  2888+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            2892+    0,     4);
		API_polar::template xo <    4>(s,     2888+    0,  2888+    4,               2888+    0,     4);
		API_polar::template xo <    8>(s,     2880+    0,  2880+    8,               2880+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  2880+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            2896+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  2896+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            2900+    0,     4);
		API_polar::template xo <    4>(s,     2896+    0,  2896+    4,               2896+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  2896+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            2904+    0,     8);
		API_polar::template xo <    8>(s,     2896+    0,  2896+    8,               2896+    0,     8);
		API_polar::template xo <   16>(s,     2880+    0,  2880+   16,               2880+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  2880+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            2912+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  2912+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            2916+    0,     4);
		API_polar::template xo <    4>(s,     2912+    0,  2912+    4,               2912+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  2912+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            2920+    0,     8);
		API_polar::template xo <    8>(s,     2912+    0,  2912+    8,               2912+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  2912+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            2928+    0,    16);
		API_polar::template xo <   16>(s,     2912+    0,  2912+   16,               2912+    0,    16);
		API_polar::template xo <   32>(s,     2880+    0,  2880+   32,               2880+    0,    32);
		API_polar::template xo <   64>(s,     2816+    0,  2816+   64,               2816+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128,  2816+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            2944+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  2944+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            2952+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  2952+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            2956+    0,     4);
		API_polar::template xo <    4>(s,     2952+    0,  2952+    4,               2952+    0,     4);
		API_polar::template xo <    8>(s,     2944+    0,  2944+    8,               2944+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  2944+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            2960+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  2960+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            2964+    0,     4);
		API_polar::template xo <    4>(s,     2960+    0,  2960+    4,               2960+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  2960+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                            2968+    0,     8);
		API_polar::template xo <    8>(s,     2960+    0,  2960+    8,               2960+    0,     8);
		API_polar::template xo <   16>(s,     2944+    0,  2944+   16,               2944+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  2944+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                            2978+    0,     2);
		API_polar::template xo0<    2>(s,     2976+    2,                            2976+    0,     2);
		API_polar::template g  <    4>(s, l, 65520+    0, 65520+    4,  2976+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                            2980+    0,     4);
		API_polar::template xo <    4>(s,     2976+    0,  2976+    4,               2976+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  2976+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                            2984+    0,     8);
		API_polar::template xo <    8>(s,     2976+    0,  2976+    8,               2976+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  2976+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                            2992+    0,    16);
		API_polar::template xo <   16>(s,     2976+    0,  2976+   16,               2976+    0,    16);
		API_polar::template xo <   32>(s,     2944+    0,  2944+   32,               2944+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  2944+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                            3008+    0,    64);
		API_polar::template xo <   64>(s,     2944+    0,  2944+   64,               2944+    0,    64);
		API_polar::template xo <  128>(s,     2816+    0,  2816+  128,               2816+    0,   128);
		API_polar::template xo <  256>(s,     2560+    0,  2560+  256,               2560+    0,   256);
		API_polar::template xo <  512>(s,     2048+    0,  2048+  512,               2048+    0,   512);
		API_polar::template g  < 1024>(s, l, 61440+    0, 61440+ 1024,  2048+    0, 61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template rep<   64>(s, l, 65408+    0,                            3072+    0,    64);
		API_polar::template gr <   64>(s, l, 65280+    0, 65280+   64,  3072+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                            3166+    0,     2);
		API_polar::template xo0<    2>(s,     3164+    2,                            3164+    0,     2);
		API_polar::template xo0<    4>(s,     3160+    4,                            3160+    0,     4);
		API_polar::template xo0<    8>(s,     3152+    8,                            3152+    0,     8);
		API_polar::template xo0<   16>(s,     3136+   16,                            3136+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  3136+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            3176+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  3176+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            3180+    0,     4);
		API_polar::template xo <    4>(s,     3176+    0,  3176+    4,               3176+    0,     4);
		API_polar::template xo0<    8>(s,     3168+    8,                            3168+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  3168+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            3184+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  3184+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            3188+    0,     4);
		API_polar::template xo <    4>(s,     3184+    0,  3184+    4,               3184+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  3184+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            3192+    0,     8);
		API_polar::template xo <    8>(s,     3184+    0,  3184+    8,               3184+    0,     8);
		API_polar::template xo <   16>(s,     3168+    0,  3168+   16,               3168+    0,    16);
		API_polar::template xo <   32>(s,     3136+    0,  3136+   32,               3136+    0,    32);
		API_polar::template xo <   64>(s,     3072+    0,  3072+   64,               3072+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128,  3072+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            3216+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  3216+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            3224+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  3224+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            3228+    0,     4);
		API_polar::template xo <    4>(s,     3224+    0,  3224+    4,               3224+    0,     4);
		API_polar::template xo <    8>(s,     3216+    0,  3216+    8,               3216+    0,     8);
		API_polar::template xo0<   16>(s,     3200+   16,                            3200+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  3200+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            3232+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  3232+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            3240+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  3240+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            3244+    0,     4);
		API_polar::template xo <    4>(s,     3240+    0,  3240+    4,               3240+    0,     4);
		API_polar::template xo <    8>(s,     3232+    0,  3232+    8,               3232+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  3232+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            3248+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  3248+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            3252+    0,     4);
		API_polar::template xo <    4>(s,     3248+    0,  3248+    4,               3248+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  3248+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            3256+    0,     8);
		API_polar::template xo <    8>(s,     3248+    0,  3248+    8,               3248+    0,     8);
		API_polar::template xo <   16>(s,     3232+    0,  3232+   16,               3232+    0,    16);
		API_polar::template xo <   32>(s,     3200+    0,  3200+   32,               3200+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  3200+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            3264+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  3264+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            3272+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  3272+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            3276+    0,     4);
		API_polar::template xo <    4>(s,     3272+    0,  3272+    4,               3272+    0,     4);
		API_polar::template xo <    8>(s,     3264+    0,  3264+    8,               3264+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  3264+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            3280+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  3280+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            3284+    0,     4);
		API_polar::template xo <    4>(s,     3280+    0,  3280+    4,               3280+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  3280+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            3288+    0,     8);
		API_polar::template xo <    8>(s,     3280+    0,  3280+    8,               3280+    0,     8);
		API_polar::template xo <   16>(s,     3264+    0,  3264+   16,               3264+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  3264+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            3296+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  3296+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                            3300+    0,     4);
		API_polar::template xo <    4>(s,     3296+    0,  3296+    4,               3296+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  3296+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                            3304+    0,     8);
		API_polar::template xo <    8>(s,     3296+    0,  3296+    8,               3296+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  3296+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                            3312+    0,    16);
		API_polar::template xo <   16>(s,     3296+    0,  3296+   16,               3296+    0,    16);
		API_polar::template xo <   32>(s,     3264+    0,  3264+   32,               3264+    0,    32);
		API_polar::template xo <   64>(s,     3200+    0,  3200+   64,               3200+    0,    64);
		API_polar::template xo <  128>(s,     3072+    0,  3072+  128,               3072+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256,  3072+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                            3328+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16,  3328+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            3344+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  3344+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            3352+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  3352+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            3356+    0,     4);
		API_polar::template xo <    4>(s,     3352+    0,  3352+    4,               3352+    0,     4);
		API_polar::template xo <    8>(s,     3344+    0,  3344+    8,               3344+    0,     8);
		API_polar::template xo <   16>(s,     3328+    0,  3328+   16,               3328+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  3328+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            3360+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  3360+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            3368+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  3368+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            3372+    0,     4);
		API_polar::template xo <    4>(s,     3368+    0,  3368+    4,               3368+    0,     4);
		API_polar::template xo <    8>(s,     3360+    0,  3360+    8,               3360+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  3360+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            3376+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  3376+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                            3380+    0,     4);
		API_polar::template xo <    4>(s,     3376+    0,  3376+    4,               3376+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  3376+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                            3384+    0,     8);
		API_polar::template xo <    8>(s,     3376+    0,  3376+    8,               3376+    0,     8);
		API_polar::template xo <   16>(s,     3360+    0,  3360+   16,               3360+    0,    16);
		API_polar::template xo <   32>(s,     3328+    0,  3328+   32,               3328+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  3328+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            3392+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  3392+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                            3402+    0,     2);
		API_polar::template xo0<    2>(s,     3400+    2,                            3400+    0,     2);
		API_polar::template g  <    4>(s, l, 65520+    0, 65520+    4,  3400+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                            3404+    0,     4);
		API_polar::template xo <    4>(s,     3400+    0,  3400+    4,               3400+    0,     4);
		API_polar::template xo <    8>(s,     3392+    0,  3392+    8,               3392+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  3392+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            3408+    0,    16);
		API_polar::template xo <   16>(s,     3392+    0,  3392+   16,               3392+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  3392+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                            3424+    0,    32);
		API_polar::template xo <   32>(s,     3392+    0,  3392+   32,               3392+    0,    32);
		API_polar::template xo <   64>(s,     3328+    0,  3328+   64,               3328+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128,  3328+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            3460+    0,     4);
		API_polar::template xo0<    4>(s,     3456+    4,                            3456+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  3456+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            3464+    0,     8);
		API_polar::template xo <    8>(s,     3456+    0,  3456+    8,               3456+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  3456+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            3472+    0,    16);
		API_polar::template xo <   16>(s,     3456+    0,  3456+   16,               3456+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  3456+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                            3488+    0,    32);
		API_polar::template xo <   32>(s,     3456+    0,  3456+   32,               3456+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  3456+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                            3520+    0,    64);
		API_polar::template xo <   64>(s,     3456+    0,  3456+   64,               3456+    0,    64);
		API_polar::template xo <  128>(s,     3328+    0,  3328+  128,               3328+    0,   128);
		API_polar::template xo <  256>(s,     3072+    0,  3072+  256,               3072+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512,  3072+    0, 63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                            3584+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16,  3584+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            3600+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  3600+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                            3610+    0,     2);
		API_polar::template xo0<    2>(s,     3608+    2,                            3608+    0,     2);
		API_polar::template g  <    4>(s, l, 65520+    0, 65520+    4,  3608+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                            3612+    0,     4);
		API_polar::template xo <    4>(s,     3608+    0,  3608+    4,               3608+    0,     4);
		API_polar::template xo <    8>(s,     3600+    0,  3600+    8,               3600+    0,     8);
		API_polar::template xo <   16>(s,     3584+    0,  3584+   16,               3584+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  3584+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            3620+    0,     4);
		API_polar::template xo0<    4>(s,     3616+    4,                            3616+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  3616+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            3624+    0,     8);
		API_polar::template xo <    8>(s,     3616+    0,  3616+    8,               3616+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  3616+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            3632+    0,    16);
		API_polar::template xo <   16>(s,     3616+    0,  3616+   16,               3616+    0,    16);
		API_polar::template xo <   32>(s,     3584+    0,  3584+   32,               3584+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  3584+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            3648+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  3648+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            3652+    0,     4);
		API_polar::template xo <    4>(s,     3648+    0,  3648+    4,               3648+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  3648+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            3656+    0,     8);
		API_polar::template xo <    8>(s,     3648+    0,  3648+    8,               3648+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  3648+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            3664+    0,    16);
		API_polar::template xo <   16>(s,     3648+    0,  3648+   16,               3648+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  3648+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                            3680+    0,    32);
		API_polar::template xo <   32>(s,     3648+    0,  3648+   32,               3648+    0,    32);
		API_polar::template xo <   64>(s,     3584+    0,  3584+   64,               3584+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128,  3584+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            3712+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  3712+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            3716+    0,     4);
		API_polar::template xo <    4>(s,     3712+    0,  3712+    4,               3712+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  3712+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            3720+    0,     8);
		API_polar::template xo <    8>(s,     3712+    0,  3712+    8,               3712+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  3712+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            3728+    0,    16);
		API_polar::template xo <   16>(s,     3712+    0,  3712+   16,               3712+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  3712+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                            3744+    0,    32);
		API_polar::template xo <   32>(s,     3712+    0,  3712+   32,               3712+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  3712+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                            3776+    0,    64);
		API_polar::template xo <   64>(s,     3712+    0,  3712+   64,               3712+    0,    64);
		API_polar::template xo <  128>(s,     3584+    0,  3584+  128,               3584+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256,  3584+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            3840+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  3840+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            3844+    0,     4);
		API_polar::template xo <    4>(s,     3840+    0,  3840+    4,               3840+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  3840+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            3848+    0,     8);
		API_polar::template xo <    8>(s,     3840+    0,  3840+    8,               3840+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  3840+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            3856+    0,    16);
		API_polar::template xo <   16>(s,     3840+    0,  3840+   16,               3840+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  3840+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                            3872+    0,    32);
		API_polar::template xo <   32>(s,     3840+    0,  3840+   32,               3840+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  3840+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                            3904+    0,    64);
		API_polar::template xo <   64>(s,     3840+    0,  3840+   64,               3840+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128,  3840+    0, 65024+  256,   128);
		API_polar::template spc<  128>(s, l, 65280+    0,                            3968+    0,   128);
		API_polar::template xo <  128>(s,     3840+    0,  3840+  128,               3840+    0,   128);
		API_polar::template xo <  256>(s,     3584+    0,  3584+  256,               3584+    0,   256);
		API_polar::template xo <  512>(s,     3072+    0,  3072+  512,               3072+    0,   512);
		API_polar::template xo < 1024>(s,     2048+    0,  2048+ 1024,               2048+    0,  1024);
		API_polar::template xo < 2048>(s,        0+    0,     0+ 2048,                  0+    0,  2048);
		API_polar::template g  < 4096>(s, l, 49152+    0, 49152+ 4096,     0+    0, 49152+ 8192,  4096);
		API_polar::template f  < 2048>(   l, 57344+    0, 57344+ 2048,              57344+ 4096,  2048);
		API_polar::template f  < 1024>(   l, 61440+    0, 61440+ 1024,              61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template g0 <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template g0 <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                            4288+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32,  4288+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                            4320+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16,  4320+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            4336+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  4336+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            4344+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  4344+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            4348+    0,     4);
		API_polar::template xo <    4>(s,     4344+    0,  4344+    4,               4344+    0,     4);
		API_polar::template xo <    8>(s,     4336+    0,  4336+    8,               4336+    0,     8);
		API_polar::template xo <   16>(s,     4320+    0,  4320+   16,               4320+    0,    16);
		API_polar::template xo <   32>(s,     4288+    0,  4288+   32,               4288+    0,    32);
		API_polar::template xo0<   64>(s,     4224+   64,                            4224+    0,    64);
		API_polar::template xo0<  128>(s,     4096+  128,                            4096+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256,  4096+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template rep<   64>(s, l, 65408+    0,                            4352+    0,    64);
		API_polar::template gr <   64>(s, l, 65280+    0, 65280+   64,  4352+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                            4416+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32,  4416+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                            4462+    0,     2);
		API_polar::template xo0<    2>(s,     4460+    2,                            4460+    0,     2);
		API_polar::template xo0<    4>(s,     4456+    4,                            4456+    0,     4);
		API_polar::template xo0<    8>(s,     4448+    8,                            4448+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  4448+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            4464+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  4464+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            4468+    0,     4);
		API_polar::template xo <    4>(s,     4464+    0,  4464+    4,               4464+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  4464+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            4472+    0,     8);
		API_polar::template xo <    8>(s,     4464+    0,  4464+    8,               4464+    0,     8);
		API_polar::template xo <   16>(s,     4448+    0,  4448+   16,               4448+    0,    16);
		API_polar::template xo <   32>(s,     4416+    0,  4416+   32,               4416+    0,    32);
		API_polar::template xo <   64>(s,     4352+    0,  4352+   64,               4352+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128,  4352+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            4508+    0,     4);
		API_polar::template xo0<    4>(s,     4504+    4,                            4504+    0,     4);
		API_polar::template xo0<    8>(s,     4496+    8,                            4496+    0,     8);
		API_polar::template xo0<   16>(s,     4480+   16,                            4480+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  4480+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            4512+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  4512+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            4520+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  4520+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            4524+    0,     4);
		API_polar::template xo <    4>(s,     4520+    0,  4520+    4,               4520+    0,     4);
		API_polar::template xo <    8>(s,     4512+    0,  4512+    8,               4512+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  4512+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            4528+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  4528+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            4532+    0,     4);
		API_polar::template xo <    4>(s,     4528+    0,  4528+    4,               4528+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  4528+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            4536+    0,     8);
		API_polar::template xo <    8>(s,     4528+    0,  4528+    8,               4528+    0,     8);
		API_polar::template xo <   16>(s,     4512+    0,  4512+   16,               4512+    0,    16);
		API_polar::template xo <   32>(s,     4480+    0,  4480+   32,               4480+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  4480+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            4544+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  4544+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            4552+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  4552+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            4556+    0,     4);
		API_polar::template xo <    4>(s,     4552+    0,  4552+    4,               4552+    0,     4);
		API_polar::template xo <    8>(s,     4544+    0,  4544+    8,               4544+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  4544+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            4560+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  4560+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            4564+    0,     4);
		API_polar::template xo <    4>(s,     4560+    0,  4560+    4,               4560+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  4560+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            4568+    0,     8);
		API_polar::template xo <    8>(s,     4560+    0,  4560+    8,               4560+    0,     8);
		API_polar::template xo <   16>(s,     4544+    0,  4544+   16,               4544+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  4544+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            4576+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  4576+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            4580+    0,     4);
		API_polar::template xo <    4>(s,     4576+    0,  4576+    4,               4576+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  4576+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            4584+    0,     8);
		API_polar::template xo <    8>(s,     4576+    0,  4576+    8,               4576+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  4576+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            4592+    0,    16);
		API_polar::template xo <   16>(s,     4576+    0,  4576+   16,               4576+    0,    16);
		API_polar::template xo <   32>(s,     4544+    0,  4544+   32,               4544+    0,    32);
		API_polar::template xo <   64>(s,     4480+    0,  4480+   64,               4480+    0,    64);
		API_polar::template xo <  128>(s,     4352+    0,  4352+  128,               4352+    0,   128);
		API_polar::template xo <  256>(s,     4096+    0,  4096+  256,               4096+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512,  4096+    0, 63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template rep<   64>(s, l, 65408+    0,                            4608+    0,    64);
		API_polar::template gr <   64>(s, l, 65280+    0, 65280+   64,  4608+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            4688+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  4688+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            4696+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  4696+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            4700+    0,     4);
		API_polar::template xo <    4>(s,     4696+    0,  4696+    4,               4696+    0,     4);
		API_polar::template xo <    8>(s,     4688+    0,  4688+    8,               4688+    0,     8);
		API_polar::template xo0<   16>(s,     4672+   16,                            4672+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  4672+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            4704+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  4704+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            4712+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  4712+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            4716+    0,     4);
		API_polar::template xo <    4>(s,     4712+    0,  4712+    4,               4712+    0,     4);
		API_polar::template xo <    8>(s,     4704+    0,  4704+    8,               4704+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  4704+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            4720+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  4720+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            4724+    0,     4);
		API_polar::template xo <    4>(s,     4720+    0,  4720+    4,               4720+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  4720+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            4728+    0,     8);
		API_polar::template xo <    8>(s,     4720+    0,  4720+    8,               4720+    0,     8);
		API_polar::template xo <   16>(s,     4704+    0,  4704+   16,               4704+    0,    16);
		API_polar::template xo <   32>(s,     4672+    0,  4672+   32,               4672+    0,    32);
		API_polar::template xo <   64>(s,     4608+    0,  4608+   64,               4608+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128,  4608+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                            4736+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16,  4736+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            4752+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  4752+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            4760+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  4760+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            4764+    0,     4);
		API_polar::template xo <    4>(s,     4760+    0,  4760+    4,               4760+    0,     4);
		API_polar::template xo <    8>(s,     4752+    0,  4752+    8,               4752+    0,     8);
		API_polar::template xo <   16>(s,     4736+    0,  4736+   16,               4736+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  4736+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            4768+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  4768+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            4776+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  4776+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            4780+    0,     4);
		API_polar::template xo <    4>(s,     4776+    0,  4776+    4,               4776+    0,     4);
		API_polar::template xo <    8>(s,     4768+    0,  4768+    8,               4768+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  4768+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            4784+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  4784+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            4788+    0,     4);
		API_polar::template xo <    4>(s,     4784+    0,  4784+    4,               4784+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  4784+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            4792+    0,     8);
		API_polar::template xo <    8>(s,     4784+    0,  4784+    8,               4784+    0,     8);
		API_polar::template xo <   16>(s,     4768+    0,  4768+   16,               4768+    0,    16);
		API_polar::template xo <   32>(s,     4736+    0,  4736+   32,               4736+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  4736+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            4800+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  4800+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            4808+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  4808+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                            4812+    0,     4);
		API_polar::template xo <    4>(s,     4808+    0,  4808+    4,               4808+    0,     4);
		API_polar::template xo <    8>(s,     4800+    0,  4800+    8,               4800+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  4800+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            4816+    0,    16);
		API_polar::template xo <   16>(s,     4800+    0,  4800+   16,               4800+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  4800+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                            4832+    0,    32);
		API_polar::template xo <   32>(s,     4800+    0,  4800+   32,               4800+    0,    32);
		API_polar::template xo <   64>(s,     4736+    0,  4736+   64,               4736+    0,    64);
		API_polar::template xo <  128>(s,     4608+    0,  4608+  128,               4608+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256,  4608+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                            4864+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16,  4864+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            4880+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  4880+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            4888+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  4888+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            4892+    0,     4);
		API_polar::template xo <    4>(s,     4888+    0,  4888+    4,               4888+    0,     4);
		API_polar::template xo <    8>(s,     4880+    0,  4880+    8,               4880+    0,     8);
		API_polar::template xo <   16>(s,     4864+    0,  4864+   16,               4864+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  4864+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            4896+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  4896+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            4904+    0,     8);
		API_polar::template xo <    8>(s,     4896+    0,  4896+    8,               4896+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  4896+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            4912+    0,    16);
		API_polar::template xo <   16>(s,     4896+    0,  4896+   16,               4896+    0,    16);
		API_polar::template xo <   32>(s,     4864+    0,  4864+   32,               4864+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  4864+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            4932+    0,     4);
		API_polar::template xo0<    4>(s,     4928+    4,                            4928+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  4928+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            4936+    0,     8);
		API_polar::template xo <    8>(s,     4928+    0,  4928+    8,               4928+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  4928+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            4944+    0,    16);
		API_polar::template xo <   16>(s,     4928+    0,  4928+   16,               4928+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  4928+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                            4960+    0,    32);
		API_polar::template xo <   32>(s,     4928+    0,  4928+   32,               4928+    0,    32);
		API_polar::template xo <   64>(s,     4864+    0,  4864+   64,               4864+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128,  4864+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            4992+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  4992+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            4996+    0,     4);
		API_polar::template xo <    4>(s,     4992+    0,  4992+    4,               4992+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  4992+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            5000+    0,     8);
		API_polar::template xo <    8>(s,     4992+    0,  4992+    8,               4992+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  4992+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            5008+    0,    16);
		API_polar::template xo <   16>(s,     4992+    0,  4992+   16,               4992+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  4992+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                            5024+    0,    32);
		API_polar::template xo <   32>(s,     4992+    0,  4992+   32,               4992+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  4992+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                            5056+    0,    64);
		API_polar::template xo <   64>(s,     4992+    0,  4992+   64,               4992+    0,    64);
		API_polar::template xo <  128>(s,     4864+    0,  4864+  128,               4864+    0,   128);
		API_polar::template xo <  256>(s,     4608+    0,  4608+  256,               4608+    0,   256);
		API_polar::template xo <  512>(s,     4096+    0,  4096+  512,               4096+    0,   512);
		API_polar::template g  < 1024>(s, l, 61440+    0, 61440+ 1024,  4096+    0, 61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template g0 <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                            5152+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16,  5152+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            5168+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  5168+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            5176+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  5176+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            5180+    0,     4);
		API_polar::template xo <    4>(s,     5176+    0,  5176+    4,               5176+    0,     4);
		API_polar::template xo <    8>(s,     5168+    0,  5168+    8,               5168+    0,     8);
		API_polar::template xo <   16>(s,     5152+    0,  5152+   16,               5152+    0,    16);
		API_polar::template xo0<   32>(s,     5120+   32,                            5120+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  5120+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                            5184+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16,  5184+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            5200+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  5200+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            5208+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  5208+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            5212+    0,     4);
		API_polar::template xo <    4>(s,     5208+    0,  5208+    4,               5208+    0,     4);
		API_polar::template xo <    8>(s,     5200+    0,  5200+    8,               5200+    0,     8);
		API_polar::template xo <   16>(s,     5184+    0,  5184+   16,               5184+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  5184+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            5216+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  5216+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            5224+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  5224+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                            5228+    0,     4);
		API_polar::template xo <    4>(s,     5224+    0,  5224+    4,               5224+    0,     4);
		API_polar::template xo <    8>(s,     5216+    0,  5216+    8,               5216+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  5216+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            5232+    0,    16);
		API_polar::template xo <   16>(s,     5216+    0,  5216+   16,               5216+    0,    16);
		API_polar::template xo <   32>(s,     5184+    0,  5184+   32,               5184+    0,    32);
		API_polar::template xo <   64>(s,     5120+    0,  5120+   64,               5120+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128,  5120+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                            5248+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16,  5248+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            5264+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  5264+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                            5274+    0,     2);
		API_polar::template xo0<    2>(s,     5272+    2,                            5272+    0,     2);
		API_polar::template g  <    4>(s, l, 65520+    0, 65520+    4,  5272+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                            5276+    0,     4);
		API_polar::template xo <    4>(s,     5272+    0,  5272+    4,               5272+    0,     4);
		API_polar::template xo <    8>(s,     5264+    0,  5264+    8,               5264+    0,     8);
		API_polar::template xo <   16>(s,     5248+    0,  5248+   16,               5248+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  5248+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            5284+    0,     4);
		API_polar::template xo0<    4>(s,     5280+    4,                            5280+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  5280+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            5288+    0,     8);
		API_polar::template xo <    8>(s,     5280+    0,  5280+    8,               5280+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  5280+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            5296+    0,    16);
		API_polar::template xo <   16>(s,     5280+    0,  5280+   16,               5280+    0,    16);
		API_polar::template xo <   32>(s,     5248+    0,  5248+   32,               5248+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  5248+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            5312+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  5312+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            5316+    0,     4);
		API_polar::template xo <    4>(s,     5312+    0,  5312+    4,               5312+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  5312+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            5320+    0,     8);
		API_polar::template xo <    8>(s,     5312+    0,  5312+    8,               5312+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  5312+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            5328+    0,    16);
		API_polar::template xo <   16>(s,     5312+    0,  5312+   16,               5312+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  5312+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                            5344+    0,    32);
		API_polar::template xo <   32>(s,     5312+    0,  5312+   32,               5312+    0,    32);
		API_polar::template xo <   64>(s,     5248+    0,  5248+   64,               5248+    0,    64);
		API_polar::template xo <  128>(s,     5120+    0,  5120+  128,               5120+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256,  5120+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            5388+    0,     4);
		API_polar::template xo0<    4>(s,     5384+    4,                            5384+    0,     4);
		API_polar::template xo0<    8>(s,     5376+    8,                            5376+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  5376+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            5392+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  5392+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            5396+    0,     4);
		API_polar::template xo <    4>(s,     5392+    0,  5392+    4,               5392+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  5392+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            5400+    0,     8);
		API_polar::template xo <    8>(s,     5392+    0,  5392+    8,               5392+    0,     8);
		API_polar::template xo <   16>(s,     5376+    0,  5376+   16,               5376+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  5376+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            5408+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  5408+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            5412+    0,     4);
		API_polar::template xo <    4>(s,     5408+    0,  5408+    4,               5408+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  5408+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            5416+    0,     8);
		API_polar::template xo <    8>(s,     5408+    0,  5408+    8,               5408+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  5408+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            5424+    0,    16);
		API_polar::template xo <   16>(s,     5408+    0,  5408+   16,               5408+    0,    16);
		API_polar::template xo <   32>(s,     5376+    0,  5376+   32,               5376+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  5376+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            5440+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  5440+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            5444+    0,     4);
		API_polar::template xo <    4>(s,     5440+    0,  5440+    4,               5440+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  5440+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            5448+    0,     8);
		API_polar::template xo <    8>(s,     5440+    0,  5440+    8,               5440+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  5440+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            5456+    0,    16);
		API_polar::template xo <   16>(s,     5440+    0,  5440+   16,               5440+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  5440+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                            5472+    0,    32);
		API_polar::template xo <   32>(s,     5440+    0,  5440+   32,               5440+    0,    32);
		API_polar::template xo <   64>(s,     5376+    0,  5376+   64,               5376+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128,  5376+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            5504+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  5504+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            5508+    0,     4);
		API_polar::template xo <    4>(s,     5504+    0,  5504+    4,               5504+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  5504+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            5512+    0,     8);
		API_polar::template xo <    8>(s,     5504+    0,  5504+    8,               5504+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  5504+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            5520+    0,    16);
		API_polar::template xo <   16>(s,     5504+    0,  5504+   16,               5504+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  5504+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                            5536+    0,    32);
		API_polar::template xo <   32>(s,     5504+    0,  5504+   32,               5504+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  5504+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                            5568+    0,    64);
		API_polar::template xo <   64>(s,     5504+    0,  5504+   64,               5504+    0,    64);
		API_polar::template xo <  128>(s,     5376+    0,  5376+  128,               5376+    0,   128);
		API_polar::template xo <  256>(s,     5120+    0,  5120+  256,               5120+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512,  5120+    0, 63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            5632+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  5632+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            5640+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  5640+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            5644+    0,     4);
		API_polar::template xo <    4>(s,     5640+    0,  5640+    4,               5640+    0,     4);
		API_polar::template xo <    8>(s,     5632+    0,  5632+    8,               5632+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  5632+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            5648+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  5648+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            5652+    0,     4);
		API_polar::template xo <    4>(s,     5648+    0,  5648+    4,               5648+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  5648+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            5656+    0,     8);
		API_polar::template xo <    8>(s,     5648+    0,  5648+    8,               5648+    0,     8);
		API_polar::template xo <   16>(s,     5632+    0,  5632+   16,               5632+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  5632+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            5664+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  5664+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            5668+    0,     4);
		API_polar::template xo <    4>(s,     5664+    0,  5664+    4,               5664+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  5664+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            5672+    0,     8);
		API_polar::template xo <    8>(s,     5664+    0,  5664+    8,               5664+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  5664+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            5680+    0,    16);
		API_polar::template xo <   16>(s,     5664+    0,  5664+   16,               5664+    0,    16);
		API_polar::template xo <   32>(s,     5632+    0,  5632+   32,               5632+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  5632+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            5696+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  5696+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            5700+    0,     4);
		API_polar::template xo <    4>(s,     5696+    0,  5696+    4,               5696+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  5696+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            5704+    0,     8);
		API_polar::template xo <    8>(s,     5696+    0,  5696+    8,               5696+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  5696+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            5712+    0,    16);
		API_polar::template xo <   16>(s,     5696+    0,  5696+   16,               5696+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  5696+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                            5728+    0,    32);
		API_polar::template xo <   32>(s,     5696+    0,  5696+   32,               5696+    0,    32);
		API_polar::template xo <   64>(s,     5632+    0,  5632+   64,               5632+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128,  5632+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            5760+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  5760+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            5764+    0,     4);
		API_polar::template xo <    4>(s,     5760+    0,  5760+    4,               5760+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  5760+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            5768+    0,     8);
		API_polar::template xo <    8>(s,     5760+    0,  5760+    8,               5760+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  5760+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                            5776+    0,    16);
		API_polar::template xo <   16>(s,     5760+    0,  5760+   16,               5760+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  5760+    0, 65408+   64,    32);
		API_polar::template h  <   32>(s, l, 65472+    0,                            5792+    0,    32);
		API_polar::template xo <   32>(s,     5760+    0,  5760+   32,               5760+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  5760+    0, 65280+  128,    64);
		API_polar::template h  <   64>(s, l, 65408+    0,                            5824+    0,    64);
		API_polar::template xo <   64>(s,     5760+    0,  5760+   64,               5760+    0,    64);
		API_polar::template xo <  128>(s,     5632+    0,  5632+  128,               5632+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256,  5632+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            5888+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  5888+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                            5892+    0,     4);
		API_polar::template xo <    4>(s,     5888+    0,  5888+    4,               5888+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  5888+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                            5896+    0,     8);
		API_polar::template xo <    8>(s,     5888+    0,  5888+    8,               5888+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  5888+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                            5904+    0,    16);
		API_polar::template xo <   16>(s,     5888+    0,  5888+   16,               5888+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  5888+    0, 65408+   64,    32);
		API_polar::template h  <   32>(s, l, 65472+    0,                            5920+    0,    32);
		API_polar::template xo <   32>(s,     5888+    0,  5888+   32,               5888+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  5888+    0, 65280+  128,    64);
		API_polar::template h  <   64>(s, l, 65408+    0,                            5952+    0,    64);
		API_polar::template xo <   64>(s,     5888+    0,  5888+   64,               5888+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128,  5888+    0, 65024+  256,   128);
		API_polar::template h  <  128>(s, l, 65280+    0,                            6016+    0,   128);
		API_polar::template xo <  128>(s,     5888+    0,  5888+  128,               5888+    0,   128);
		API_polar::template xo <  256>(s,     5632+    0,  5632+  256,               5632+    0,   256);
		API_polar::template xo <  512>(s,     5120+    0,  5120+  512,               5120+    0,   512);
		API_polar::template xo < 1024>(s,     4096+    0,  4096+ 1024,               4096+    0,  1024);
		API_polar::template g  < 2048>(s, l, 57344+    0, 57344+ 2048,  4096+    0, 57344+ 4096,  2048);
		API_polar::template f  < 1024>(   l, 61440+    0, 61440+ 1024,              61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                            6144+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32,  6144+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                            6176+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16,  6176+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            6192+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  6192+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                            6202+    0,     2);
		API_polar::template xo0<    2>(s,     6200+    2,                            6200+    0,     2);
		API_polar::template g  <    4>(s, l, 65520+    0, 65520+    4,  6200+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                            6204+    0,     4);
		API_polar::template xo <    4>(s,     6200+    0,  6200+    4,               6200+    0,     4);
		API_polar::template xo <    8>(s,     6192+    0,  6192+    8,               6192+    0,     8);
		API_polar::template xo <   16>(s,     6176+    0,  6176+   16,               6176+    0,    16);
		API_polar::template xo <   32>(s,     6144+    0,  6144+   32,               6144+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  6144+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                            6222+    0,     2);
		API_polar::template xo0<    2>(s,     6220+    2,                            6220+    0,     2);
		API_polar::template xo0<    4>(s,     6216+    4,                            6216+    0,     4);
		API_polar::template xo0<    8>(s,     6208+    8,                            6208+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  6208+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            6224+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  6224+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            6228+    0,     4);
		API_polar::template xo <    4>(s,     6224+    0,  6224+    4,               6224+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  6224+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            6232+    0,     8);
		API_polar::template xo <    8>(s,     6224+    0,  6224+    8,               6224+    0,     8);
		API_polar::template xo <   16>(s,     6208+    0,  6208+   16,               6208+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  6208+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            6240+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  6240+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            6244+    0,     4);
		API_polar::template xo <    4>(s,     6240+    0,  6240+    4,               6240+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  6240+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            6248+    0,     8);
		API_polar::template xo <    8>(s,     6240+    0,  6240+    8,               6240+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  6240+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            6256+    0,    16);
		API_polar::template xo <   16>(s,     6240+    0,  6240+   16,               6240+    0,    16);
		API_polar::template xo <   32>(s,     6208+    0,  6208+   32,               6208+    0,    32);
		API_polar::template xo <   64>(s,     6144+    0,  6144+   64,               6144+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128,  6144+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            6280+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  6280+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            6284+    0,     4);
		API_polar::template xo <    4>(s,     6280+    0,  6280+    4,               6280+    0,     4);
		API_polar::template xo0<    8>(s,     6272+    8,                            6272+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  6272+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            6288+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  6288+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            6292+    0,     4);
		API_polar::template xo <    4>(s,     6288+    0,  6288+    4,               6288+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  6288+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            6296+    0,     8);
		API_polar::template xo <    8>(s,     6288+    0,  6288+    8,               6288+    0,     8);
		API_polar::template xo <   16>(s,     6272+    0,  6272+   16,               6272+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  6272+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            6304+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  6304+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            6308+    0,     4);
		API_polar::template xo <    4>(s,     6304+    0,  6304+    4,               6304+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  6304+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            6312+    0,     8);
		API_polar::template xo <    8>(s,     6304+    0,  6304+    8,               6304+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  6304+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            6320+    0,    16);
		API_polar::template xo <   16>(s,     6304+    0,  6304+   16,               6304+    0,    16);
		API_polar::template xo <   32>(s,     6272+    0,  6272+   32,               6272+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  6272+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            6336+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  6336+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            6340+    0,     4);
		API_polar::template xo <    4>(s,     6336+    0,  6336+    4,               6336+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  6336+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            6344+    0,     8);
		API_polar::template xo <    8>(s,     6336+    0,  6336+    8,               6336+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  6336+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            6352+    0,    16);
		API_polar::template xo <   16>(s,     6336+    0,  6336+   16,               6336+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  6336+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                            6368+    0,    32);
		API_polar::template xo <   32>(s,     6336+    0,  6336+   32,               6336+    0,    32);
		API_polar::template xo <   64>(s,     6272+    0,  6272+   64,               6272+    0,    64);
		API_polar::template xo <  128>(s,     6144+    0,  6144+  128,               6144+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256,  6144+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            6400+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  6400+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            6408+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  6408+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            6412+    0,     4);
		API_polar::template xo <    4>(s,     6408+    0,  6408+    4,               6408+    0,     4);
		API_polar::template xo <    8>(s,     6400+    0,  6400+    8,               6400+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  6400+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            6416+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  6416+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            6420+    0,     4);
		API_polar::template xo <    4>(s,     6416+    0,  6416+    4,               6416+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  6416+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            6424+    0,     8);
		API_polar::template xo <    8>(s,     6416+    0,  6416+    8,               6416+    0,     8);
		API_polar::template xo <   16>(s,     6400+    0,  6400+   16,               6400+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  6400+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            6432+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  6432+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            6436+    0,     4);
		API_polar::template xo <    4>(s,     6432+    0,  6432+    4,               6432+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  6432+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            6440+    0,     8);
		API_polar::template xo <    8>(s,     6432+    0,  6432+    8,               6432+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  6432+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            6448+    0,    16);
		API_polar::template xo <   16>(s,     6432+    0,  6432+   16,               6432+    0,    16);
		API_polar::template xo <   32>(s,     6400+    0,  6400+   32,               6400+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  6400+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            6464+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  6464+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            6468+    0,     4);
		API_polar::template xo <    4>(s,     6464+    0,  6464+    4,               6464+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  6464+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            6472+    0,     8);
		API_polar::template xo <    8>(s,     6464+    0,  6464+    8,               6464+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  6464+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                            6480+    0,    16);
		API_polar::template xo <   16>(s,     6464+    0,  6464+   16,               6464+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  6464+    0, 65408+   64,    32);
		API_polar::template h  <   32>(s, l, 65472+    0,                            6496+    0,    32);
		API_polar::template xo <   32>(s,     6464+    0,  6464+   32,               6464+    0,    32);
		API_polar::template xo <   64>(s,     6400+    0,  6400+   64,               6400+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128,  6400+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            6528+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  6528+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                            6532+    0,     4);
		API_polar::template xo <    4>(s,     6528+    0,  6528+    4,               6528+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  6528+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                            6536+    0,     8);
		API_polar::template xo <    8>(s,     6528+    0,  6528+    8,               6528+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  6528+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                            6544+    0,    16);
		API_polar::template xo <   16>(s,     6528+    0,  6528+   16,               6528+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  6528+    0, 65408+   64,    32);
		API_polar::template h  <   32>(s, l, 65472+    0,                            6560+    0,    32);
		API_polar::template xo <   32>(s,     6528+    0,  6528+   32,               6528+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  6528+    0, 65280+  128,    64);
		API_polar::template h  <   64>(s, l, 65408+    0,                            6592+    0,    64);
		API_polar::template xo <   64>(s,     6528+    0,  6528+   64,               6528+    0,    64);
		API_polar::template xo <  128>(s,     6400+    0,  6400+  128,               6400+    0,   128);
		API_polar::template xo <  256>(s,     6144+    0,  6144+  256,               6144+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512,  6144+    0, 63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            6656+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  6656+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            6664+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  6664+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            6668+    0,     4);
		API_polar::template xo <    4>(s,     6664+    0,  6664+    4,               6664+    0,     4);
		API_polar::template xo <    8>(s,     6656+    0,  6656+    8,               6656+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  6656+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            6672+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  6672+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            6676+    0,     4);
		API_polar::template xo <    4>(s,     6672+    0,  6672+    4,               6672+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  6672+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            6680+    0,     8);
		API_polar::template xo <    8>(s,     6672+    0,  6672+    8,               6672+    0,     8);
		API_polar::template xo <   16>(s,     6656+    0,  6656+   16,               6656+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  6656+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            6688+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  6688+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            6692+    0,     4);
		API_polar::template xo <    4>(s,     6688+    0,  6688+    4,               6688+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  6688+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                            6696+    0,     8);
		API_polar::template xo <    8>(s,     6688+    0,  6688+    8,               6688+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  6688+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                            6704+    0,    16);
		API_polar::template xo <   16>(s,     6688+    0,  6688+   16,               6688+    0,    16);
		API_polar::template xo <   32>(s,     6656+    0,  6656+   32,               6656+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  6656+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                            6722+    0,     2);
		API_polar::template xo0<    2>(s,     6720+    2,                            6720+    0,     2);
		API_polar::template g  <    4>(s, l, 65520+    0, 65520+    4,  6720+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                            6724+    0,     4);
		API_polar::template xo <    4>(s,     6720+    0,  6720+    4,               6720+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  6720+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                            6728+    0,     8);
		API_polar::template xo <    8>(s,     6720+    0,  6720+    8,               6720+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  6720+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                            6736+    0,    16);
		API_polar::template xo <   16>(s,     6720+    0,  6720+   16,               6720+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  6720+    0, 65408+   64,    32);
		API_polar::template h  <   32>(s, l, 65472+    0,                            6752+    0,    32);
		API_polar::template xo <   32>(s,     6720+    0,  6720+   32,               6720+    0,    32);
		API_polar::template xo <   64>(s,     6656+    0,  6656+   64,               6656+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128,  6656+    0, 65024+  256,   128);
		API_polar::template spc<  128>(s, l, 65280+    0,                            6784+    0,   128);
		API_polar::template xo <  128>(s,     6656+    0,  6656+  128,               6656+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256,  6656+    0, 64512+  512,   256);
		API_polar::template spc<  256>(s, l, 65024+    0,                            6912+    0,   256);
		API_polar::template xo <  256>(s,     6656+    0,  6656+  256,               6656+    0,   256);
		API_polar::template xo <  512>(s,     6144+    0,  6144+  512,               6144+    0,   512);
		API_polar::template g  < 1024>(s, l, 61440+    0, 61440+ 1024,  6144+    0, 61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            7168+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  7168+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            7176+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  7176+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            7180+    0,     4);
		API_polar::template xo <    4>(s,     7176+    0,  7176+    4,               7176+    0,     4);
		API_polar::template xo <    8>(s,     7168+    0,  7168+    8,               7168+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  7168+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                            7186+    0,     2);
		API_polar::template xo0<    2>(s,     7184+    2,                            7184+    0,     2);
		API_polar::template g  <    4>(s, l, 65520+    0, 65520+    4,  7184+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                            7188+    0,     4);
		API_polar::template xo <    4>(s,     7184+    0,  7184+    4,               7184+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  7184+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                            7192+    0,     8);
		API_polar::template xo <    8>(s,     7184+    0,  7184+    8,               7184+    0,     8);
		API_polar::template xo <   16>(s,     7168+    0,  7168+   16,               7168+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  7168+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                            7200+    0,    32);
		API_polar::template xo <   32>(s,     7168+    0,  7168+   32,               7168+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  7168+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                            7232+    0,    64);
		API_polar::template xo <   64>(s,     7168+    0,  7168+   64,               7168+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128,  7168+    0, 65024+  256,   128);
		API_polar::template spc<  128>(s, l, 65280+    0,                            7296+    0,   128);
		API_polar::template xo <  128>(s,     7168+    0,  7168+  128,               7168+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256,  7168+    0, 64512+  512,   256);
		API_polar::template spc<  256>(s, l, 65024+    0,                            7424+    0,   256);
		API_polar::template xo <  256>(s,     7168+    0,  7168+  256,               7168+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512,  7168+    0, 63488+ 1024,   512);
		API_polar::template spc<  512>(s, l, 64512+    0,                            7680+    0,   512);
		API_polar::template xo <  512>(s,     7168+    0,  7168+  512,               7168+    0,   512);
		API_polar::template xo < 1024>(s,     6144+    0,  6144+ 1024,               6144+    0,  1024);
		API_polar::template xo < 2048>(s,     4096+    0,  4096+ 2048,               4096+    0,  2048);
		API_polar::template xo < 4096>(s,        0+    0,     0+ 4096,                  0+    0,  4096);
		API_polar::template g  < 8192>(s, l, 32768+    0, 32768+ 8192,     0+    0, 32768+16384,  8192);
		API_polar::template f  < 4096>(   l, 49152+    0, 49152+ 4096,              49152+ 8192,  4096);
		API_polar::template f  < 2048>(   l, 57344+    0, 57344+ 2048,              57344+ 4096,  2048);
		API_polar::template f  < 1024>(   l, 61440+    0, 61440+ 1024,              61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template rep<  128>(s, l, 65280+    0,                            8192+    0,   128);
		API_polar::template gr <  128>(s, l, 65024+    0, 65024+  128,  8192+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template rep<   64>(s, l, 65408+    0,                            8320+    0,    64);
		API_polar::template gr <   64>(s, l, 65280+    0, 65280+   64,  8320+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            8400+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  8400+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            8408+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  8408+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            8412+    0,     4);
		API_polar::template xo <    4>(s,     8408+    0,  8408+    4,               8408+    0,     4);
		API_polar::template xo <    8>(s,     8400+    0,  8400+    8,               8400+    0,     8);
		API_polar::template xo0<   16>(s,     8384+   16,                            8384+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  8384+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            8416+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  8416+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            8424+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  8424+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            8428+    0,     4);
		API_polar::template xo <    4>(s,     8424+    0,  8424+    4,               8424+    0,     4);
		API_polar::template xo <    8>(s,     8416+    0,  8416+    8,               8416+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  8416+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            8432+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  8432+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            8436+    0,     4);
		API_polar::template xo <    4>(s,     8432+    0,  8432+    4,               8432+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  8432+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            8440+    0,     8);
		API_polar::template xo <    8>(s,     8432+    0,  8432+    8,               8432+    0,     8);
		API_polar::template xo <   16>(s,     8416+    0,  8416+   16,               8416+    0,    16);
		API_polar::template xo <   32>(s,     8384+    0,  8384+   32,               8384+    0,    32);
		API_polar::template xo <   64>(s,     8320+    0,  8320+   64,               8320+    0,    64);
		API_polar::template xo <  128>(s,     8192+    0,  8192+  128,               8192+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256,  8192+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template g0 <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            8496+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  8496+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            8504+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  8504+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            8508+    0,     4);
		API_polar::template xo <    4>(s,     8504+    0,  8504+    4,               8504+    0,     4);
		API_polar::template xo <    8>(s,     8496+    0,  8496+    8,               8496+    0,     8);
		API_polar::template xo0<   16>(s,     8480+   16,                            8480+    0,    16);
		API_polar::template xo0<   32>(s,     8448+   32,                            8448+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  8448+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                            8512+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16,  8512+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            8528+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  8528+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            8536+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  8536+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            8540+    0,     4);
		API_polar::template xo <    4>(s,     8536+    0,  8536+    4,               8536+    0,     4);
		API_polar::template xo <    8>(s,     8528+    0,  8528+    8,               8528+    0,     8);
		API_polar::template xo <   16>(s,     8512+    0,  8512+   16,               8512+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  8512+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            8544+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  8544+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            8552+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  8552+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            8556+    0,     4);
		API_polar::template xo <    4>(s,     8552+    0,  8552+    4,               8552+    0,     4);
		API_polar::template xo <    8>(s,     8544+    0,  8544+    8,               8544+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  8544+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            8560+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  8560+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                            8564+    0,     4);
		API_polar::template xo <    4>(s,     8560+    0,  8560+    4,               8560+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  8560+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                            8568+    0,     8);
		API_polar::template xo <    8>(s,     8560+    0,  8560+    8,               8560+    0,     8);
		API_polar::template xo <   16>(s,     8544+    0,  8544+   16,               8544+    0,    16);
		API_polar::template xo <   32>(s,     8512+    0,  8512+   32,               8512+    0,    32);
		API_polar::template xo <   64>(s,     8448+    0,  8448+   64,               8448+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128,  8448+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                            8576+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16,  8576+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            8592+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  8592+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            8600+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  8600+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                            8604+    0,     4);
		API_polar::template xo <    4>(s,     8600+    0,  8600+    4,               8600+    0,     4);
		API_polar::template xo <    8>(s,     8592+    0,  8592+    8,               8592+    0,     8);
		API_polar::template xo <   16>(s,     8576+    0,  8576+   16,               8576+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  8576+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                            8614+    0,     2);
		API_polar::template xo0<    2>(s,     8612+    2,                            8612+    0,     2);
		API_polar::template xo0<    4>(s,     8608+    4,                            8608+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  8608+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            8616+    0,     8);
		API_polar::template xo <    8>(s,     8608+    0,  8608+    8,               8608+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  8608+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            8624+    0,    16);
		API_polar::template xo <   16>(s,     8608+    0,  8608+   16,               8608+    0,    16);
		API_polar::template xo <   32>(s,     8576+    0,  8576+   32,               8576+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  8576+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            8640+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  8640+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            8644+    0,     4);
		API_polar::template xo <    4>(s,     8640+    0,  8640+    4,               8640+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  8640+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            8648+    0,     8);
		API_polar::template xo <    8>(s,     8640+    0,  8640+    8,               8640+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  8640+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            8656+    0,    16);
		API_polar::template xo <   16>(s,     8640+    0,  8640+   16,               8640+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  8640+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                            8672+    0,    32);
		API_polar::template xo <   32>(s,     8640+    0,  8640+   32,               8640+    0,    32);
		API_polar::template xo <   64>(s,     8576+    0,  8576+   64,               8576+    0,    64);
		API_polar::template xo <  128>(s,     8448+    0,  8448+  128,               8448+    0,   128);
		API_polar::template xo <  256>(s,     8192+    0,  8192+  256,               8192+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512,  8192+    0, 63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                            8704+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32,  8704+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                            8736+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16,  8736+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            8752+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  8752+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            8760+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  8760+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            8764+    0,     4);
		API_polar::template xo <    4>(s,     8760+    0,  8760+    4,               8760+    0,     4);
		API_polar::template xo <    8>(s,     8752+    0,  8752+    8,               8752+    0,     8);
		API_polar::template xo <   16>(s,     8736+    0,  8736+   16,               8736+    0,    16);
		API_polar::template xo <   32>(s,     8704+    0,  8704+   32,               8704+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  8704+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                            8768+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16,  8768+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            8784+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  8784+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            8792+    0,     8);
		API_polar::template xo <    8>(s,     8784+    0,  8784+    8,               8784+    0,     8);
		API_polar::template xo <   16>(s,     8768+    0,  8768+   16,               8768+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  8768+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            8800+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  8800+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            8804+    0,     4);
		API_polar::template xo <    4>(s,     8800+    0,  8800+    4,               8800+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  8800+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            8808+    0,     8);
		API_polar::template xo <    8>(s,     8800+    0,  8800+    8,               8800+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  8800+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            8816+    0,    16);
		API_polar::template xo <   16>(s,     8800+    0,  8800+   16,               8800+    0,    16);
		API_polar::template xo <   32>(s,     8768+    0,  8768+   32,               8768+    0,    32);
		API_polar::template xo <   64>(s,     8704+    0,  8704+   64,               8704+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128,  8704+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            8844+    0,     4);
		API_polar::template xo0<    4>(s,     8840+    4,                            8840+    0,     4);
		API_polar::template xo0<    8>(s,     8832+    8,                            8832+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  8832+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            8848+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  8848+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            8852+    0,     4);
		API_polar::template xo <    4>(s,     8848+    0,  8848+    4,               8848+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  8848+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            8856+    0,     8);
		API_polar::template xo <    8>(s,     8848+    0,  8848+    8,               8848+    0,     8);
		API_polar::template xo <   16>(s,     8832+    0,  8832+   16,               8832+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  8832+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            8864+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  8864+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            8868+    0,     4);
		API_polar::template xo <    4>(s,     8864+    0,  8864+    4,               8864+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  8864+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            8872+    0,     8);
		API_polar::template xo <    8>(s,     8864+    0,  8864+    8,               8864+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  8864+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            8880+    0,    16);
		API_polar::template xo <   16>(s,     8864+    0,  8864+   16,               8864+    0,    16);
		API_polar::template xo <   32>(s,     8832+    0,  8832+   32,               8832+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  8832+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            8896+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  8896+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            8900+    0,     4);
		API_polar::template xo <    4>(s,     8896+    0,  8896+    4,               8896+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  8896+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            8904+    0,     8);
		API_polar::template xo <    8>(s,     8896+    0,  8896+    8,               8896+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  8896+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            8912+    0,    16);
		API_polar::template xo <   16>(s,     8896+    0,  8896+   16,               8896+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  8896+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                            8928+    0,    32);
		API_polar::template xo <   32>(s,     8896+    0,  8896+   32,               8896+    0,    32);
		API_polar::template xo <   64>(s,     8832+    0,  8832+   64,               8832+    0,    64);
		API_polar::template xo <  128>(s,     8704+    0,  8704+  128,               8704+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256,  8704+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            8960+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  8960+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            8968+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  8968+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            8972+    0,     4);
		API_polar::template xo <    4>(s,     8968+    0,  8968+    4,               8968+    0,     4);
		API_polar::template xo <    8>(s,     8960+    0,  8960+    8,               8960+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  8960+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            8976+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  8976+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            8980+    0,     4);
		API_polar::template xo <    4>(s,     8976+    0,  8976+    4,               8976+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  8976+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            8984+    0,     8);
		API_polar::template xo <    8>(s,     8976+    0,  8976+    8,               8976+    0,     8);
		API_polar::template xo <   16>(s,     8960+    0,  8960+   16,               8960+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  8960+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            8992+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  8992+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            8996+    0,     4);
		API_polar::template xo <    4>(s,     8992+    0,  8992+    4,               8992+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  8992+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            9000+    0,     8);
		API_polar::template xo <    8>(s,     8992+    0,  8992+    8,               8992+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  8992+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            9008+    0,    16);
		API_polar::template xo <   16>(s,     8992+    0,  8992+   16,               8992+    0,    16);
		API_polar::template xo <   32>(s,     8960+    0,  8960+   32,               8960+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  8960+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            9024+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  9024+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            9028+    0,     4);
		API_polar::template xo <    4>(s,     9024+    0,  9024+    4,               9024+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  9024+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            9032+    0,     8);
		API_polar::template xo <    8>(s,     9024+    0,  9024+    8,               9024+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  9024+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            9040+    0,    16);
		API_polar::template xo <   16>(s,     9024+    0,  9024+   16,               9024+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  9024+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                            9056+    0,    32);
		API_polar::template xo <   32>(s,     9024+    0,  9024+   32,               9024+    0,    32);
		API_polar::template xo <   64>(s,     8960+    0,  8960+   64,               8960+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128,  8960+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            9088+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  9088+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            9092+    0,     4);
		API_polar::template xo <    4>(s,     9088+    0,  9088+    4,               9088+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  9088+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            9096+    0,     8);
		API_polar::template xo <    8>(s,     9088+    0,  9088+    8,               9088+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  9088+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                            9104+    0,    16);
		API_polar::template xo <   16>(s,     9088+    0,  9088+   16,               9088+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  9088+    0, 65408+   64,    32);
		API_polar::template h  <   32>(s, l, 65472+    0,                            9120+    0,    32);
		API_polar::template xo <   32>(s,     9088+    0,  9088+   32,               9088+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  9088+    0, 65280+  128,    64);
		API_polar::template h  <   64>(s, l, 65408+    0,                            9152+    0,    64);
		API_polar::template xo <   64>(s,     9088+    0,  9088+   64,               9088+    0,    64);
		API_polar::template xo <  128>(s,     8960+    0,  8960+  128,               8960+    0,   128);
		API_polar::template xo <  256>(s,     8704+    0,  8704+  256,               8704+    0,   256);
		API_polar::template xo <  512>(s,     8192+    0,  8192+  512,               8192+    0,   512);
		API_polar::template g  < 1024>(s, l, 61440+    0, 61440+ 1024,  8192+    0, 61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                            9216+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32,  9216+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                            9262+    0,     2);
		API_polar::template xo0<    2>(s,     9260+    2,                            9260+    0,     2);
		API_polar::template xo0<    4>(s,     9256+    4,                            9256+    0,     4);
		API_polar::template xo0<    8>(s,     9248+    8,                            9248+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  9248+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            9264+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  9264+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            9268+    0,     4);
		API_polar::template xo <    4>(s,     9264+    0,  9264+    4,               9264+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  9264+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            9272+    0,     8);
		API_polar::template xo <    8>(s,     9264+    0,  9264+    8,               9264+    0,     8);
		API_polar::template xo <   16>(s,     9248+    0,  9248+   16,               9248+    0,    16);
		API_polar::template xo <   32>(s,     9216+    0,  9216+   32,               9216+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  9216+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            9288+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  9288+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            9292+    0,     4);
		API_polar::template xo <    4>(s,     9288+    0,  9288+    4,               9288+    0,     4);
		API_polar::template xo0<    8>(s,     9280+    8,                            9280+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  9280+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            9296+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  9296+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            9300+    0,     4);
		API_polar::template xo <    4>(s,     9296+    0,  9296+    4,               9296+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  9296+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            9304+    0,     8);
		API_polar::template xo <    8>(s,     9296+    0,  9296+    8,               9296+    0,     8);
		API_polar::template xo <   16>(s,     9280+    0,  9280+   16,               9280+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  9280+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            9312+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  9312+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            9316+    0,     4);
		API_polar::template xo <    4>(s,     9312+    0,  9312+    4,               9312+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  9312+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            9320+    0,     8);
		API_polar::template xo <    8>(s,     9312+    0,  9312+    8,               9312+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  9312+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            9328+    0,    16);
		API_polar::template xo <   16>(s,     9312+    0,  9312+   16,               9312+    0,    16);
		API_polar::template xo <   32>(s,     9280+    0,  9280+   32,               9280+    0,    32);
		API_polar::template xo <   64>(s,     9216+    0,  9216+   64,               9216+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128,  9216+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            9344+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  9344+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            9352+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  9352+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            9356+    0,     4);
		API_polar::template xo <    4>(s,     9352+    0,  9352+    4,               9352+    0,     4);
		API_polar::template xo <    8>(s,     9344+    0,  9344+    8,               9344+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  9344+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            9360+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  9360+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            9364+    0,     4);
		API_polar::template xo <    4>(s,     9360+    0,  9360+    4,               9360+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  9360+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            9368+    0,     8);
		API_polar::template xo <    8>(s,     9360+    0,  9360+    8,               9360+    0,     8);
		API_polar::template xo <   16>(s,     9344+    0,  9344+   16,               9344+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  9344+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            9376+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  9376+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            9380+    0,     4);
		API_polar::template xo <    4>(s,     9376+    0,  9376+    4,               9376+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  9376+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            9384+    0,     8);
		API_polar::template xo <    8>(s,     9376+    0,  9376+    8,               9376+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  9376+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            9392+    0,    16);
		API_polar::template xo <   16>(s,     9376+    0,  9376+   16,               9376+    0,    16);
		API_polar::template xo <   32>(s,     9344+    0,  9344+   32,               9344+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  9344+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            9408+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  9408+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            9412+    0,     4);
		API_polar::template xo <    4>(s,     9408+    0,  9408+    4,               9408+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  9408+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            9416+    0,     8);
		API_polar::template xo <    8>(s,     9408+    0,  9408+    8,               9408+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  9408+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            9424+    0,    16);
		API_polar::template xo <   16>(s,     9408+    0,  9408+   16,               9408+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  9408+    0, 65408+   64,    32);
		API_polar::template h  <   32>(s, l, 65472+    0,                            9440+    0,    32);
		API_polar::template xo <   32>(s,     9408+    0,  9408+   32,               9408+    0,    32);
		API_polar::template xo <   64>(s,     9344+    0,  9344+   64,               9344+    0,    64);
		API_polar::template xo <  128>(s,     9216+    0,  9216+  128,               9216+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256,  9216+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            9472+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  9472+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            9480+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  9480+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            9484+    0,     4);
		API_polar::template xo <    4>(s,     9480+    0,  9480+    4,               9480+    0,     4);
		API_polar::template xo <    8>(s,     9472+    0,  9472+    8,               9472+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  9472+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            9488+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  9488+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            9492+    0,     4);
		API_polar::template xo <    4>(s,     9488+    0,  9488+    4,               9488+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  9488+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            9496+    0,     8);
		API_polar::template xo <    8>(s,     9488+    0,  9488+    8,               9488+    0,     8);
		API_polar::template xo <   16>(s,     9472+    0,  9472+   16,               9472+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  9472+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            9504+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  9504+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            9508+    0,     4);
		API_polar::template xo <    4>(s,     9504+    0,  9504+    4,               9504+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  9504+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                            9512+    0,     8);
		API_polar::template xo <    8>(s,     9504+    0,  9504+    8,               9504+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  9504+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                            9520+    0,    16);
		API_polar::template xo <   16>(s,     9504+    0,  9504+   16,               9504+    0,    16);
		API_polar::template xo <   32>(s,     9472+    0,  9472+   32,               9472+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  9472+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                            9538+    0,     2);
		API_polar::template xo0<    2>(s,     9536+    2,                            9536+    0,     2);
		API_polar::template g  <    4>(s, l, 65520+    0, 65520+    4,  9536+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                            9540+    0,     4);
		API_polar::template xo <    4>(s,     9536+    0,  9536+    4,               9536+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  9536+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                            9544+    0,     8);
		API_polar::template xo <    8>(s,     9536+    0,  9536+    8,               9536+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  9536+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                            9552+    0,    16);
		API_polar::template xo <   16>(s,     9536+    0,  9536+   16,               9536+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  9536+    0, 65408+   64,    32);
		API_polar::template h  <   32>(s, l, 65472+    0,                            9568+    0,    32);
		API_polar::template xo <   32>(s,     9536+    0,  9536+   32,               9536+    0,    32);
		API_polar::template xo <   64>(s,     9472+    0,  9472+   64,               9472+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128,  9472+    0, 65024+  256,   128);
		API_polar::template spc<  128>(s, l, 65280+    0,                            9600+    0,   128);
		API_polar::template xo <  128>(s,     9472+    0,  9472+  128,               9472+    0,   128);
		API_polar::template xo <  256>(s,     9216+    0,  9216+  256,               9216+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512,  9216+    0, 63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            9728+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  9728+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            9736+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  9736+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            9740+    0,     4);
		API_polar::template xo <    4>(s,     9736+    0,  9736+    4,               9736+    0,     4);
		API_polar::template xo <    8>(s,     9728+    0,  9728+    8,               9728+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  9728+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            9744+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  9744+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                            9748+    0,     4);
		API_polar::template xo <    4>(s,     9744+    0,  9744+    4,               9744+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  9744+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                            9752+    0,     8);
		API_polar::template xo <    8>(s,     9744+    0,  9744+    8,               9744+    0,     8);
		API_polar::template xo <   16>(s,     9728+    0,  9728+   16,               9728+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  9728+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                            9760+    0,    32);
		API_polar::template xo <   32>(s,     9728+    0,  9728+   32,               9728+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  9728+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                            9792+    0,    64);
		API_polar::template xo <   64>(s,     9728+    0,  9728+   64,               9728+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128,  9728+    0, 65024+  256,   128);
		API_polar::template spc<  128>(s, l, 65280+    0,                            9856+    0,   128);
		API_polar::template xo <  128>(s,     9728+    0,  9728+  128,               9728+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256,  9728+    0, 64512+  512,   256);
		API_polar::template spc<  256>(s, l, 65024+    0,                            9984+    0,   256);
		API_polar::template xo <  256>(s,     9728+    0,  9728+  256,               9728+    0,   256);
		API_polar::template xo <  512>(s,     9216+    0,  9216+  512,               9216+    0,   512);
		API_polar::template xo < 1024>(s,     8192+    0,  8192+ 1024,               8192+    0,  1024);
		API_polar::template g  < 2048>(s, l, 57344+    0, 57344+ 2048,  8192+    0, 57344+ 4096,  2048);
		API_polar::template f  < 1024>(   l, 61440+    0, 61440+ 1024,              61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           10264+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 10264+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           10268+    0,     4);
		API_polar::template xo <    4>(s,    10264+    0, 10264+    4,              10264+    0,     4);
		API_polar::template xo0<    8>(s,    10256+    8,                           10256+    0,     8);
		API_polar::template xo0<   16>(s,    10240+   16,                           10240+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 10240+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           10272+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 10272+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           10280+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 10280+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           10284+    0,     4);
		API_polar::template xo <    4>(s,    10280+    0, 10280+    4,              10280+    0,     4);
		API_polar::template xo <    8>(s,    10272+    0, 10272+    8,              10272+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 10272+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           10288+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 10288+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           10292+    0,     4);
		API_polar::template xo <    4>(s,    10288+    0, 10288+    4,              10288+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 10288+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           10296+    0,     8);
		API_polar::template xo <    8>(s,    10288+    0, 10288+    8,              10288+    0,     8);
		API_polar::template xo <   16>(s,    10272+    0, 10272+   16,              10272+    0,    16);
		API_polar::template xo <   32>(s,    10240+    0, 10240+   32,              10240+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 10240+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           10304+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 10304+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           10312+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 10312+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           10316+    0,     4);
		API_polar::template xo <    4>(s,    10312+    0, 10312+    4,              10312+    0,     4);
		API_polar::template xo <    8>(s,    10304+    0, 10304+    8,              10304+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 10304+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           10320+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 10320+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           10324+    0,     4);
		API_polar::template xo <    4>(s,    10320+    0, 10320+    4,              10320+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 10320+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           10328+    0,     8);
		API_polar::template xo <    8>(s,    10320+    0, 10320+    8,              10320+    0,     8);
		API_polar::template xo <   16>(s,    10304+    0, 10304+   16,              10304+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 10304+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           10336+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 10336+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           10340+    0,     4);
		API_polar::template xo <    4>(s,    10336+    0, 10336+    4,              10336+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 10336+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           10344+    0,     8);
		API_polar::template xo <    8>(s,    10336+    0, 10336+    8,              10336+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 10336+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                           10352+    0,    16);
		API_polar::template xo <   16>(s,    10336+    0, 10336+   16,              10336+    0,    16);
		API_polar::template xo <   32>(s,    10304+    0, 10304+   32,              10304+    0,    32);
		API_polar::template xo <   64>(s,    10240+    0, 10240+   64,              10240+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 10240+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           10368+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 10368+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           10376+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 10376+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           10380+    0,     4);
		API_polar::template xo <    4>(s,    10376+    0, 10376+    4,              10376+    0,     4);
		API_polar::template xo <    8>(s,    10368+    0, 10368+    8,              10368+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 10368+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           10384+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 10384+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           10388+    0,     4);
		API_polar::template xo <    4>(s,    10384+    0, 10384+    4,              10384+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 10384+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                           10392+    0,     8);
		API_polar::template xo <    8>(s,    10384+    0, 10384+    8,              10384+    0,     8);
		API_polar::template xo <   16>(s,    10368+    0, 10368+   16,              10368+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 10368+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                           10402+    0,     2);
		API_polar::template xo0<    2>(s,    10400+    2,                           10400+    0,     2);
		API_polar::template g  <    4>(s, l, 65520+    0, 65520+    4, 10400+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           10404+    0,     4);
		API_polar::template xo <    4>(s,    10400+    0, 10400+    4,              10400+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 10400+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                           10408+    0,     8);
		API_polar::template xo <    8>(s,    10400+    0, 10400+    8,              10400+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 10400+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                           10416+    0,    16);
		API_polar::template xo <   16>(s,    10400+    0, 10400+   16,              10400+    0,    16);
		API_polar::template xo <   32>(s,    10368+    0, 10368+   32,              10368+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 10368+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           10432+    0,    64);
		API_polar::template xo <   64>(s,    10368+    0, 10368+   64,              10368+    0,    64);
		API_polar::template xo <  128>(s,    10240+    0, 10240+  128,              10240+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 10240+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           10496+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 10496+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                           10506+    0,     2);
		API_polar::template xo0<    2>(s,    10504+    2,                           10504+    0,     2);
		API_polar::template g  <    4>(s, l, 65520+    0, 65520+    4, 10504+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           10508+    0,     4);
		API_polar::template xo <    4>(s,    10504+    0, 10504+    4,              10504+    0,     4);
		API_polar::template xo <    8>(s,    10496+    0, 10496+    8,              10496+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 10496+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           10512+    0,    16);
		API_polar::template xo <   16>(s,    10496+    0, 10496+   16,              10496+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 10496+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           10528+    0,    32);
		API_polar::template xo <   32>(s,    10496+    0, 10496+   32,              10496+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 10496+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           10560+    0,    64);
		API_polar::template xo <   64>(s,    10496+    0, 10496+   64,              10496+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 10496+    0, 65024+  256,   128);
		API_polar::template spc<  128>(s, l, 65280+    0,                           10624+    0,   128);
		API_polar::template xo <  128>(s,    10496+    0, 10496+  128,              10496+    0,   128);
		API_polar::template xo <  256>(s,    10240+    0, 10240+  256,              10240+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512, 10240+    0, 63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           10756+    0,     4);
		API_polar::template xo0<    4>(s,    10752+    4,                           10752+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 10752+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           10760+    0,     8);
		API_polar::template xo <    8>(s,    10752+    0, 10752+    8,              10752+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 10752+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           10768+    0,    16);
		API_polar::template xo <   16>(s,    10752+    0, 10752+   16,              10752+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 10752+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           10784+    0,    32);
		API_polar::template xo <   32>(s,    10752+    0, 10752+   32,              10752+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 10752+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           10816+    0,    64);
		API_polar::template xo <   64>(s,    10752+    0, 10752+   64,              10752+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 10752+    0, 65024+  256,   128);
		API_polar::template spc<  128>(s, l, 65280+    0,                           10880+    0,   128);
		API_polar::template xo <  128>(s,    10752+    0, 10752+  128,              10752+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 10752+    0, 64512+  512,   256);
		API_polar::template spc<  256>(s, l, 65024+    0,                           11008+    0,   256);
		API_polar::template xo <  256>(s,    10752+    0, 10752+  256,              10752+    0,   256);
		API_polar::template xo <  512>(s,    10240+    0, 10240+  512,              10240+    0,   512);
		API_polar::template g  < 1024>(s, l, 61440+    0, 61440+ 1024, 10240+    0, 61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           11264+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 11264+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           11268+    0,     4);
		API_polar::template xo <    4>(s,    11264+    0, 11264+    4,              11264+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 11264+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           11272+    0,     8);
		API_polar::template xo <    8>(s,    11264+    0, 11264+    8,              11264+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 11264+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           11280+    0,    16);
		API_polar::template xo <   16>(s,    11264+    0, 11264+   16,              11264+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 11264+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           11296+    0,    32);
		API_polar::template xo <   32>(s,    11264+    0, 11264+   32,              11264+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 11264+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           11328+    0,    64);
		API_polar::template xo <   64>(s,    11264+    0, 11264+   64,              11264+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 11264+    0, 65024+  256,   128);
		API_polar::template spc<  128>(s, l, 65280+    0,                           11392+    0,   128);
		API_polar::template xo <  128>(s,    11264+    0, 11264+  128,              11264+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 11264+    0, 64512+  512,   256);
		API_polar::template spc<  256>(s, l, 65024+    0,                           11520+    0,   256);
		API_polar::template xo <  256>(s,    11264+    0, 11264+  256,              11264+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512, 11264+    0, 63488+ 1024,   512);
		API_polar::template spc<  512>(s, l, 64512+    0,                           11776+    0,   512);
		API_polar::template xo <  512>(s,    11264+    0, 11264+  512,              11264+    0,   512);
		API_polar::template xo < 1024>(s,    10240+    0, 10240+ 1024,              10240+    0,  1024);
		API_polar::template xo < 2048>(s,     8192+    0,  8192+ 2048,               8192+    0,  2048);
		API_polar::template g  < 4096>(s, l, 49152+    0, 49152+ 4096,  8192+    0, 49152+ 8192,  4096);
		API_polar::template f  < 2048>(   l, 57344+    0, 57344+ 2048,              57344+ 4096,  2048);
		API_polar::template f  < 1024>(   l, 61440+    0, 61440+ 1024,              61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           12288+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 12288+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           12304+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 12304+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           12312+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 12312+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           12316+    0,     4);
		API_polar::template xo <    4>(s,    12312+    0, 12312+    4,              12312+    0,     4);
		API_polar::template xo <    8>(s,    12304+    0, 12304+    8,              12304+    0,     8);
		API_polar::template xo <   16>(s,    12288+    0, 12288+   16,              12288+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 12288+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           12320+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 12320+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           12328+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 12328+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           12332+    0,     4);
		API_polar::template xo <    4>(s,    12328+    0, 12328+    4,              12328+    0,     4);
		API_polar::template xo <    8>(s,    12320+    0, 12320+    8,              12320+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 12320+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           12336+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 12336+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           12340+    0,     4);
		API_polar::template xo <    4>(s,    12336+    0, 12336+    4,              12336+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 12336+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                           12344+    0,     8);
		API_polar::template xo <    8>(s,    12336+    0, 12336+    8,              12336+    0,     8);
		API_polar::template xo <   16>(s,    12320+    0, 12320+   16,              12320+    0,    16);
		API_polar::template xo <   32>(s,    12288+    0, 12288+   32,              12288+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 12288+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           12352+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 12352+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           12360+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 12360+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           12364+    0,     4);
		API_polar::template xo <    4>(s,    12360+    0, 12360+    4,              12360+    0,     4);
		API_polar::template xo <    8>(s,    12352+    0, 12352+    8,              12352+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 12352+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           12368+    0,    16);
		API_polar::template xo <   16>(s,    12352+    0, 12352+   16,              12352+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 12352+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           12384+    0,    32);
		API_polar::template xo <   32>(s,    12352+    0, 12352+   32,              12352+    0,    32);
		API_polar::template xo <   64>(s,    12288+    0, 12288+   64,              12288+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 12288+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           12420+    0,     4);
		API_polar::template xo0<    4>(s,    12416+    4,                           12416+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 12416+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           12424+    0,     8);
		API_polar::template xo <    8>(s,    12416+    0, 12416+    8,              12416+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 12416+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           12432+    0,    16);
		API_polar::template xo <   16>(s,    12416+    0, 12416+   16,              12416+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 12416+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           12448+    0,    32);
		API_polar::template xo <   32>(s,    12416+    0, 12416+   32,              12416+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 12416+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           12480+    0,    64);
		API_polar::template xo <   64>(s,    12416+    0, 12416+   64,              12416+    0,    64);
		API_polar::template xo <  128>(s,    12288+    0, 12288+  128,              12288+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 12288+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           12544+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 12544+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           12548+    0,     4);
		API_polar::template xo <    4>(s,    12544+    0, 12544+    4,              12544+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 12544+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           12552+    0,     8);
		API_polar::template xo <    8>(s,    12544+    0, 12544+    8,              12544+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 12544+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           12560+    0,    16);
		API_polar::template xo <   16>(s,    12544+    0, 12544+   16,              12544+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 12544+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           12576+    0,    32);
		API_polar::template xo <   32>(s,    12544+    0, 12544+   32,              12544+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 12544+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           12608+    0,    64);
		API_polar::template xo <   64>(s,    12544+    0, 12544+   64,              12544+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 12544+    0, 65024+  256,   128);
		API_polar::template spc<  128>(s, l, 65280+    0,                           12672+    0,   128);
		API_polar::template xo <  128>(s,    12544+    0, 12544+  128,              12544+    0,   128);
		API_polar::template xo <  256>(s,    12288+    0, 12288+  256,              12288+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512, 12288+    0, 63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           12800+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 12800+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           12804+    0,     4);
		API_polar::template xo <    4>(s,    12800+    0, 12800+    4,              12800+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 12800+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           12808+    0,     8);
		API_polar::template xo <    8>(s,    12800+    0, 12800+    8,              12800+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 12800+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           12816+    0,    16);
		API_polar::template xo <   16>(s,    12800+    0, 12800+   16,              12800+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 12800+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           12832+    0,    32);
		API_polar::template xo <   32>(s,    12800+    0, 12800+   32,              12800+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 12800+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           12864+    0,    64);
		API_polar::template xo <   64>(s,    12800+    0, 12800+   64,              12800+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 12800+    0, 65024+  256,   128);
		API_polar::template spc<  128>(s, l, 65280+    0,                           12928+    0,   128);
		API_polar::template xo <  128>(s,    12800+    0, 12800+  128,              12800+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 12800+    0, 64512+  512,   256);
		API_polar::template spc<  256>(s, l, 65024+    0,                           13056+    0,   256);
		API_polar::template xo <  256>(s,    12800+    0, 12800+  256,              12800+    0,   256);
		API_polar::template xo <  512>(s,    12288+    0, 12288+  512,              12288+    0,   512);
		API_polar::template g  < 1024>(s, l, 61440+    0, 61440+ 1024, 12288+    0, 61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           13312+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 13312+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           13316+    0,     4);
		API_polar::template xo <    4>(s,    13312+    0, 13312+    4,              13312+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 13312+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           13320+    0,     8);
		API_polar::template xo <    8>(s,    13312+    0, 13312+    8,              13312+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 13312+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           13328+    0,    16);
		API_polar::template xo <   16>(s,    13312+    0, 13312+   16,              13312+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 13312+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           13344+    0,    32);
		API_polar::template xo <   32>(s,    13312+    0, 13312+   32,              13312+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 13312+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           13376+    0,    64);
		API_polar::template xo <   64>(s,    13312+    0, 13312+   64,              13312+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 13312+    0, 65024+  256,   128);
		API_polar::template spc<  128>(s, l, 65280+    0,                           13440+    0,   128);
		API_polar::template xo <  128>(s,    13312+    0, 13312+  128,              13312+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 13312+    0, 64512+  512,   256);
		API_polar::template spc<  256>(s, l, 65024+    0,                           13568+    0,   256);
		API_polar::template xo <  256>(s,    13312+    0, 13312+  256,              13312+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512, 13312+    0, 63488+ 1024,   512);
		API_polar::template spc<  512>(s, l, 64512+    0,                           13824+    0,   512);
		API_polar::template xo <  512>(s,    13312+    0, 13312+  512,              13312+    0,   512);
		API_polar::template xo < 1024>(s,    12288+    0, 12288+ 1024,              12288+    0,  1024);
		API_polar::template g  < 2048>(s, l, 57344+    0, 57344+ 2048, 12288+    0, 57344+ 4096,  2048);
		API_polar::template f  < 1024>(   l, 61440+    0, 61440+ 1024,              61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           14336+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 14336+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           14340+    0,     4);
		API_polar::template xo <    4>(s,    14336+    0, 14336+    4,              14336+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 14336+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           14344+    0,     8);
		API_polar::template xo <    8>(s,    14336+    0, 14336+    8,              14336+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 14336+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           14352+    0,    16);
		API_polar::template xo <   16>(s,    14336+    0, 14336+   16,              14336+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 14336+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           14368+    0,    32);
		API_polar::template xo <   32>(s,    14336+    0, 14336+   32,              14336+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 14336+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           14400+    0,    64);
		API_polar::template xo <   64>(s,    14336+    0, 14336+   64,              14336+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 14336+    0, 65024+  256,   128);
		API_polar::template spc<  128>(s, l, 65280+    0,                           14464+    0,   128);
		API_polar::template xo <  128>(s,    14336+    0, 14336+  128,              14336+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 14336+    0, 64512+  512,   256);
		API_polar::template h  <  256>(s, l, 65024+    0,                           14592+    0,   256);
		API_polar::template xo <  256>(s,    14336+    0, 14336+  256,              14336+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512, 14336+    0, 63488+ 1024,   512);
		API_polar::template h  <  512>(s, l, 64512+    0,                           14848+    0,   512);
		API_polar::template xo <  512>(s,    14336+    0, 14336+  512,              14336+    0,   512);
		API_polar::template g  < 1024>(s, l, 61440+    0, 61440+ 1024, 14336+    0, 61440+ 2048,  1024);
		API_polar::template h  < 1024>(s, l, 63488+    0,                           15360+    0,  1024);
		API_polar::template xo < 1024>(s,    14336+    0, 14336+ 1024,              14336+    0,  1024);
		API_polar::template xo < 2048>(s,    12288+    0, 12288+ 2048,              12288+    0,  2048);
		API_polar::template xo < 4096>(s,     8192+    0,  8192+ 4096,               8192+    0,  4096);
		API_polar::template xo < 8192>(s,        0+    0,     0+ 8192,                  0+    0,  8192);
		API_polar::template g  <16384>(s, l,     0+    0,     0+16384,     0+    0,     0+32768, 16384);
		API_polar::template f  < 8192>(   l, 32768+    0, 32768+ 8192,              32768+16384,  8192);
		API_polar::template f  < 4096>(   l, 49152+    0, 49152+ 4096,              49152+ 8192,  4096);
		API_polar::template f  < 2048>(   l, 57344+    0, 57344+ 2048,              57344+ 4096,  2048);
		API_polar::template f  < 1024>(   l, 61440+    0, 61440+ 1024,              61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template g0 <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template g0 <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           16480+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 16480+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           16496+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 16496+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           16504+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 16504+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           16508+    0,     4);
		API_polar::template xo <    4>(s,    16504+    0, 16504+    4,              16504+    0,     4);
		API_polar::template xo <    8>(s,    16496+    0, 16496+    8,              16496+    0,     8);
		API_polar::template xo <   16>(s,    16480+    0, 16480+   16,              16480+    0,    16);
		API_polar::template xo0<   32>(s,    16448+   32,                           16448+    0,    32);
		API_polar::template xo0<   64>(s,    16384+   64,                           16384+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 16384+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                           16512+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32, 16512+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           16544+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 16544+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           16560+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 16560+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           16568+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 16568+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           16572+    0,     4);
		API_polar::template xo <    4>(s,    16568+    0, 16568+    4,              16568+    0,     4);
		API_polar::template xo <    8>(s,    16560+    0, 16560+    8,              16560+    0,     8);
		API_polar::template xo <   16>(s,    16544+    0, 16544+   16,              16544+    0,    16);
		API_polar::template xo <   32>(s,    16512+    0, 16512+   32,              16512+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 16512+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           16576+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 16576+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                           16598+    0,     2);
		API_polar::template xo0<    2>(s,    16596+    2,                           16596+    0,     2);
		API_polar::template xo0<    4>(s,    16592+    4,                           16592+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 16592+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           16600+    0,     8);
		API_polar::template xo <    8>(s,    16592+    0, 16592+    8,              16592+    0,     8);
		API_polar::template xo <   16>(s,    16576+    0, 16576+   16,              16576+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 16576+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           16608+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 16608+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           16612+    0,     4);
		API_polar::template xo <    4>(s,    16608+    0, 16608+    4,              16608+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 16608+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           16616+    0,     8);
		API_polar::template xo <    8>(s,    16608+    0, 16608+    8,              16608+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 16608+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           16624+    0,    16);
		API_polar::template xo <   16>(s,    16608+    0, 16608+   16,              16608+    0,    16);
		API_polar::template xo <   32>(s,    16576+    0, 16576+   32,              16576+    0,    32);
		API_polar::template xo <   64>(s,    16512+    0, 16512+   64,              16512+    0,    64);
		API_polar::template xo <  128>(s,    16384+    0, 16384+  128,              16384+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 16384+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                           16640+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32, 16640+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           16672+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 16672+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           16692+    0,     4);
		API_polar::template xo0<    4>(s,    16688+    4,                           16688+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 16688+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           16696+    0,     8);
		API_polar::template xo <    8>(s,    16688+    0, 16688+    8,              16688+    0,     8);
		API_polar::template xo <   16>(s,    16672+    0, 16672+   16,              16672+    0,    16);
		API_polar::template xo <   32>(s,    16640+    0, 16640+   32,              16640+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 16640+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           16712+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 16712+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           16716+    0,     4);
		API_polar::template xo <    4>(s,    16712+    0, 16712+    4,              16712+    0,     4);
		API_polar::template xo0<    8>(s,    16704+    8,                           16704+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 16704+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           16720+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 16720+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           16724+    0,     4);
		API_polar::template xo <    4>(s,    16720+    0, 16720+    4,              16720+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 16720+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           16728+    0,     8);
		API_polar::template xo <    8>(s,    16720+    0, 16720+    8,              16720+    0,     8);
		API_polar::template xo <   16>(s,    16704+    0, 16704+   16,              16704+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 16704+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           16736+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 16736+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           16740+    0,     4);
		API_polar::template xo <    4>(s,    16736+    0, 16736+    4,              16736+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 16736+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           16744+    0,     8);
		API_polar::template xo <    8>(s,    16736+    0, 16736+    8,              16736+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 16736+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           16752+    0,    16);
		API_polar::template xo <   16>(s,    16736+    0, 16736+   16,              16736+    0,    16);
		API_polar::template xo <   32>(s,    16704+    0, 16704+   32,              16704+    0,    32);
		API_polar::template xo <   64>(s,    16640+    0, 16640+   64,              16640+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 16640+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           16768+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 16768+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           16776+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 16776+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           16780+    0,     4);
		API_polar::template xo <    4>(s,    16776+    0, 16776+    4,              16776+    0,     4);
		API_polar::template xo <    8>(s,    16768+    0, 16768+    8,              16768+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 16768+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           16784+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 16784+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           16788+    0,     4);
		API_polar::template xo <    4>(s,    16784+    0, 16784+    4,              16784+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 16784+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           16792+    0,     8);
		API_polar::template xo <    8>(s,    16784+    0, 16784+    8,              16784+    0,     8);
		API_polar::template xo <   16>(s,    16768+    0, 16768+   16,              16768+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 16768+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           16800+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 16800+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           16804+    0,     4);
		API_polar::template xo <    4>(s,    16800+    0, 16800+    4,              16800+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 16800+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           16808+    0,     8);
		API_polar::template xo <    8>(s,    16800+    0, 16800+    8,              16800+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 16800+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           16816+    0,    16);
		API_polar::template xo <   16>(s,    16800+    0, 16800+   16,              16800+    0,    16);
		API_polar::template xo <   32>(s,    16768+    0, 16768+   32,              16768+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 16768+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           16832+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 16832+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           16836+    0,     4);
		API_polar::template xo <    4>(s,    16832+    0, 16832+    4,              16832+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 16832+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           16840+    0,     8);
		API_polar::template xo <    8>(s,    16832+    0, 16832+    8,              16832+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 16832+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           16848+    0,    16);
		API_polar::template xo <   16>(s,    16832+    0, 16832+   16,              16832+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 16832+    0, 65408+   64,    32);
		API_polar::template h  <   32>(s, l, 65472+    0,                           16864+    0,    32);
		API_polar::template xo <   32>(s,    16832+    0, 16832+   32,              16832+    0,    32);
		API_polar::template xo <   64>(s,    16768+    0, 16768+   64,              16768+    0,    64);
		API_polar::template xo <  128>(s,    16640+    0, 16640+  128,              16640+    0,   128);
		API_polar::template xo <  256>(s,    16384+    0, 16384+  256,              16384+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512, 16384+    0, 63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           16920+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 16920+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           16924+    0,     4);
		API_polar::template xo <    4>(s,    16920+    0, 16920+    4,              16920+    0,     4);
		API_polar::template xo0<    8>(s,    16912+    8,                           16912+    0,     8);
		API_polar::template xo0<   16>(s,    16896+   16,                           16896+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 16896+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           16928+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 16928+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           16936+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 16936+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           16940+    0,     4);
		API_polar::template xo <    4>(s,    16936+    0, 16936+    4,              16936+    0,     4);
		API_polar::template xo <    8>(s,    16928+    0, 16928+    8,              16928+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 16928+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           16944+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 16944+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           16948+    0,     4);
		API_polar::template xo <    4>(s,    16944+    0, 16944+    4,              16944+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 16944+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           16952+    0,     8);
		API_polar::template xo <    8>(s,    16944+    0, 16944+    8,              16944+    0,     8);
		API_polar::template xo <   16>(s,    16928+    0, 16928+   16,              16928+    0,    16);
		API_polar::template xo <   32>(s,    16896+    0, 16896+   32,              16896+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 16896+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           16960+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 16960+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           16968+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 16968+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           16972+    0,     4);
		API_polar::template xo <    4>(s,    16968+    0, 16968+    4,              16968+    0,     4);
		API_polar::template xo <    8>(s,    16960+    0, 16960+    8,              16960+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 16960+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           16976+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 16976+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           16980+    0,     4);
		API_polar::template xo <    4>(s,    16976+    0, 16976+    4,              16976+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 16976+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           16984+    0,     8);
		API_polar::template xo <    8>(s,    16976+    0, 16976+    8,              16976+    0,     8);
		API_polar::template xo <   16>(s,    16960+    0, 16960+   16,              16960+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 16960+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           16992+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 16992+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           16996+    0,     4);
		API_polar::template xo <    4>(s,    16992+    0, 16992+    4,              16992+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 16992+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           17000+    0,     8);
		API_polar::template xo <    8>(s,    16992+    0, 16992+    8,              16992+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 16992+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           17008+    0,    16);
		API_polar::template xo <   16>(s,    16992+    0, 16992+   16,              16992+    0,    16);
		API_polar::template xo <   32>(s,    16960+    0, 16960+   32,              16960+    0,    32);
		API_polar::template xo <   64>(s,    16896+    0, 16896+   64,              16896+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 16896+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           17024+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 17024+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           17032+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 17032+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           17036+    0,     4);
		API_polar::template xo <    4>(s,    17032+    0, 17032+    4,              17032+    0,     4);
		API_polar::template xo <    8>(s,    17024+    0, 17024+    8,              17024+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 17024+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           17040+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 17040+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           17044+    0,     4);
		API_polar::template xo <    4>(s,    17040+    0, 17040+    4,              17040+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 17040+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           17048+    0,     8);
		API_polar::template xo <    8>(s,    17040+    0, 17040+    8,              17040+    0,     8);
		API_polar::template xo <   16>(s,    17024+    0, 17024+   16,              17024+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 17024+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           17056+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 17056+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           17060+    0,     4);
		API_polar::template xo <    4>(s,    17056+    0, 17056+    4,              17056+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 17056+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                           17064+    0,     8);
		API_polar::template xo <    8>(s,    17056+    0, 17056+    8,              17056+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 17056+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                           17072+    0,    16);
		API_polar::template xo <   16>(s,    17056+    0, 17056+   16,              17056+    0,    16);
		API_polar::template xo <   32>(s,    17024+    0, 17024+   32,              17024+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 17024+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           17088+    0,    64);
		API_polar::template xo <   64>(s,    17024+    0, 17024+   64,              17024+    0,    64);
		API_polar::template xo <  128>(s,    16896+    0, 16896+  128,              16896+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 16896+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           17152+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 17152+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           17160+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 17160+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           17164+    0,     4);
		API_polar::template xo <    4>(s,    17160+    0, 17160+    4,              17160+    0,     4);
		API_polar::template xo <    8>(s,    17152+    0, 17152+    8,              17152+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 17152+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           17168+    0,    16);
		API_polar::template xo <   16>(s,    17152+    0, 17152+   16,              17152+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 17152+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           17184+    0,    32);
		API_polar::template xo <   32>(s,    17152+    0, 17152+   32,              17152+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 17152+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           17216+    0,    64);
		API_polar::template xo <   64>(s,    17152+    0, 17152+   64,              17152+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 17152+    0, 65024+  256,   128);
		API_polar::template spc<  128>(s, l, 65280+    0,                           17280+    0,   128);
		API_polar::template xo <  128>(s,    17152+    0, 17152+  128,              17152+    0,   128);
		API_polar::template xo <  256>(s,    16896+    0, 16896+  256,              16896+    0,   256);
		API_polar::template xo <  512>(s,    16384+    0, 16384+  512,              16384+    0,   512);
		API_polar::template g  < 1024>(s, l, 61440+    0, 61440+ 1024, 16384+    0, 61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           17408+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 17408+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           17424+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 17424+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           17432+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 17432+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           17436+    0,     4);
		API_polar::template xo <    4>(s,    17432+    0, 17432+    4,              17432+    0,     4);
		API_polar::template xo <    8>(s,    17424+    0, 17424+    8,              17424+    0,     8);
		API_polar::template xo <   16>(s,    17408+    0, 17408+   16,              17408+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 17408+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           17440+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 17440+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           17448+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 17448+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           17452+    0,     4);
		API_polar::template xo <    4>(s,    17448+    0, 17448+    4,              17448+    0,     4);
		API_polar::template xo <    8>(s,    17440+    0, 17440+    8,              17440+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 17440+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           17456+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 17456+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           17460+    0,     4);
		API_polar::template xo <    4>(s,    17456+    0, 17456+    4,              17456+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 17456+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           17464+    0,     8);
		API_polar::template xo <    8>(s,    17456+    0, 17456+    8,              17456+    0,     8);
		API_polar::template xo <   16>(s,    17440+    0, 17440+   16,              17440+    0,    16);
		API_polar::template xo <   32>(s,    17408+    0, 17408+   32,              17408+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 17408+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           17472+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 17472+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           17480+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 17480+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           17484+    0,     4);
		API_polar::template xo <    4>(s,    17480+    0, 17480+    4,              17480+    0,     4);
		API_polar::template xo <    8>(s,    17472+    0, 17472+    8,              17472+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 17472+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           17488+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 17488+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           17492+    0,     4);
		API_polar::template xo <    4>(s,    17488+    0, 17488+    4,              17488+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 17488+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                           17496+    0,     8);
		API_polar::template xo <    8>(s,    17488+    0, 17488+    8,              17488+    0,     8);
		API_polar::template xo <   16>(s,    17472+    0, 17472+   16,              17472+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 17472+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           17504+    0,    32);
		API_polar::template xo <   32>(s,    17472+    0, 17472+   32,              17472+    0,    32);
		API_polar::template xo <   64>(s,    17408+    0, 17408+   64,              17408+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 17408+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           17536+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 17536+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           17544+    0,     8);
		API_polar::template xo <    8>(s,    17536+    0, 17536+    8,              17536+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 17536+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           17552+    0,    16);
		API_polar::template xo <   16>(s,    17536+    0, 17536+   16,              17536+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 17536+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           17568+    0,    32);
		API_polar::template xo <   32>(s,    17536+    0, 17536+   32,              17536+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 17536+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           17600+    0,    64);
		API_polar::template xo <   64>(s,    17536+    0, 17536+   64,              17536+    0,    64);
		API_polar::template xo <  128>(s,    17408+    0, 17408+  128,              17408+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 17408+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           17664+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 17664+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           17668+    0,     4);
		API_polar::template xo <    4>(s,    17664+    0, 17664+    4,              17664+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 17664+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           17672+    0,     8);
		API_polar::template xo <    8>(s,    17664+    0, 17664+    8,              17664+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 17664+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           17680+    0,    16);
		API_polar::template xo <   16>(s,    17664+    0, 17664+   16,              17664+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 17664+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           17696+    0,    32);
		API_polar::template xo <   32>(s,    17664+    0, 17664+   32,              17664+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 17664+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           17728+    0,    64);
		API_polar::template xo <   64>(s,    17664+    0, 17664+   64,              17664+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 17664+    0, 65024+  256,   128);
		API_polar::template spc<  128>(s, l, 65280+    0,                           17792+    0,   128);
		API_polar::template xo <  128>(s,    17664+    0, 17664+  128,              17664+    0,   128);
		API_polar::template xo <  256>(s,    17408+    0, 17408+  256,              17408+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512, 17408+    0, 63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           17920+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 17920+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           17924+    0,     4);
		API_polar::template xo <    4>(s,    17920+    0, 17920+    4,              17920+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 17920+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           17928+    0,     8);
		API_polar::template xo <    8>(s,    17920+    0, 17920+    8,              17920+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 17920+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           17936+    0,    16);
		API_polar::template xo <   16>(s,    17920+    0, 17920+   16,              17920+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 17920+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           17952+    0,    32);
		API_polar::template xo <   32>(s,    17920+    0, 17920+   32,              17920+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 17920+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           17984+    0,    64);
		API_polar::template xo <   64>(s,    17920+    0, 17920+   64,              17920+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 17920+    0, 65024+  256,   128);
		API_polar::template spc<  128>(s, l, 65280+    0,                           18048+    0,   128);
		API_polar::template xo <  128>(s,    17920+    0, 17920+  128,              17920+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 17920+    0, 64512+  512,   256);
		API_polar::template spc<  256>(s, l, 65024+    0,                           18176+    0,   256);
		API_polar::template xo <  256>(s,    17920+    0, 17920+  256,              17920+    0,   256);
		API_polar::template xo <  512>(s,    17408+    0, 17408+  512,              17408+    0,   512);
		API_polar::template xo < 1024>(s,    16384+    0, 16384+ 1024,              16384+    0,  1024);
		API_polar::template g  < 2048>(s, l, 57344+    0, 57344+ 2048, 16384+    0, 57344+ 4096,  2048);
		API_polar::template f  < 1024>(   l, 61440+    0, 61440+ 1024,              61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           18432+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 18432+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           18448+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 18448+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           18456+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 18456+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           18460+    0,     4);
		API_polar::template xo <    4>(s,    18456+    0, 18456+    4,              18456+    0,     4);
		API_polar::template xo <    8>(s,    18448+    0, 18448+    8,              18448+    0,     8);
		API_polar::template xo <   16>(s,    18432+    0, 18432+   16,              18432+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 18432+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           18464+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 18464+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                           18474+    0,     2);
		API_polar::template xo0<    2>(s,    18472+    2,                           18472+    0,     2);
		API_polar::template g  <    4>(s, l, 65520+    0, 65520+    4, 18472+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           18476+    0,     4);
		API_polar::template xo <    4>(s,    18472+    0, 18472+    4,              18472+    0,     4);
		API_polar::template xo <    8>(s,    18464+    0, 18464+    8,              18464+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 18464+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           18480+    0,    16);
		API_polar::template xo <   16>(s,    18464+    0, 18464+   16,              18464+    0,    16);
		API_polar::template xo <   32>(s,    18432+    0, 18432+   32,              18432+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 18432+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           18500+    0,     4);
		API_polar::template xo0<    4>(s,    18496+    4,                           18496+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 18496+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           18504+    0,     8);
		API_polar::template xo <    8>(s,    18496+    0, 18496+    8,              18496+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 18496+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           18512+    0,    16);
		API_polar::template xo <   16>(s,    18496+    0, 18496+   16,              18496+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 18496+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           18528+    0,    32);
		API_polar::template xo <   32>(s,    18496+    0, 18496+   32,              18496+    0,    32);
		API_polar::template xo <   64>(s,    18432+    0, 18432+   64,              18432+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 18432+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           18560+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 18560+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           18564+    0,     4);
		API_polar::template xo <    4>(s,    18560+    0, 18560+    4,              18560+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 18560+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           18568+    0,     8);
		API_polar::template xo <    8>(s,    18560+    0, 18560+    8,              18560+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 18560+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           18576+    0,    16);
		API_polar::template xo <   16>(s,    18560+    0, 18560+   16,              18560+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 18560+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           18592+    0,    32);
		API_polar::template xo <   32>(s,    18560+    0, 18560+   32,              18560+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 18560+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           18624+    0,    64);
		API_polar::template xo <   64>(s,    18560+    0, 18560+   64,              18560+    0,    64);
		API_polar::template xo <  128>(s,    18432+    0, 18432+  128,              18432+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 18432+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           18688+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 18688+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           18692+    0,     4);
		API_polar::template xo <    4>(s,    18688+    0, 18688+    4,              18688+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 18688+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           18696+    0,     8);
		API_polar::template xo <    8>(s,    18688+    0, 18688+    8,              18688+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 18688+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           18704+    0,    16);
		API_polar::template xo <   16>(s,    18688+    0, 18688+   16,              18688+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 18688+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           18720+    0,    32);
		API_polar::template xo <   32>(s,    18688+    0, 18688+   32,              18688+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 18688+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           18752+    0,    64);
		API_polar::template xo <   64>(s,    18688+    0, 18688+   64,              18688+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 18688+    0, 65024+  256,   128);
		API_polar::template spc<  128>(s, l, 65280+    0,                           18816+    0,   128);
		API_polar::template xo <  128>(s,    18688+    0, 18688+  128,              18688+    0,   128);
		API_polar::template xo <  256>(s,    18432+    0, 18432+  256,              18432+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512, 18432+    0, 63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           18944+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 18944+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           18948+    0,     4);
		API_polar::template xo <    4>(s,    18944+    0, 18944+    4,              18944+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 18944+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           18952+    0,     8);
		API_polar::template xo <    8>(s,    18944+    0, 18944+    8,              18944+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 18944+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           18960+    0,    16);
		API_polar::template xo <   16>(s,    18944+    0, 18944+   16,              18944+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 18944+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           18976+    0,    32);
		API_polar::template xo <   32>(s,    18944+    0, 18944+   32,              18944+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 18944+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           19008+    0,    64);
		API_polar::template xo <   64>(s,    18944+    0, 18944+   64,              18944+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 18944+    0, 65024+  256,   128);
		API_polar::template spc<  128>(s, l, 65280+    0,                           19072+    0,   128);
		API_polar::template xo <  128>(s,    18944+    0, 18944+  128,              18944+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 18944+    0, 64512+  512,   256);
		API_polar::template spc<  256>(s, l, 65024+    0,                           19200+    0,   256);
		API_polar::template xo <  256>(s,    18944+    0, 18944+  256,              18944+    0,   256);
		API_polar::template xo <  512>(s,    18432+    0, 18432+  512,              18432+    0,   512);
		API_polar::template g  < 1024>(s, l, 61440+    0, 61440+ 1024, 18432+    0, 61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           19456+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 19456+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           19460+    0,     4);
		API_polar::template xo <    4>(s,    19456+    0, 19456+    4,              19456+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 19456+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           19464+    0,     8);
		API_polar::template xo <    8>(s,    19456+    0, 19456+    8,              19456+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 19456+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           19472+    0,    16);
		API_polar::template xo <   16>(s,    19456+    0, 19456+   16,              19456+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 19456+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           19488+    0,    32);
		API_polar::template xo <   32>(s,    19456+    0, 19456+   32,              19456+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 19456+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           19520+    0,    64);
		API_polar::template xo <   64>(s,    19456+    0, 19456+   64,              19456+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 19456+    0, 65024+  256,   128);
		API_polar::template h  <  128>(s, l, 65280+    0,                           19584+    0,   128);
		API_polar::template xo <  128>(s,    19456+    0, 19456+  128,              19456+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 19456+    0, 64512+  512,   256);
		API_polar::template h  <  256>(s, l, 65024+    0,                           19712+    0,   256);
		API_polar::template xo <  256>(s,    19456+    0, 19456+  256,              19456+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512, 19456+    0, 63488+ 1024,   512);
		API_polar::template h  <  512>(s, l, 64512+    0,                           19968+    0,   512);
		API_polar::template xo <  512>(s,    19456+    0, 19456+  512,              19456+    0,   512);
		API_polar::template xo < 1024>(s,    18432+    0, 18432+ 1024,              18432+    0,  1024);
		API_polar::template xo < 2048>(s,    16384+    0, 16384+ 2048,              16384+    0,  2048);
		API_polar::template g  < 4096>(s, l, 49152+    0, 49152+ 4096, 16384+    0, 49152+ 8192,  4096);
		API_polar::template f  < 2048>(   l, 57344+    0, 57344+ 2048,              57344+ 4096,  2048);
		API_polar::template f  < 1024>(   l, 61440+    0, 61440+ 1024,              61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           20480+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 20480+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           20500+    0,     4);
		API_polar::template xo0<    4>(s,    20496+    4,                           20496+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 20496+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           20504+    0,     8);
		API_polar::template xo <    8>(s,    20496+    0, 20496+    8,              20496+    0,     8);
		API_polar::template xo <   16>(s,    20480+    0, 20480+   16,              20480+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 20480+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           20512+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 20512+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           20516+    0,     4);
		API_polar::template xo <    4>(s,    20512+    0, 20512+    4,              20512+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 20512+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           20520+    0,     8);
		API_polar::template xo <    8>(s,    20512+    0, 20512+    8,              20512+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 20512+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           20528+    0,    16);
		API_polar::template xo <   16>(s,    20512+    0, 20512+   16,              20512+    0,    16);
		API_polar::template xo <   32>(s,    20480+    0, 20480+   32,              20480+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 20480+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           20544+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 20544+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           20548+    0,     4);
		API_polar::template xo <    4>(s,    20544+    0, 20544+    4,              20544+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 20544+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           20552+    0,     8);
		API_polar::template xo <    8>(s,    20544+    0, 20544+    8,              20544+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 20544+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           20560+    0,    16);
		API_polar::template xo <   16>(s,    20544+    0, 20544+   16,              20544+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 20544+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           20576+    0,    32);
		API_polar::template xo <   32>(s,    20544+    0, 20544+   32,              20544+    0,    32);
		API_polar::template xo <   64>(s,    20480+    0, 20480+   64,              20480+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 20480+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           20608+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 20608+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           20612+    0,     4);
		API_polar::template xo <    4>(s,    20608+    0, 20608+    4,              20608+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 20608+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           20616+    0,     8);
		API_polar::template xo <    8>(s,    20608+    0, 20608+    8,              20608+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 20608+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           20624+    0,    16);
		API_polar::template xo <   16>(s,    20608+    0, 20608+   16,              20608+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 20608+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           20640+    0,    32);
		API_polar::template xo <   32>(s,    20608+    0, 20608+   32,              20608+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 20608+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           20672+    0,    64);
		API_polar::template xo <   64>(s,    20608+    0, 20608+   64,              20608+    0,    64);
		API_polar::template xo <  128>(s,    20480+    0, 20480+  128,              20480+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 20480+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           20736+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 20736+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           20740+    0,     4);
		API_polar::template xo <    4>(s,    20736+    0, 20736+    4,              20736+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 20736+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           20744+    0,     8);
		API_polar::template xo <    8>(s,    20736+    0, 20736+    8,              20736+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 20736+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           20752+    0,    16);
		API_polar::template xo <   16>(s,    20736+    0, 20736+   16,              20736+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 20736+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           20768+    0,    32);
		API_polar::template xo <   32>(s,    20736+    0, 20736+   32,              20736+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 20736+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           20800+    0,    64);
		API_polar::template xo <   64>(s,    20736+    0, 20736+   64,              20736+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 20736+    0, 65024+  256,   128);
		API_polar::template h  <  128>(s, l, 65280+    0,                           20864+    0,   128);
		API_polar::template xo <  128>(s,    20736+    0, 20736+  128,              20736+    0,   128);
		API_polar::template xo <  256>(s,    20480+    0, 20480+  256,              20480+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512, 20480+    0, 63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           20992+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 20992+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           20996+    0,     4);
		API_polar::template xo <    4>(s,    20992+    0, 20992+    4,              20992+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 20992+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           21000+    0,     8);
		API_polar::template xo <    8>(s,    20992+    0, 20992+    8,              20992+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 20992+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           21008+    0,    16);
		API_polar::template xo <   16>(s,    20992+    0, 20992+   16,              20992+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 20992+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           21024+    0,    32);
		API_polar::template xo <   32>(s,    20992+    0, 20992+   32,              20992+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 20992+    0, 65280+  128,    64);
		API_polar::template h  <   64>(s, l, 65408+    0,                           21056+    0,    64);
		API_polar::template xo <   64>(s,    20992+    0, 20992+   64,              20992+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 20992+    0, 65024+  256,   128);
		API_polar::template h  <  128>(s, l, 65280+    0,                           21120+    0,   128);
		API_polar::template xo <  128>(s,    20992+    0, 20992+  128,              20992+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 20992+    0, 64512+  512,   256);
		API_polar::template h  <  256>(s, l, 65024+    0,                           21248+    0,   256);
		API_polar::template xo <  256>(s,    20992+    0, 20992+  256,              20992+    0,   256);
		API_polar::template xo <  512>(s,    20480+    0, 20480+  512,              20480+    0,   512);
		API_polar::template g  < 1024>(s, l, 61440+    0, 61440+ 1024, 20480+    0, 61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           21504+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 21504+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           21508+    0,     4);
		API_polar::template xo <    4>(s,    21504+    0, 21504+    4,              21504+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 21504+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           21512+    0,     8);
		API_polar::template xo <    8>(s,    21504+    0, 21504+    8,              21504+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 21504+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                           21520+    0,    16);
		API_polar::template xo <   16>(s,    21504+    0, 21504+   16,              21504+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 21504+    0, 65408+   64,    32);
		API_polar::template h  <   32>(s, l, 65472+    0,                           21536+    0,    32);
		API_polar::template xo <   32>(s,    21504+    0, 21504+   32,              21504+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 21504+    0, 65280+  128,    64);
		API_polar::template h  <   64>(s, l, 65408+    0,                           21568+    0,    64);
		API_polar::template xo <   64>(s,    21504+    0, 21504+   64,              21504+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 21504+    0, 65024+  256,   128);
		API_polar::template h  <  128>(s, l, 65280+    0,                           21632+    0,   128);
		API_polar::template xo <  128>(s,    21504+    0, 21504+  128,              21504+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 21504+    0, 64512+  512,   256);
		API_polar::template h  <  256>(s, l, 65024+    0,                           21760+    0,   256);
		API_polar::template xo <  256>(s,    21504+    0, 21504+  256,              21504+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512, 21504+    0, 63488+ 1024,   512);
		API_polar::template h  <  512>(s, l, 64512+    0,                           22016+    0,   512);
		API_polar::template xo <  512>(s,    21504+    0, 21504+  512,              21504+    0,   512);
		API_polar::template xo < 1024>(s,    20480+    0, 20480+ 1024,              20480+    0,  1024);
		API_polar::template g  < 2048>(s, l, 57344+    0, 57344+ 2048, 20480+    0, 57344+ 4096,  2048);
		API_polar::template f  < 1024>(   l, 61440+    0, 61440+ 1024,              61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           22528+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 22528+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           22532+    0,     4);
		API_polar::template xo <    4>(s,    22528+    0, 22528+    4,              22528+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 22528+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                           22536+    0,     8);
		API_polar::template xo <    8>(s,    22528+    0, 22528+    8,              22528+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 22528+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                           22544+    0,    16);
		API_polar::template xo <   16>(s,    22528+    0, 22528+   16,              22528+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 22528+    0, 65408+   64,    32);
		API_polar::template h  <   32>(s, l, 65472+    0,                           22560+    0,    32);
		API_polar::template xo <   32>(s,    22528+    0, 22528+   32,              22528+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 22528+    0, 65280+  128,    64);
		API_polar::template h  <   64>(s, l, 65408+    0,                           22592+    0,    64);
		API_polar::template xo <   64>(s,    22528+    0, 22528+   64,              22528+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 22528+    0, 65024+  256,   128);
		API_polar::template h  <  128>(s, l, 65280+    0,                           22656+    0,   128);
		API_polar::template xo <  128>(s,    22528+    0, 22528+  128,              22528+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 22528+    0, 64512+  512,   256);
		API_polar::template h  <  256>(s, l, 65024+    0,                           22784+    0,   256);
		API_polar::template xo <  256>(s,    22528+    0, 22528+  256,              22528+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512, 22528+    0, 63488+ 1024,   512);
		API_polar::template h  <  512>(s, l, 64512+    0,                           23040+    0,   512);
		API_polar::template xo <  512>(s,    22528+    0, 22528+  512,              22528+    0,   512);
		API_polar::template g  < 1024>(s, l, 61440+    0, 61440+ 1024, 22528+    0, 61440+ 2048,  1024);
		API_polar::template h  < 1024>(s, l, 63488+    0,                           23552+    0,  1024);
		API_polar::template xo < 1024>(s,    22528+    0, 22528+ 1024,              22528+    0,  1024);
		API_polar::template xo < 2048>(s,    20480+    0, 20480+ 2048,              20480+    0,  2048);
		API_polar::template xo < 4096>(s,    16384+    0, 16384+ 4096,              16384+    0,  4096);
		API_polar::template g  < 8192>(s, l, 32768+    0, 32768+ 8192, 16384+    0, 32768+16384,  8192);
		API_polar::template f  < 4096>(   l, 49152+    0, 49152+ 4096,              49152+ 8192,  4096);
		API_polar::template f  < 2048>(   l, 57344+    0, 57344+ 2048,              57344+ 4096,  2048);
		API_polar::template f  < 1024>(   l, 61440+    0, 61440+ 1024,              61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           24576+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 24576+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           24584+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 24584+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           24588+    0,     4);
		API_polar::template xo <    4>(s,    24584+    0, 24584+    4,              24584+    0,     4);
		API_polar::template xo <    8>(s,    24576+    0, 24576+    8,              24576+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 24576+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           24592+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 24592+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           24596+    0,     4);
		API_polar::template xo <    4>(s,    24592+    0, 24592+    4,              24592+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 24592+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           24600+    0,     8);
		API_polar::template xo <    8>(s,    24592+    0, 24592+    8,              24592+    0,     8);
		API_polar::template xo <   16>(s,    24576+    0, 24576+   16,              24576+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 24576+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           24608+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 24608+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           24612+    0,     4);
		API_polar::template xo <    4>(s,    24608+    0, 24608+    4,              24608+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 24608+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           24616+    0,     8);
		API_polar::template xo <    8>(s,    24608+    0, 24608+    8,              24608+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 24608+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           24624+    0,    16);
		API_polar::template xo <   16>(s,    24608+    0, 24608+   16,              24608+    0,    16);
		API_polar::template xo <   32>(s,    24576+    0, 24576+   32,              24576+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 24576+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           24640+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 24640+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           24644+    0,     4);
		API_polar::template xo <    4>(s,    24640+    0, 24640+    4,              24640+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 24640+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           24648+    0,     8);
		API_polar::template xo <    8>(s,    24640+    0, 24640+    8,              24640+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 24640+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           24656+    0,    16);
		API_polar::template xo <   16>(s,    24640+    0, 24640+   16,              24640+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 24640+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           24672+    0,    32);
		API_polar::template xo <   32>(s,    24640+    0, 24640+   32,              24640+    0,    32);
		API_polar::template xo <   64>(s,    24576+    0, 24576+   64,              24576+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 24576+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           24704+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 24704+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           24708+    0,     4);
		API_polar::template xo <    4>(s,    24704+    0, 24704+    4,              24704+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 24704+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           24712+    0,     8);
		API_polar::template xo <    8>(s,    24704+    0, 24704+    8,              24704+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 24704+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           24720+    0,    16);
		API_polar::template xo <   16>(s,    24704+    0, 24704+   16,              24704+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 24704+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           24736+    0,    32);
		API_polar::template xo <   32>(s,    24704+    0, 24704+   32,              24704+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 24704+    0, 65280+  128,    64);
		API_polar::template h  <   64>(s, l, 65408+    0,                           24768+    0,    64);
		API_polar::template xo <   64>(s,    24704+    0, 24704+   64,              24704+    0,    64);
		API_polar::template xo <  128>(s,    24576+    0, 24576+  128,              24576+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 24576+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           24832+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 24832+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           24836+    0,     4);
		API_polar::template xo <    4>(s,    24832+    0, 24832+    4,              24832+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 24832+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           24840+    0,     8);
		API_polar::template xo <    8>(s,    24832+    0, 24832+    8,              24832+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 24832+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                           24848+    0,    16);
		API_polar::template xo <   16>(s,    24832+    0, 24832+   16,              24832+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 24832+    0, 65408+   64,    32);
		API_polar::template h  <   32>(s, l, 65472+    0,                           24864+    0,    32);
		API_polar::template xo <   32>(s,    24832+    0, 24832+   32,              24832+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 24832+    0, 65280+  128,    64);
		API_polar::template h  <   64>(s, l, 65408+    0,                           24896+    0,    64);
		API_polar::template xo <   64>(s,    24832+    0, 24832+   64,              24832+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 24832+    0, 65024+  256,   128);
		API_polar::template h  <  128>(s, l, 65280+    0,                           24960+    0,   128);
		API_polar::template xo <  128>(s,    24832+    0, 24832+  128,              24832+    0,   128);
		API_polar::template xo <  256>(s,    24576+    0, 24576+  256,              24576+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512, 24576+    0, 63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           25088+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 25088+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           25092+    0,     4);
		API_polar::template xo <    4>(s,    25088+    0, 25088+    4,              25088+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 25088+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                           25096+    0,     8);
		API_polar::template xo <    8>(s,    25088+    0, 25088+    8,              25088+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 25088+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                           25104+    0,    16);
		API_polar::template xo <   16>(s,    25088+    0, 25088+   16,              25088+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 25088+    0, 65408+   64,    32);
		API_polar::template h  <   32>(s, l, 65472+    0,                           25120+    0,    32);
		API_polar::template xo <   32>(s,    25088+    0, 25088+   32,              25088+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 25088+    0, 65280+  128,    64);
		API_polar::template h  <   64>(s, l, 65408+    0,                           25152+    0,    64);
		API_polar::template xo <   64>(s,    25088+    0, 25088+   64,              25088+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 25088+    0, 65024+  256,   128);
		API_polar::template h  <  128>(s, l, 65280+    0,                           25216+    0,   128);
		API_polar::template xo <  128>(s,    25088+    0, 25088+  128,              25088+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 25088+    0, 64512+  512,   256);
		API_polar::template h  <  256>(s, l, 65024+    0,                           25344+    0,   256);
		API_polar::template xo <  256>(s,    25088+    0, 25088+  256,              25088+    0,   256);
		API_polar::template xo <  512>(s,    24576+    0, 24576+  512,              24576+    0,   512);
		API_polar::template g  < 1024>(s, l, 61440+    0, 61440+ 1024, 24576+    0, 61440+ 2048,  1024);
		API_polar::template spc< 1024>(s, l, 63488+    0,                           25600+    0,  1024);
		API_polar::template xo < 1024>(s,    24576+    0, 24576+ 1024,              24576+    0,  1024);
		API_polar::template g  < 2048>(s, l, 57344+    0, 57344+ 2048, 24576+    0, 57344+ 4096,  2048);
		API_polar::template spc< 2048>(s, l, 61440+    0,                           26624+    0,  2048);
		API_polar::template xo < 2048>(s,    24576+    0, 24576+ 2048,              24576+    0,  2048);
		API_polar::template g  < 4096>(s, l, 49152+    0, 49152+ 4096, 24576+    0, 49152+ 8192,  4096);
		API_polar::template spc< 4096>(s, l, 57344+    0,                           28672+    0,  4096);
		API_polar::template xo < 4096>(s,    24576+    0, 24576+ 4096,              24576+    0,  4096);
		API_polar::template xo < 8192>(s,    16384+    0, 16384+ 8192,              16384+    0,  8192);
		API_polar::template xo <16384>(s,        0+    0,     0+16384,                  0+    0, 16384);
	}
};
}
}
#endif
