#ifndef DECODER_POLAR_SC_FAST_SYS_N32768_K9830_SNR25_HPP_
#define DECODER_POLAR_SC_FAST_SYS_N32768_K9830_SNR25_HPP_

#include <cassert>

#include "../Decoder_polar_SC_fast_sys.hpp"

namespace aff3ct
{
namespace module
{
static const char Frozen_bits_32768_9830_25[32768] = {
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};

template <typename B, typename R, class API_polar>
class Decoder_polar_SC_fast_sys_N32768_K9830_SNR25 : public Decoder_polar_SC_fast_sys<B, R, API_polar>
{
public:
	Decoder_polar_SC_fast_sys_N32768_K9830_SNR25(const int& K, const int& N, const mipp::vector<B>& frozen_bits, const int n_frames = 1)
	: Decoder_polar_SC_fast_sys<B, R, API_polar>(K, N, frozen_bits, n_frames)
	{
		assert(N == 32768);
		assert(K == 9830);
		
		auto i = 0;
		while (i < 32768 && Frozen_bits_32768_9830_25[i] == frozen_bits[i]) i++;
		assert(i == 32768);
	}

	virtual ~Decoder_polar_SC_fast_sys_N32768_K9830_SNR25()
	{
	}

	void decode()
	{
		auto &l = this->l;
		auto &s = this->s;

		API_polar::template f  <16384>(   l,     0+    0,     0+16384,                  0+32768, 16384);
		API_polar::template f  < 8192>(   l, 32768+    0, 32768+ 8192,              32768+16384,  8192);
		API_polar::template g0 < 4096>(   l, 49152+    0, 49152+ 4096,              49152+ 8192,  4096);
		API_polar::template f  < 2048>(   l, 57344+    0, 57344+ 2048,              57344+ 4096,  2048);
		API_polar::template rep< 2048>(s, l, 61440+    0,                            4096+    0,  2048);
		API_polar::template gr < 2048>(s, l, 57344+    0, 57344+ 2048,  4096+    0, 57344+ 4096,  2048);
		API_polar::template f  < 1024>(   l, 61440+    0, 61440+ 1024,              61440+ 2048,  1024);
		API_polar::template g0 <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template g0 <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template g0 <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template g0 <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template g0 <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            7152+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  7152+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            7160+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  7160+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            7164+    0,     4);
		API_polar::template xo <    4>(s,     7160+    0,  7160+    4,               7160+    0,     4);
		API_polar::template xo <    8>(s,     7152+    0,  7152+    8,               7152+    0,     8);
		API_polar::template xo0<   16>(s,     7136+   16,                            7136+    0,    16);
		API_polar::template xo0<   32>(s,     7104+   32,                            7104+    0,    32);
		API_polar::template xo0<   64>(s,     7040+   64,                            7040+    0,    64);
		API_polar::template xo0<  128>(s,     6912+  128,                            6912+    0,   128);
		API_polar::template xo0<  256>(s,     6656+  256,                            6656+    0,   256);
		API_polar::template xo0<  512>(s,     6144+  512,                            6144+    0,   512);
		API_polar::template g  < 1024>(s, l, 61440+    0, 61440+ 1024,  6144+    0, 61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template g0 <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template g0 <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template g0 <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                            7616+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32,  7616+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                            7648+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16,  7648+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            7664+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  7664+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            7672+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  7672+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            7676+    0,     4);
		API_polar::template xo <    4>(s,     7672+    0,  7672+    4,               7672+    0,     4);
		API_polar::template xo <    8>(s,     7664+    0,  7664+    8,               7664+    0,     8);
		API_polar::template xo <   16>(s,     7648+    0,  7648+   16,               7648+    0,    16);
		API_polar::template xo <   32>(s,     7616+    0,  7616+   32,               7616+    0,    32);
		API_polar::template xo0<   64>(s,     7552+   64,                            7552+    0,    64);
		API_polar::template xo0<  128>(s,     7424+  128,                            7424+    0,   128);
		API_polar::template xo0<  256>(s,     7168+  256,                            7168+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512,  7168+    0, 63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template rep<  128>(s, l, 65280+    0,                            7680+    0,   128);
		API_polar::template gr <  128>(s, l, 65024+    0, 65024+  128,  7680+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template rep<   64>(s, l, 65408+    0,                            7808+    0,    64);
		API_polar::template gr <   64>(s, l, 65280+    0, 65280+   64,  7808+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                            7872+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32,  7872+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                            7904+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16,  7904+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            7920+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  7920+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            7924+    0,     4);
		API_polar::template xo <    4>(s,     7920+    0,  7920+    4,               7920+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  7920+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            7928+    0,     8);
		API_polar::template xo <    8>(s,     7920+    0,  7920+    8,               7920+    0,     8);
		API_polar::template xo <   16>(s,     7904+    0,  7904+   16,               7904+    0,    16);
		API_polar::template xo <   32>(s,     7872+    0,  7872+   32,               7872+    0,    32);
		API_polar::template xo <   64>(s,     7808+    0,  7808+   64,               7808+    0,    64);
		API_polar::template xo <  128>(s,     7680+    0,  7680+  128,               7680+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256,  7680+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template rep<   64>(s, l, 65408+    0,                            7936+    0,    64);
		API_polar::template gr <   64>(s, l, 65280+    0, 65280+   64,  7936+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            8024+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  8024+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            8028+    0,     4);
		API_polar::template xo <    4>(s,     8024+    0,  8024+    4,               8024+    0,     4);
		API_polar::template xo0<    8>(s,     8016+    8,                            8016+    0,     8);
		API_polar::template xo0<   16>(s,     8000+   16,                            8000+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  8000+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            8032+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  8032+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            8040+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  8040+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            8044+    0,     4);
		API_polar::template xo <    4>(s,     8040+    0,  8040+    4,               8040+    0,     4);
		API_polar::template xo <    8>(s,     8032+    0,  8032+    8,               8032+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  8032+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            8048+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  8048+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            8052+    0,     4);
		API_polar::template xo <    4>(s,     8048+    0,  8048+    4,               8048+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  8048+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            8056+    0,     8);
		API_polar::template xo <    8>(s,     8048+    0,  8048+    8,               8048+    0,     8);
		API_polar::template xo <   16>(s,     8032+    0,  8032+   16,               8032+    0,    16);
		API_polar::template xo <   32>(s,     8000+    0,  8000+   32,               8000+    0,    32);
		API_polar::template xo <   64>(s,     7936+    0,  7936+   64,               7936+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128,  7936+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                            8064+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16,  8064+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            8080+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  8080+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            8088+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  8088+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            8092+    0,     4);
		API_polar::template xo <    4>(s,     8088+    0,  8088+    4,               8088+    0,     4);
		API_polar::template xo <    8>(s,     8080+    0,  8080+    8,               8080+    0,     8);
		API_polar::template xo <   16>(s,     8064+    0,  8064+   16,               8064+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  8064+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            8096+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  8096+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            8104+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  8104+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            8108+    0,     4);
		API_polar::template xo <    4>(s,     8104+    0,  8104+    4,               8104+    0,     4);
		API_polar::template xo <    8>(s,     8096+    0,  8096+    8,               8096+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  8096+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            8112+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  8112+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            8116+    0,     4);
		API_polar::template xo <    4>(s,     8112+    0,  8112+    4,               8112+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  8112+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            8120+    0,     8);
		API_polar::template xo <    8>(s,     8112+    0,  8112+    8,               8112+    0,     8);
		API_polar::template xo <   16>(s,     8096+    0,  8096+   16,               8096+    0,    16);
		API_polar::template xo <   32>(s,     8064+    0,  8064+   32,               8064+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  8064+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            8128+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  8128+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            8136+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  8136+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            8140+    0,     4);
		API_polar::template xo <    4>(s,     8136+    0,  8136+    4,               8136+    0,     4);
		API_polar::template xo <    8>(s,     8128+    0,  8128+    8,               8128+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  8128+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            8144+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  8144+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            8148+    0,     4);
		API_polar::template xo <    4>(s,     8144+    0,  8144+    4,               8144+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  8144+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            8152+    0,     8);
		API_polar::template xo <    8>(s,     8144+    0,  8144+    8,               8144+    0,     8);
		API_polar::template xo <   16>(s,     8128+    0,  8128+   16,               8128+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  8128+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            8160+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  8160+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            8164+    0,     4);
		API_polar::template xo <    4>(s,     8160+    0,  8160+    4,               8160+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  8160+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            8168+    0,     8);
		API_polar::template xo <    8>(s,     8160+    0,  8160+    8,               8160+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  8160+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            8176+    0,    16);
		API_polar::template xo <   16>(s,     8160+    0,  8160+   16,               8160+    0,    16);
		API_polar::template xo <   32>(s,     8128+    0,  8128+   32,               8128+    0,    32);
		API_polar::template xo <   64>(s,     8064+    0,  8064+   64,               8064+    0,    64);
		API_polar::template xo <  128>(s,     7936+    0,  7936+  128,               7936+    0,   128);
		API_polar::template xo <  256>(s,     7680+    0,  7680+  256,               7680+    0,   256);
		API_polar::template xo <  512>(s,     7168+    0,  7168+  512,               7168+    0,   512);
		API_polar::template xo < 1024>(s,     6144+    0,  6144+ 1024,               6144+    0,  1024);
		API_polar::template xo < 2048>(s,     4096+    0,  4096+ 2048,               4096+    0,  2048);
		API_polar::template xo0< 4096>(s,        0+ 4096,                               0+    0,  4096);
		API_polar::template g  < 8192>(s, l, 32768+    0, 32768+ 8192,     0+    0, 32768+16384,  8192);
		API_polar::template f  < 4096>(   l, 49152+    0, 49152+ 4096,              49152+ 8192,  4096);
		API_polar::template f  < 2048>(   l, 57344+    0, 57344+ 2048,              57344+ 4096,  2048);
		API_polar::template g0 < 1024>(   l, 61440+    0, 61440+ 1024,              61440+ 2048,  1024);
		API_polar::template g0 <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template g0 <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template g0 <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template g0 <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template g0 <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           10208+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 10208+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           10224+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 10224+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           10232+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 10232+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           10236+    0,     4);
		API_polar::template xo <    4>(s,    10232+    0, 10232+    4,              10232+    0,     4);
		API_polar::template xo <    8>(s,    10224+    0, 10224+    8,              10224+    0,     8);
		API_polar::template xo <   16>(s,    10208+    0, 10208+   16,              10208+    0,    16);
		API_polar::template xo0<   32>(s,    10176+   32,                           10176+    0,    32);
		API_polar::template xo0<   64>(s,    10112+   64,                           10112+    0,    64);
		API_polar::template xo0<  128>(s,     9984+  128,                            9984+    0,   128);
		API_polar::template xo0<  256>(s,     9728+  256,                            9728+    0,   256);
		API_polar::template xo0<  512>(s,     9216+  512,                            9216+    0,   512);
		API_polar::template xo0< 1024>(s,     8192+ 1024,                            8192+    0,  1024);
		API_polar::template g  < 2048>(s, l, 57344+    0, 57344+ 2048,  8192+    0, 57344+ 4096,  2048);
		API_polar::template f  < 1024>(   l, 61440+    0, 61440+ 1024,              61440+ 2048,  1024);
		API_polar::template g0 <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template g0 <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template g0 <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template rep<   64>(s, l, 65408+    0,                           11136+    0,    64);
		API_polar::template gr <   64>(s, l, 65280+    0, 65280+   64, 11136+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                           11200+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32, 11200+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           11232+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 11232+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           11248+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 11248+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                           11258+    0,     2);
		API_polar::template xo0<    2>(s,    11256+    2,                           11256+    0,     2);
		API_polar::template g  <    4>(s, l, 65520+    0, 65520+    4, 11256+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           11260+    0,     4);
		API_polar::template xo <    4>(s,    11256+    0, 11256+    4,              11256+    0,     4);
		API_polar::template xo <    8>(s,    11248+    0, 11248+    8,              11248+    0,     8);
		API_polar::template xo <   16>(s,    11232+    0, 11232+   16,              11232+    0,    16);
		API_polar::template xo <   32>(s,    11200+    0, 11200+   32,              11200+    0,    32);
		API_polar::template xo <   64>(s,    11136+    0, 11136+   64,              11136+    0,    64);
		API_polar::template xo0<  128>(s,    11008+  128,                           11008+    0,   128);
		API_polar::template xo0<  256>(s,    10752+  256,                           10752+    0,   256);
		API_polar::template xo0<  512>(s,    10240+  512,                           10240+    0,   512);
		API_polar::template g  < 1024>(s, l, 61440+    0, 61440+ 1024, 10240+    0, 61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template rep<  256>(s, l, 65024+    0,                           11264+    0,   256);
		API_polar::template gr <  256>(s, l, 64512+    0, 64512+  256, 11264+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template rep<  128>(s, l, 65280+    0,                           11520+    0,   128);
		API_polar::template gr <  128>(s, l, 65024+    0, 65024+  128, 11520+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template rep<   64>(s, l, 65408+    0,                           11648+    0,    64);
		API_polar::template gr <   64>(s, l, 65280+    0, 65280+   64, 11648+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           11728+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 11728+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           11736+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 11736+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           11740+    0,     4);
		API_polar::template xo <    4>(s,    11736+    0, 11736+    4,              11736+    0,     4);
		API_polar::template xo <    8>(s,    11728+    0, 11728+    8,              11728+    0,     8);
		API_polar::template xo0<   16>(s,    11712+   16,                           11712+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 11712+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           11744+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 11744+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           11752+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 11752+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           11756+    0,     4);
		API_polar::template xo <    4>(s,    11752+    0, 11752+    4,              11752+    0,     4);
		API_polar::template xo <    8>(s,    11744+    0, 11744+    8,              11744+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 11744+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           11760+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 11760+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           11764+    0,     4);
		API_polar::template xo <    4>(s,    11760+    0, 11760+    4,              11760+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 11760+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           11768+    0,     8);
		API_polar::template xo <    8>(s,    11760+    0, 11760+    8,              11760+    0,     8);
		API_polar::template xo <   16>(s,    11744+    0, 11744+   16,              11744+    0,    16);
		API_polar::template xo <   32>(s,    11712+    0, 11712+   32,              11712+    0,    32);
		API_polar::template xo <   64>(s,    11648+    0, 11648+   64,              11648+    0,    64);
		API_polar::template xo <  128>(s,    11520+    0, 11520+  128,              11520+    0,   128);
		API_polar::template xo <  256>(s,    11264+    0, 11264+  256,              11264+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512, 11264+    0, 63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template g0 <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template g0 <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           11896+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 11896+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           11900+    0,     4);
		API_polar::template xo <    4>(s,    11896+    0, 11896+    4,              11896+    0,     4);
		API_polar::template xo0<    8>(s,    11888+    8,                           11888+    0,     8);
		API_polar::template xo0<   16>(s,    11872+   16,                           11872+    0,    16);
		API_polar::template xo0<   32>(s,    11840+   32,                           11840+    0,    32);
		API_polar::template xo0<   64>(s,    11776+   64,                           11776+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 11776+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template g0 <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           11936+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 11936+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           11952+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 11952+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           11960+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 11960+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           11964+    0,     4);
		API_polar::template xo <    4>(s,    11960+    0, 11960+    4,              11960+    0,     4);
		API_polar::template xo <    8>(s,    11952+    0, 11952+    8,              11952+    0,     8);
		API_polar::template xo <   16>(s,    11936+    0, 11936+   16,              11936+    0,    16);
		API_polar::template xo0<   32>(s,    11904+   32,                           11904+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 11904+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           11968+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 11968+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           11984+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 11984+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           11992+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 11992+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           11996+    0,     4);
		API_polar::template xo <    4>(s,    11992+    0, 11992+    4,              11992+    0,     4);
		API_polar::template xo <    8>(s,    11984+    0, 11984+    8,              11984+    0,     8);
		API_polar::template xo <   16>(s,    11968+    0, 11968+   16,              11968+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 11968+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           12000+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 12000+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           12008+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 12008+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           12012+    0,     4);
		API_polar::template xo <    4>(s,    12008+    0, 12008+    4,              12008+    0,     4);
		API_polar::template xo <    8>(s,    12000+    0, 12000+    8,              12000+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 12000+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           12016+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 12016+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           12020+    0,     4);
		API_polar::template xo <    4>(s,    12016+    0, 12016+    4,              12016+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 12016+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           12024+    0,     8);
		API_polar::template xo <    8>(s,    12016+    0, 12016+    8,              12016+    0,     8);
		API_polar::template xo <   16>(s,    12000+    0, 12000+   16,              12000+    0,    16);
		API_polar::template xo <   32>(s,    11968+    0, 11968+   32,              11968+    0,    32);
		API_polar::template xo <   64>(s,    11904+    0, 11904+   64,              11904+    0,    64);
		API_polar::template xo <  128>(s,    11776+    0, 11776+  128,              11776+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 11776+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                           12032+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32, 12032+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           12064+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 12064+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           12080+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 12080+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           12088+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 12088+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           12092+    0,     4);
		API_polar::template xo <    4>(s,    12088+    0, 12088+    4,              12088+    0,     4);
		API_polar::template xo <    8>(s,    12080+    0, 12080+    8,              12080+    0,     8);
		API_polar::template xo <   16>(s,    12064+    0, 12064+   16,              12064+    0,    16);
		API_polar::template xo <   32>(s,    12032+    0, 12032+   32,              12032+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 12032+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           12096+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 12096+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           12112+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 12112+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           12120+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 12120+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           12124+    0,     4);
		API_polar::template xo <    4>(s,    12120+    0, 12120+    4,              12120+    0,     4);
		API_polar::template xo <    8>(s,    12112+    0, 12112+    8,              12112+    0,     8);
		API_polar::template xo <   16>(s,    12096+    0, 12096+   16,              12096+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 12096+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                           12134+    0,     2);
		API_polar::template xo0<    2>(s,    12132+    2,                           12132+    0,     2);
		API_polar::template xo0<    4>(s,    12128+    4,                           12128+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 12128+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           12136+    0,     8);
		API_polar::template xo <    8>(s,    12128+    0, 12128+    8,              12128+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 12128+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           12144+    0,    16);
		API_polar::template xo <   16>(s,    12128+    0, 12128+   16,              12128+    0,    16);
		API_polar::template xo <   32>(s,    12096+    0, 12096+   32,              12096+    0,    32);
		API_polar::template xo <   64>(s,    12032+    0, 12032+   64,              12032+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 12032+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                           12174+    0,     2);
		API_polar::template xo0<    2>(s,    12172+    2,                           12172+    0,     2);
		API_polar::template xo0<    4>(s,    12168+    4,                           12168+    0,     4);
		API_polar::template xo0<    8>(s,    12160+    8,                           12160+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 12160+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           12176+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 12176+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           12180+    0,     4);
		API_polar::template xo <    4>(s,    12176+    0, 12176+    4,              12176+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 12176+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           12184+    0,     8);
		API_polar::template xo <    8>(s,    12176+    0, 12176+    8,              12176+    0,     8);
		API_polar::template xo <   16>(s,    12160+    0, 12160+   16,              12160+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 12160+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           12192+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 12192+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           12196+    0,     4);
		API_polar::template xo <    4>(s,    12192+    0, 12192+    4,              12192+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 12192+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           12200+    0,     8);
		API_polar::template xo <    8>(s,    12192+    0, 12192+    8,              12192+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 12192+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           12208+    0,    16);
		API_polar::template xo <   16>(s,    12192+    0, 12192+   16,              12192+    0,    16);
		API_polar::template xo <   32>(s,    12160+    0, 12160+   32,              12160+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 12160+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           12224+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 12224+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           12228+    0,     4);
		API_polar::template xo <    4>(s,    12224+    0, 12224+    4,              12224+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 12224+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           12232+    0,     8);
		API_polar::template xo <    8>(s,    12224+    0, 12224+    8,              12224+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 12224+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           12240+    0,    16);
		API_polar::template xo <   16>(s,    12224+    0, 12224+   16,              12224+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 12224+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           12256+    0,    32);
		API_polar::template xo <   32>(s,    12224+    0, 12224+   32,              12224+    0,    32);
		API_polar::template xo <   64>(s,    12160+    0, 12160+   64,              12160+    0,    64);
		API_polar::template xo <  128>(s,    12032+    0, 12032+  128,              12032+    0,   128);
		API_polar::template xo <  256>(s,    11776+    0, 11776+  256,              11776+    0,   256);
		API_polar::template xo <  512>(s,    11264+    0, 11264+  512,              11264+    0,   512);
		API_polar::template xo < 1024>(s,    10240+    0, 10240+ 1024,              10240+    0,  1024);
		API_polar::template xo < 2048>(s,     8192+    0,  8192+ 2048,               8192+    0,  2048);
		API_polar::template g  < 4096>(s, l, 49152+    0, 49152+ 4096,  8192+    0, 49152+ 8192,  4096);
		API_polar::template f  < 2048>(   l, 57344+    0, 57344+ 2048,              57344+ 4096,  2048);
		API_polar::template f  < 1024>(   l, 61440+    0, 61440+ 1024,              61440+ 2048,  1024);
		API_polar::template g0 <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template rep<  256>(s, l, 65024+    0,                           12800+    0,   256);
		API_polar::template gr <  256>(s, l, 64512+    0, 64512+  256, 12800+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template rep<  128>(s, l, 65280+    0,                           13056+    0,   128);
		API_polar::template gr <  128>(s, l, 65024+    0, 65024+  128, 13056+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template g0 <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           13232+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 13232+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           13240+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 13240+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           13244+    0,     4);
		API_polar::template xo <    4>(s,    13240+    0, 13240+    4,              13240+    0,     4);
		API_polar::template xo <    8>(s,    13232+    0, 13232+    8,              13232+    0,     8);
		API_polar::template xo0<   16>(s,    13216+   16,                           13216+    0,    16);
		API_polar::template xo0<   32>(s,    13184+   32,                           13184+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 13184+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           13248+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 13248+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           13264+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 13264+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           13272+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 13272+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           13276+    0,     4);
		API_polar::template xo <    4>(s,    13272+    0, 13272+    4,              13272+    0,     4);
		API_polar::template xo <    8>(s,    13264+    0, 13264+    8,              13264+    0,     8);
		API_polar::template xo <   16>(s,    13248+    0, 13248+   16,              13248+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 13248+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           13280+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 13280+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           13288+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 13288+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           13292+    0,     4);
		API_polar::template xo <    4>(s,    13288+    0, 13288+    4,              13288+    0,     4);
		API_polar::template xo <    8>(s,    13280+    0, 13280+    8,              13280+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 13280+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           13296+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 13296+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           13300+    0,     4);
		API_polar::template xo <    4>(s,    13296+    0, 13296+    4,              13296+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 13296+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           13304+    0,     8);
		API_polar::template xo <    8>(s,    13296+    0, 13296+    8,              13296+    0,     8);
		API_polar::template xo <   16>(s,    13280+    0, 13280+   16,              13280+    0,    16);
		API_polar::template xo <   32>(s,    13248+    0, 13248+   32,              13248+    0,    32);
		API_polar::template xo <   64>(s,    13184+    0, 13184+   64,              13184+    0,    64);
		API_polar::template xo <  128>(s,    13056+    0, 13056+  128,              13056+    0,   128);
		API_polar::template xo <  256>(s,    12800+    0, 12800+  256,              12800+    0,   256);
		API_polar::template xo0<  512>(s,    12288+  512,                           12288+    0,   512);
		API_polar::template g  < 1024>(s, l, 61440+    0, 61440+ 1024, 12288+    0, 61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template g0 <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template g0 <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template g0 <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           13552+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 13552+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           13560+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 13560+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           13564+    0,     4);
		API_polar::template xo <    4>(s,    13560+    0, 13560+    4,              13560+    0,     4);
		API_polar::template xo <    8>(s,    13552+    0, 13552+    8,              13552+    0,     8);
		API_polar::template xo0<   16>(s,    13536+   16,                           13536+    0,    16);
		API_polar::template xo0<   32>(s,    13504+   32,                           13504+    0,    32);
		API_polar::template xo0<   64>(s,    13440+   64,                           13440+    0,    64);
		API_polar::template xo0<  128>(s,    13312+  128,                           13312+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 13312+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template g0 <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                           13632+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32, 13632+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           13664+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 13664+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           13680+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 13680+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           13688+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 13688+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           13692+    0,     4);
		API_polar::template xo <    4>(s,    13688+    0, 13688+    4,              13688+    0,     4);
		API_polar::template xo <    8>(s,    13680+    0, 13680+    8,              13680+    0,     8);
		API_polar::template xo <   16>(s,    13664+    0, 13664+   16,              13664+    0,    16);
		API_polar::template xo <   32>(s,    13632+    0, 13632+   32,              13632+    0,    32);
		API_polar::template xo0<   64>(s,    13568+   64,                           13568+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 13568+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                           13696+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32, 13696+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           13728+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 13728+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           13744+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 13744+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           13752+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 13752+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           13756+    0,     4);
		API_polar::template xo <    4>(s,    13752+    0, 13752+    4,              13752+    0,     4);
		API_polar::template xo <    8>(s,    13744+    0, 13744+    8,              13744+    0,     8);
		API_polar::template xo <   16>(s,    13728+    0, 13728+   16,              13728+    0,    16);
		API_polar::template xo <   32>(s,    13696+    0, 13696+   32,              13696+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 13696+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           13760+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 13760+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           13776+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 13776+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           13784+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 13784+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           13788+    0,     4);
		API_polar::template xo <    4>(s,    13784+    0, 13784+    4,              13784+    0,     4);
		API_polar::template xo <    8>(s,    13776+    0, 13776+    8,              13776+    0,     8);
		API_polar::template xo <   16>(s,    13760+    0, 13760+   16,              13760+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 13760+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           13796+    0,     4);
		API_polar::template xo0<    4>(s,    13792+    4,                           13792+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 13792+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           13800+    0,     8);
		API_polar::template xo <    8>(s,    13792+    0, 13792+    8,              13792+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 13792+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           13808+    0,    16);
		API_polar::template xo <   16>(s,    13792+    0, 13792+   16,              13792+    0,    16);
		API_polar::template xo <   32>(s,    13760+    0, 13760+   32,              13760+    0,    32);
		API_polar::template xo <   64>(s,    13696+    0, 13696+   64,              13696+    0,    64);
		API_polar::template xo <  128>(s,    13568+    0, 13568+  128,              13568+    0,   128);
		API_polar::template xo <  256>(s,    13312+    0, 13312+  256,              13312+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512, 13312+    0, 63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template rep<   64>(s, l, 65408+    0,                           13824+    0,    64);
		API_polar::template gr <   64>(s, l, 65280+    0, 65280+   64, 13824+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                           13888+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32, 13888+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           13920+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 13920+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           13936+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 13936+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           13944+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 13944+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           13948+    0,     4);
		API_polar::template xo <    4>(s,    13944+    0, 13944+    4,              13944+    0,     4);
		API_polar::template xo <    8>(s,    13936+    0, 13936+    8,              13936+    0,     8);
		API_polar::template xo <   16>(s,    13920+    0, 13920+   16,              13920+    0,    16);
		API_polar::template xo <   32>(s,    13888+    0, 13888+   32,              13888+    0,    32);
		API_polar::template xo <   64>(s,    13824+    0, 13824+   64,              13824+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 13824+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                           13952+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32, 13952+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           13996+    0,     4);
		API_polar::template xo0<    4>(s,    13992+    4,                           13992+    0,     4);
		API_polar::template xo0<    8>(s,    13984+    8,                           13984+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 13984+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           14000+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 14000+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           14004+    0,     4);
		API_polar::template xo <    4>(s,    14000+    0, 14000+    4,              14000+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 14000+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           14008+    0,     8);
		API_polar::template xo <    8>(s,    14000+    0, 14000+    8,              14000+    0,     8);
		API_polar::template xo <   16>(s,    13984+    0, 13984+   16,              13984+    0,    16);
		API_polar::template xo <   32>(s,    13952+    0, 13952+   32,              13952+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 13952+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           14016+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 14016+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           14024+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 14024+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           14028+    0,     4);
		API_polar::template xo <    4>(s,    14024+    0, 14024+    4,              14024+    0,     4);
		API_polar::template xo <    8>(s,    14016+    0, 14016+    8,              14016+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 14016+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           14032+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 14032+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           14036+    0,     4);
		API_polar::template xo <    4>(s,    14032+    0, 14032+    4,              14032+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 14032+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           14040+    0,     8);
		API_polar::template xo <    8>(s,    14032+    0, 14032+    8,              14032+    0,     8);
		API_polar::template xo <   16>(s,    14016+    0, 14016+   16,              14016+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 14016+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           14048+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 14048+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           14052+    0,     4);
		API_polar::template xo <    4>(s,    14048+    0, 14048+    4,              14048+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 14048+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           14056+    0,     8);
		API_polar::template xo <    8>(s,    14048+    0, 14048+    8,              14048+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 14048+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           14064+    0,    16);
		API_polar::template xo <   16>(s,    14048+    0, 14048+   16,              14048+    0,    16);
		API_polar::template xo <   32>(s,    14016+    0, 14016+   32,              14016+    0,    32);
		API_polar::template xo <   64>(s,    13952+    0, 13952+   64,              13952+    0,    64);
		API_polar::template xo <  128>(s,    13824+    0, 13824+  128,              13824+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 13824+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           14104+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 14104+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           14108+    0,     4);
		API_polar::template xo <    4>(s,    14104+    0, 14104+    4,              14104+    0,     4);
		API_polar::template xo0<    8>(s,    14096+    8,                           14096+    0,     8);
		API_polar::template xo0<   16>(s,    14080+   16,                           14080+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 14080+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           14112+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 14112+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           14120+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 14120+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           14124+    0,     4);
		API_polar::template xo <    4>(s,    14120+    0, 14120+    4,              14120+    0,     4);
		API_polar::template xo <    8>(s,    14112+    0, 14112+    8,              14112+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 14112+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           14128+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 14128+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           14132+    0,     4);
		API_polar::template xo <    4>(s,    14128+    0, 14128+    4,              14128+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 14128+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           14136+    0,     8);
		API_polar::template xo <    8>(s,    14128+    0, 14128+    8,              14128+    0,     8);
		API_polar::template xo <   16>(s,    14112+    0, 14112+   16,              14112+    0,    16);
		API_polar::template xo <   32>(s,    14080+    0, 14080+   32,              14080+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 14080+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           14144+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 14144+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           14152+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 14152+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           14156+    0,     4);
		API_polar::template xo <    4>(s,    14152+    0, 14152+    4,              14152+    0,     4);
		API_polar::template xo <    8>(s,    14144+    0, 14144+    8,              14144+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 14144+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           14160+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 14160+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           14164+    0,     4);
		API_polar::template xo <    4>(s,    14160+    0, 14160+    4,              14160+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 14160+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           14168+    0,     8);
		API_polar::template xo <    8>(s,    14160+    0, 14160+    8,              14160+    0,     8);
		API_polar::template xo <   16>(s,    14144+    0, 14144+   16,              14144+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 14144+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           14176+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 14176+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           14180+    0,     4);
		API_polar::template xo <    4>(s,    14176+    0, 14176+    4,              14176+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 14176+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           14184+    0,     8);
		API_polar::template xo <    8>(s,    14176+    0, 14176+    8,              14176+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 14176+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           14192+    0,    16);
		API_polar::template xo <   16>(s,    14176+    0, 14176+   16,              14176+    0,    16);
		API_polar::template xo <   32>(s,    14144+    0, 14144+   32,              14144+    0,    32);
		API_polar::template xo <   64>(s,    14080+    0, 14080+   64,              14080+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 14080+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           14208+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 14208+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           14216+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 14216+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           14220+    0,     4);
		API_polar::template xo <    4>(s,    14216+    0, 14216+    4,              14216+    0,     4);
		API_polar::template xo <    8>(s,    14208+    0, 14208+    8,              14208+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 14208+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           14224+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 14224+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           14228+    0,     4);
		API_polar::template xo <    4>(s,    14224+    0, 14224+    4,              14224+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 14224+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           14232+    0,     8);
		API_polar::template xo <    8>(s,    14224+    0, 14224+    8,              14224+    0,     8);
		API_polar::template xo <   16>(s,    14208+    0, 14208+   16,              14208+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 14208+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           14240+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 14240+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           14244+    0,     4);
		API_polar::template xo <    4>(s,    14240+    0, 14240+    4,              14240+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 14240+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           14248+    0,     8);
		API_polar::template xo <    8>(s,    14240+    0, 14240+    8,              14240+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 14240+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           14256+    0,    16);
		API_polar::template xo <   16>(s,    14240+    0, 14240+   16,              14240+    0,    16);
		API_polar::template xo <   32>(s,    14208+    0, 14208+   32,              14208+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 14208+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           14272+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 14272+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           14276+    0,     4);
		API_polar::template xo <    4>(s,    14272+    0, 14272+    4,              14272+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 14272+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           14280+    0,     8);
		API_polar::template xo <    8>(s,    14272+    0, 14272+    8,              14272+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 14272+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           14288+    0,    16);
		API_polar::template xo <   16>(s,    14272+    0, 14272+   16,              14272+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 14272+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           14304+    0,    32);
		API_polar::template xo <   32>(s,    14272+    0, 14272+   32,              14272+    0,    32);
		API_polar::template xo <   64>(s,    14208+    0, 14208+   64,              14208+    0,    64);
		API_polar::template xo <  128>(s,    14080+    0, 14080+  128,              14080+    0,   128);
		API_polar::template xo <  256>(s,    13824+    0, 13824+  256,              13824+    0,   256);
		API_polar::template xo <  512>(s,    13312+    0, 13312+  512,              13312+    0,   512);
		API_polar::template xo < 1024>(s,    12288+    0, 12288+ 1024,              12288+    0,  1024);
		API_polar::template g  < 2048>(s, l, 57344+    0, 57344+ 2048, 12288+    0, 57344+ 4096,  2048);
		API_polar::template f  < 1024>(   l, 61440+    0, 61440+ 1024,              61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template g0 <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template g0 <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                           14528+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32, 14528+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           14560+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 14560+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           14576+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 14576+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           14584+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 14584+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           14588+    0,     4);
		API_polar::template xo <    4>(s,    14584+    0, 14584+    4,              14584+    0,     4);
		API_polar::template xo <    8>(s,    14576+    0, 14576+    8,              14576+    0,     8);
		API_polar::template xo <   16>(s,    14560+    0, 14560+   16,              14560+    0,    16);
		API_polar::template xo <   32>(s,    14528+    0, 14528+   32,              14528+    0,    32);
		API_polar::template xo0<   64>(s,    14464+   64,                           14464+    0,    64);
		API_polar::template xo0<  128>(s,    14336+  128,                           14336+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 14336+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template rep<   64>(s, l, 65408+    0,                           14592+    0,    64);
		API_polar::template gr <   64>(s, l, 65280+    0, 65280+   64, 14592+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                           14656+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32, 14656+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           14688+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 14688+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           14704+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 14704+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           14708+    0,     4);
		API_polar::template xo <    4>(s,    14704+    0, 14704+    4,              14704+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 14704+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           14712+    0,     8);
		API_polar::template xo <    8>(s,    14704+    0, 14704+    8,              14704+    0,     8);
		API_polar::template xo <   16>(s,    14688+    0, 14688+   16,              14688+    0,    16);
		API_polar::template xo <   32>(s,    14656+    0, 14656+   32,              14656+    0,    32);
		API_polar::template xo <   64>(s,    14592+    0, 14592+   64,              14592+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 14592+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           14748+    0,     4);
		API_polar::template xo0<    4>(s,    14744+    4,                           14744+    0,     4);
		API_polar::template xo0<    8>(s,    14736+    8,                           14736+    0,     8);
		API_polar::template xo0<   16>(s,    14720+   16,                           14720+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 14720+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           14752+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 14752+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           14760+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 14760+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           14764+    0,     4);
		API_polar::template xo <    4>(s,    14760+    0, 14760+    4,              14760+    0,     4);
		API_polar::template xo <    8>(s,    14752+    0, 14752+    8,              14752+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 14752+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           14768+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 14768+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           14772+    0,     4);
		API_polar::template xo <    4>(s,    14768+    0, 14768+    4,              14768+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 14768+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           14776+    0,     8);
		API_polar::template xo <    8>(s,    14768+    0, 14768+    8,              14768+    0,     8);
		API_polar::template xo <   16>(s,    14752+    0, 14752+   16,              14752+    0,    16);
		API_polar::template xo <   32>(s,    14720+    0, 14720+   32,              14720+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 14720+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           14784+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 14784+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           14792+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 14792+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           14796+    0,     4);
		API_polar::template xo <    4>(s,    14792+    0, 14792+    4,              14792+    0,     4);
		API_polar::template xo <    8>(s,    14784+    0, 14784+    8,              14784+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 14784+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           14800+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 14800+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           14804+    0,     4);
		API_polar::template xo <    4>(s,    14800+    0, 14800+    4,              14800+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 14800+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           14808+    0,     8);
		API_polar::template xo <    8>(s,    14800+    0, 14800+    8,              14800+    0,     8);
		API_polar::template xo <   16>(s,    14784+    0, 14784+   16,              14784+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 14784+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           14816+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 14816+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           14820+    0,     4);
		API_polar::template xo <    4>(s,    14816+    0, 14816+    4,              14816+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 14816+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           14824+    0,     8);
		API_polar::template xo <    8>(s,    14816+    0, 14816+    8,              14816+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 14816+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           14832+    0,    16);
		API_polar::template xo <   16>(s,    14816+    0, 14816+   16,              14816+    0,    16);
		API_polar::template xo <   32>(s,    14784+    0, 14784+   32,              14784+    0,    32);
		API_polar::template xo <   64>(s,    14720+    0, 14720+   64,              14720+    0,    64);
		API_polar::template xo <  128>(s,    14592+    0, 14592+  128,              14592+    0,   128);
		API_polar::template xo <  256>(s,    14336+    0, 14336+  256,              14336+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512, 14336+    0, 63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template rep<   64>(s, l, 65408+    0,                           14848+    0,    64);
		API_polar::template gr <   64>(s, l, 65280+    0, 65280+   64, 14848+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           14936+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 14936+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           14940+    0,     4);
		API_polar::template xo <    4>(s,    14936+    0, 14936+    4,              14936+    0,     4);
		API_polar::template xo0<    8>(s,    14928+    8,                           14928+    0,     8);
		API_polar::template xo0<   16>(s,    14912+   16,                           14912+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 14912+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           14944+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 14944+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           14952+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 14952+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           14956+    0,     4);
		API_polar::template xo <    4>(s,    14952+    0, 14952+    4,              14952+    0,     4);
		API_polar::template xo <    8>(s,    14944+    0, 14944+    8,              14944+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 14944+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           14960+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 14960+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           14964+    0,     4);
		API_polar::template xo <    4>(s,    14960+    0, 14960+    4,              14960+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 14960+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           14968+    0,     8);
		API_polar::template xo <    8>(s,    14960+    0, 14960+    8,              14960+    0,     8);
		API_polar::template xo <   16>(s,    14944+    0, 14944+   16,              14944+    0,    16);
		API_polar::template xo <   32>(s,    14912+    0, 14912+   32,              14912+    0,    32);
		API_polar::template xo <   64>(s,    14848+    0, 14848+   64,              14848+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 14848+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           14976+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 14976+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           14992+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 14992+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           15000+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 15000+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           15004+    0,     4);
		API_polar::template xo <    4>(s,    15000+    0, 15000+    4,              15000+    0,     4);
		API_polar::template xo <    8>(s,    14992+    0, 14992+    8,              14992+    0,     8);
		API_polar::template xo <   16>(s,    14976+    0, 14976+   16,              14976+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 14976+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           15008+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 15008+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           15016+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 15016+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           15020+    0,     4);
		API_polar::template xo <    4>(s,    15016+    0, 15016+    4,              15016+    0,     4);
		API_polar::template xo <    8>(s,    15008+    0, 15008+    8,              15008+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 15008+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           15024+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 15024+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           15028+    0,     4);
		API_polar::template xo <    4>(s,    15024+    0, 15024+    4,              15024+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 15024+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           15032+    0,     8);
		API_polar::template xo <    8>(s,    15024+    0, 15024+    8,              15024+    0,     8);
		API_polar::template xo <   16>(s,    15008+    0, 15008+   16,              15008+    0,    16);
		API_polar::template xo <   32>(s,    14976+    0, 14976+   32,              14976+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 14976+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           15040+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 15040+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           15048+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 15048+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           15052+    0,     4);
		API_polar::template xo <    4>(s,    15048+    0, 15048+    4,              15048+    0,     4);
		API_polar::template xo <    8>(s,    15040+    0, 15040+    8,              15040+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 15040+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           15056+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 15056+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           15060+    0,     4);
		API_polar::template xo <    4>(s,    15056+    0, 15056+    4,              15056+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 15056+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           15064+    0,     8);
		API_polar::template xo <    8>(s,    15056+    0, 15056+    8,              15056+    0,     8);
		API_polar::template xo <   16>(s,    15040+    0, 15040+   16,              15040+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 15040+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           15072+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 15072+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           15076+    0,     4);
		API_polar::template xo <    4>(s,    15072+    0, 15072+    4,              15072+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 15072+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           15080+    0,     8);
		API_polar::template xo <    8>(s,    15072+    0, 15072+    8,              15072+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 15072+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           15088+    0,    16);
		API_polar::template xo <   16>(s,    15072+    0, 15072+   16,              15072+    0,    16);
		API_polar::template xo <   32>(s,    15040+    0, 15040+   32,              15040+    0,    32);
		API_polar::template xo <   64>(s,    14976+    0, 14976+   64,              14976+    0,    64);
		API_polar::template xo <  128>(s,    14848+    0, 14848+  128,              14848+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 14848+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           15104+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 15104+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           15120+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 15120+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           15128+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 15128+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           15132+    0,     4);
		API_polar::template xo <    4>(s,    15128+    0, 15128+    4,              15128+    0,     4);
		API_polar::template xo <    8>(s,    15120+    0, 15120+    8,              15120+    0,     8);
		API_polar::template xo <   16>(s,    15104+    0, 15104+   16,              15104+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 15104+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           15136+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 15136+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           15144+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 15144+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           15148+    0,     4);
		API_polar::template xo <    4>(s,    15144+    0, 15144+    4,              15144+    0,     4);
		API_polar::template xo <    8>(s,    15136+    0, 15136+    8,              15136+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 15136+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           15152+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 15152+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           15156+    0,     4);
		API_polar::template xo <    4>(s,    15152+    0, 15152+    4,              15152+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 15152+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           15160+    0,     8);
		API_polar::template xo <    8>(s,    15152+    0, 15152+    8,              15152+    0,     8);
		API_polar::template xo <   16>(s,    15136+    0, 15136+   16,              15136+    0,    16);
		API_polar::template xo <   32>(s,    15104+    0, 15104+   32,              15104+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 15104+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           15168+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 15168+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           15176+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 15176+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           15180+    0,     4);
		API_polar::template xo <    4>(s,    15176+    0, 15176+    4,              15176+    0,     4);
		API_polar::template xo <    8>(s,    15168+    0, 15168+    8,              15168+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 15168+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           15184+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 15184+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           15188+    0,     4);
		API_polar::template xo <    4>(s,    15184+    0, 15184+    4,              15184+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 15184+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           15192+    0,     8);
		API_polar::template xo <    8>(s,    15184+    0, 15184+    8,              15184+    0,     8);
		API_polar::template xo <   16>(s,    15168+    0, 15168+   16,              15168+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 15168+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           15200+    0,    32);
		API_polar::template xo <   32>(s,    15168+    0, 15168+   32,              15168+    0,    32);
		API_polar::template xo <   64>(s,    15104+    0, 15104+   64,              15104+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 15104+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           15232+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 15232+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           15240+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 15240+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           15244+    0,     4);
		API_polar::template xo <    4>(s,    15240+    0, 15240+    4,              15240+    0,     4);
		API_polar::template xo <    8>(s,    15232+    0, 15232+    8,              15232+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 15232+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           15248+    0,    16);
		API_polar::template xo <   16>(s,    15232+    0, 15232+   16,              15232+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 15232+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           15264+    0,    32);
		API_polar::template xo <   32>(s,    15232+    0, 15232+   32,              15232+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 15232+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           15296+    0,    64);
		API_polar::template xo <   64>(s,    15232+    0, 15232+   64,              15232+    0,    64);
		API_polar::template xo <  128>(s,    15104+    0, 15104+  128,              15104+    0,   128);
		API_polar::template xo <  256>(s,    14848+    0, 14848+  256,              14848+    0,   256);
		API_polar::template xo <  512>(s,    14336+    0, 14336+  512,              14336+    0,   512);
		API_polar::template g  < 1024>(s, l, 61440+    0, 61440+ 1024, 14336+    0, 61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template g0 <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           15392+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 15392+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           15408+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 15408+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           15416+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 15416+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           15420+    0,     4);
		API_polar::template xo <    4>(s,    15416+    0, 15416+    4,              15416+    0,     4);
		API_polar::template xo <    8>(s,    15408+    0, 15408+    8,              15408+    0,     8);
		API_polar::template xo <   16>(s,    15392+    0, 15392+   16,              15392+    0,    16);
		API_polar::template xo0<   32>(s,    15360+   32,                           15360+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 15360+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           15424+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 15424+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           15440+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 15440+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           15448+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 15448+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           15452+    0,     4);
		API_polar::template xo <    4>(s,    15448+    0, 15448+    4,              15448+    0,     4);
		API_polar::template xo <    8>(s,    15440+    0, 15440+    8,              15440+    0,     8);
		API_polar::template xo <   16>(s,    15424+    0, 15424+   16,              15424+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 15424+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           15456+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 15456+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           15464+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 15464+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           15468+    0,     4);
		API_polar::template xo <    4>(s,    15464+    0, 15464+    4,              15464+    0,     4);
		API_polar::template xo <    8>(s,    15456+    0, 15456+    8,              15456+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 15456+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           15472+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 15472+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           15476+    0,     4);
		API_polar::template xo <    4>(s,    15472+    0, 15472+    4,              15472+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 15472+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           15480+    0,     8);
		API_polar::template xo <    8>(s,    15472+    0, 15472+    8,              15472+    0,     8);
		API_polar::template xo <   16>(s,    15456+    0, 15456+   16,              15456+    0,    16);
		API_polar::template xo <   32>(s,    15424+    0, 15424+   32,              15424+    0,    32);
		API_polar::template xo <   64>(s,    15360+    0, 15360+   64,              15360+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 15360+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           15488+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 15488+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           15504+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 15504+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           15512+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 15512+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           15516+    0,     4);
		API_polar::template xo <    4>(s,    15512+    0, 15512+    4,              15512+    0,     4);
		API_polar::template xo <    8>(s,    15504+    0, 15504+    8,              15504+    0,     8);
		API_polar::template xo <   16>(s,    15488+    0, 15488+   16,              15488+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 15488+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           15520+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 15520+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           15528+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 15528+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           15532+    0,     4);
		API_polar::template xo <    4>(s,    15528+    0, 15528+    4,              15528+    0,     4);
		API_polar::template xo <    8>(s,    15520+    0, 15520+    8,              15520+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 15520+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           15536+    0,    16);
		API_polar::template xo <   16>(s,    15520+    0, 15520+   16,              15520+    0,    16);
		API_polar::template xo <   32>(s,    15488+    0, 15488+   32,              15488+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 15488+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           15552+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 15552+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           15560+    0,     8);
		API_polar::template xo <    8>(s,    15552+    0, 15552+    8,              15552+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 15552+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           15568+    0,    16);
		API_polar::template xo <   16>(s,    15552+    0, 15552+   16,              15552+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 15552+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           15584+    0,    32);
		API_polar::template xo <   32>(s,    15552+    0, 15552+   32,              15552+    0,    32);
		API_polar::template xo <   64>(s,    15488+    0, 15488+   64,              15488+    0,    64);
		API_polar::template xo <  128>(s,    15360+    0, 15360+  128,              15360+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 15360+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           15616+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 15616+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           15632+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 15632+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           15640+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 15640+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           15644+    0,     4);
		API_polar::template xo <    4>(s,    15640+    0, 15640+    4,              15640+    0,     4);
		API_polar::template xo <    8>(s,    15632+    0, 15632+    8,              15632+    0,     8);
		API_polar::template xo <   16>(s,    15616+    0, 15616+   16,              15616+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 15616+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           15652+    0,     4);
		API_polar::template xo0<    4>(s,    15648+    4,                           15648+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 15648+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           15656+    0,     8);
		API_polar::template xo <    8>(s,    15648+    0, 15648+    8,              15648+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 15648+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           15664+    0,    16);
		API_polar::template xo <   16>(s,    15648+    0, 15648+   16,              15648+    0,    16);
		API_polar::template xo <   32>(s,    15616+    0, 15616+   32,              15616+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 15616+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           15680+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 15680+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           15684+    0,     4);
		API_polar::template xo <    4>(s,    15680+    0, 15680+    4,              15680+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 15680+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           15688+    0,     8);
		API_polar::template xo <    8>(s,    15680+    0, 15680+    8,              15680+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 15680+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           15696+    0,    16);
		API_polar::template xo <   16>(s,    15680+    0, 15680+   16,              15680+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 15680+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           15712+    0,    32);
		API_polar::template xo <   32>(s,    15680+    0, 15680+   32,              15680+    0,    32);
		API_polar::template xo <   64>(s,    15616+    0, 15616+   64,              15616+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 15616+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           15744+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 15744+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           15748+    0,     4);
		API_polar::template xo <    4>(s,    15744+    0, 15744+    4,              15744+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 15744+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           15752+    0,     8);
		API_polar::template xo <    8>(s,    15744+    0, 15744+    8,              15744+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 15744+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           15760+    0,    16);
		API_polar::template xo <   16>(s,    15744+    0, 15744+   16,              15744+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 15744+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           15776+    0,    32);
		API_polar::template xo <   32>(s,    15744+    0, 15744+   32,              15744+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 15744+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           15808+    0,    64);
		API_polar::template xo <   64>(s,    15744+    0, 15744+   64,              15744+    0,    64);
		API_polar::template xo <  128>(s,    15616+    0, 15616+  128,              15616+    0,   128);
		API_polar::template xo <  256>(s,    15360+    0, 15360+  256,              15360+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512, 15360+    0, 63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                           15886+    0,     2);
		API_polar::template xo0<    2>(s,    15884+    2,                           15884+    0,     2);
		API_polar::template xo0<    4>(s,    15880+    4,                           15880+    0,     4);
		API_polar::template xo0<    8>(s,    15872+    8,                           15872+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 15872+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           15888+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 15888+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           15892+    0,     4);
		API_polar::template xo <    4>(s,    15888+    0, 15888+    4,              15888+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 15888+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           15896+    0,     8);
		API_polar::template xo <    8>(s,    15888+    0, 15888+    8,              15888+    0,     8);
		API_polar::template xo <   16>(s,    15872+    0, 15872+   16,              15872+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 15872+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           15904+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 15904+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           15908+    0,     4);
		API_polar::template xo <    4>(s,    15904+    0, 15904+    4,              15904+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 15904+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           15912+    0,     8);
		API_polar::template xo <    8>(s,    15904+    0, 15904+    8,              15904+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 15904+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           15920+    0,    16);
		API_polar::template xo <   16>(s,    15904+    0, 15904+   16,              15904+    0,    16);
		API_polar::template xo <   32>(s,    15872+    0, 15872+   32,              15872+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 15872+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           15936+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 15936+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           15940+    0,     4);
		API_polar::template xo <    4>(s,    15936+    0, 15936+    4,              15936+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 15936+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           15944+    0,     8);
		API_polar::template xo <    8>(s,    15936+    0, 15936+    8,              15936+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 15936+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           15952+    0,    16);
		API_polar::template xo <   16>(s,    15936+    0, 15936+   16,              15936+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 15936+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           15968+    0,    32);
		API_polar::template xo <   32>(s,    15936+    0, 15936+   32,              15936+    0,    32);
		API_polar::template xo <   64>(s,    15872+    0, 15872+   64,              15872+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 15872+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           16000+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 16000+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           16004+    0,     4);
		API_polar::template xo <    4>(s,    16000+    0, 16000+    4,              16000+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 16000+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           16008+    0,     8);
		API_polar::template xo <    8>(s,    16000+    0, 16000+    8,              16000+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 16000+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           16016+    0,    16);
		API_polar::template xo <   16>(s,    16000+    0, 16000+   16,              16000+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 16000+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           16032+    0,    32);
		API_polar::template xo <   32>(s,    16000+    0, 16000+   32,              16000+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 16000+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           16064+    0,    64);
		API_polar::template xo <   64>(s,    16000+    0, 16000+   64,              16000+    0,    64);
		API_polar::template xo <  128>(s,    15872+    0, 15872+  128,              15872+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 15872+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           16128+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 16128+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           16132+    0,     4);
		API_polar::template xo <    4>(s,    16128+    0, 16128+    4,              16128+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 16128+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           16136+    0,     8);
		API_polar::template xo <    8>(s,    16128+    0, 16128+    8,              16128+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 16128+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           16144+    0,    16);
		API_polar::template xo <   16>(s,    16128+    0, 16128+   16,              16128+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 16128+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           16160+    0,    32);
		API_polar::template xo <   32>(s,    16128+    0, 16128+   32,              16128+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 16128+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           16192+    0,    64);
		API_polar::template xo <   64>(s,    16128+    0, 16128+   64,              16128+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 16128+    0, 65024+  256,   128);
		API_polar::template spc<  128>(s, l, 65280+    0,                           16256+    0,   128);
		API_polar::template xo <  128>(s,    16128+    0, 16128+  128,              16128+    0,   128);
		API_polar::template xo <  256>(s,    15872+    0, 15872+  256,              15872+    0,   256);
		API_polar::template xo <  512>(s,    15360+    0, 15360+  512,              15360+    0,   512);
		API_polar::template xo < 1024>(s,    14336+    0, 14336+ 1024,              14336+    0,  1024);
		API_polar::template xo < 2048>(s,    12288+    0, 12288+ 2048,              12288+    0,  2048);
		API_polar::template xo < 4096>(s,     8192+    0,  8192+ 4096,               8192+    0,  4096);
		API_polar::template xo < 8192>(s,        0+    0,     0+ 8192,                  0+    0,  8192);
		API_polar::template g  <16384>(s, l,     0+    0,     0+16384,     0+    0,     0+32768, 16384);
		API_polar::template f  < 8192>(   l, 32768+    0, 32768+ 8192,              32768+16384,  8192);
		API_polar::template f  < 4096>(   l, 49152+    0, 49152+ 4096,              49152+ 8192,  4096);
		API_polar::template f  < 2048>(   l, 57344+    0, 57344+ 2048,              57344+ 4096,  2048);
		API_polar::template g0 < 1024>(   l, 61440+    0, 61440+ 1024,              61440+ 2048,  1024);
		API_polar::template g0 <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template rep<  256>(s, l, 65024+    0,                           17920+    0,   256);
		API_polar::template gr <  256>(s, l, 64512+    0, 64512+  256, 17920+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template rep<  128>(s, l, 65280+    0,                           18176+    0,   128);
		API_polar::template gr <  128>(s, l, 65024+    0, 65024+  128, 18176+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template rep<   64>(s, l, 65408+    0,                           18304+    0,    64);
		API_polar::template gr <   64>(s, l, 65280+    0, 65280+   64, 18304+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           18392+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 18392+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           18396+    0,     4);
		API_polar::template xo <    4>(s,    18392+    0, 18392+    4,              18392+    0,     4);
		API_polar::template xo0<    8>(s,    18384+    8,                           18384+    0,     8);
		API_polar::template xo0<   16>(s,    18368+   16,                           18368+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 18368+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           18400+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 18400+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           18408+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 18408+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           18412+    0,     4);
		API_polar::template xo <    4>(s,    18408+    0, 18408+    4,              18408+    0,     4);
		API_polar::template xo <    8>(s,    18400+    0, 18400+    8,              18400+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 18400+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           18416+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 18416+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           18420+    0,     4);
		API_polar::template xo <    4>(s,    18416+    0, 18416+    4,              18416+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 18416+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           18424+    0,     8);
		API_polar::template xo <    8>(s,    18416+    0, 18416+    8,              18416+    0,     8);
		API_polar::template xo <   16>(s,    18400+    0, 18400+   16,              18400+    0,    16);
		API_polar::template xo <   32>(s,    18368+    0, 18368+   32,              18368+    0,    32);
		API_polar::template xo <   64>(s,    18304+    0, 18304+   64,              18304+    0,    64);
		API_polar::template xo <  128>(s,    18176+    0, 18176+  128,              18176+    0,   128);
		API_polar::template xo <  256>(s,    17920+    0, 17920+  256,              17920+    0,   256);
		API_polar::template xo0<  512>(s,    17408+  512,                           17408+    0,   512);
		API_polar::template xo0< 1024>(s,    16384+ 1024,                           16384+    0,  1024);
		API_polar::template g  < 2048>(s, l, 57344+    0, 57344+ 2048, 16384+    0, 57344+ 4096,  2048);
		API_polar::template f  < 1024>(   l, 61440+    0, 61440+ 1024,              61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template rep<  512>(s, l, 64512+    0,                           18432+    0,   512);
		API_polar::template gr <  512>(s, l, 63488+    0, 63488+  512, 18432+    0, 63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template rep<  256>(s, l, 65024+    0,                           18944+    0,   256);
		API_polar::template gr <  256>(s, l, 64512+    0, 64512+  256, 18944+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template g0 <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template g0 <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           19296+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 19296+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           19312+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 19312+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           19320+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 19320+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           19324+    0,     4);
		API_polar::template xo <    4>(s,    19320+    0, 19320+    4,              19320+    0,     4);
		API_polar::template xo <    8>(s,    19312+    0, 19312+    8,              19312+    0,     8);
		API_polar::template xo <   16>(s,    19296+    0, 19296+   16,              19296+    0,    16);
		API_polar::template xo0<   32>(s,    19264+   32,                           19264+    0,    32);
		API_polar::template xo0<   64>(s,    19200+   64,                           19200+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 19200+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                           19328+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32, 19328+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           19360+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 19360+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           19376+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 19376+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           19384+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 19384+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           19388+    0,     4);
		API_polar::template xo <    4>(s,    19384+    0, 19384+    4,              19384+    0,     4);
		API_polar::template xo <    8>(s,    19376+    0, 19376+    8,              19376+    0,     8);
		API_polar::template xo <   16>(s,    19360+    0, 19360+   16,              19360+    0,    16);
		API_polar::template xo <   32>(s,    19328+    0, 19328+   32,              19328+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 19328+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           19392+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 19392+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           19408+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 19408+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           19416+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 19416+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           19420+    0,     4);
		API_polar::template xo <    4>(s,    19416+    0, 19416+    4,              19416+    0,     4);
		API_polar::template xo <    8>(s,    19408+    0, 19408+    8,              19408+    0,     8);
		API_polar::template xo <   16>(s,    19392+    0, 19392+   16,              19392+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 19392+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           19424+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 19424+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           19432+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 19432+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           19436+    0,     4);
		API_polar::template xo <    4>(s,    19432+    0, 19432+    4,              19432+    0,     4);
		API_polar::template xo <    8>(s,    19424+    0, 19424+    8,              19424+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 19424+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           19440+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 19440+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           19444+    0,     4);
		API_polar::template xo <    4>(s,    19440+    0, 19440+    4,              19440+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 19440+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                           19448+    0,     8);
		API_polar::template xo <    8>(s,    19440+    0, 19440+    8,              19440+    0,     8);
		API_polar::template xo <   16>(s,    19424+    0, 19424+   16,              19424+    0,    16);
		API_polar::template xo <   32>(s,    19392+    0, 19392+   32,              19392+    0,    32);
		API_polar::template xo <   64>(s,    19328+    0, 19328+   64,              19328+    0,    64);
		API_polar::template xo <  128>(s,    19200+    0, 19200+  128,              19200+    0,   128);
		API_polar::template xo <  256>(s,    18944+    0, 18944+  256,              18944+    0,   256);
		API_polar::template xo <  512>(s,    18432+    0, 18432+  512,              18432+    0,   512);
		API_polar::template g  < 1024>(s, l, 61440+    0, 61440+ 1024, 18432+    0, 61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template g0 <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template g0 <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template g0 <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           19680+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 19680+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           19696+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 19696+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           19704+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 19704+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           19708+    0,     4);
		API_polar::template xo <    4>(s,    19704+    0, 19704+    4,              19704+    0,     4);
		API_polar::template xo <    8>(s,    19696+    0, 19696+    8,              19696+    0,     8);
		API_polar::template xo <   16>(s,    19680+    0, 19680+   16,              19680+    0,    16);
		API_polar::template xo0<   32>(s,    19648+   32,                           19648+    0,    32);
		API_polar::template xo0<   64>(s,    19584+   64,                           19584+    0,    64);
		API_polar::template xo0<  128>(s,    19456+  128,                           19456+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 19456+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template rep<   64>(s, l, 65408+    0,                           19712+    0,    64);
		API_polar::template gr <   64>(s, l, 65280+    0, 65280+   64, 19712+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                           19776+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32, 19776+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           19808+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 19808+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           19824+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 19824+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           19832+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 19832+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           19836+    0,     4);
		API_polar::template xo <    4>(s,    19832+    0, 19832+    4,              19832+    0,     4);
		API_polar::template xo <    8>(s,    19824+    0, 19824+    8,              19824+    0,     8);
		API_polar::template xo <   16>(s,    19808+    0, 19808+   16,              19808+    0,    16);
		API_polar::template xo <   32>(s,    19776+    0, 19776+   32,              19776+    0,    32);
		API_polar::template xo <   64>(s,    19712+    0, 19712+   64,              19712+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 19712+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                           19840+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32, 19840+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           19872+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 19872+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           19892+    0,     4);
		API_polar::template xo0<    4>(s,    19888+    4,                           19888+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 19888+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           19896+    0,     8);
		API_polar::template xo <    8>(s,    19888+    0, 19888+    8,              19888+    0,     8);
		API_polar::template xo <   16>(s,    19872+    0, 19872+   16,              19872+    0,    16);
		API_polar::template xo <   32>(s,    19840+    0, 19840+   32,              19840+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 19840+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           19912+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 19912+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           19916+    0,     4);
		API_polar::template xo <    4>(s,    19912+    0, 19912+    4,              19912+    0,     4);
		API_polar::template xo0<    8>(s,    19904+    8,                           19904+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 19904+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           19920+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 19920+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           19924+    0,     4);
		API_polar::template xo <    4>(s,    19920+    0, 19920+    4,              19920+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 19920+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           19928+    0,     8);
		API_polar::template xo <    8>(s,    19920+    0, 19920+    8,              19920+    0,     8);
		API_polar::template xo <   16>(s,    19904+    0, 19904+   16,              19904+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 19904+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           19936+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 19936+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           19940+    0,     4);
		API_polar::template xo <    4>(s,    19936+    0, 19936+    4,              19936+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 19936+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           19944+    0,     8);
		API_polar::template xo <    8>(s,    19936+    0, 19936+    8,              19936+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 19936+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           19952+    0,    16);
		API_polar::template xo <   16>(s,    19936+    0, 19936+   16,              19936+    0,    16);
		API_polar::template xo <   32>(s,    19904+    0, 19904+   32,              19904+    0,    32);
		API_polar::template xo <   64>(s,    19840+    0, 19840+   64,              19840+    0,    64);
		API_polar::template xo <  128>(s,    19712+    0, 19712+  128,              19712+    0,   128);
		API_polar::template xo <  256>(s,    19456+    0, 19456+  256,              19456+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512, 19456+    0, 63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template rep<   64>(s, l, 65408+    0,                           19968+    0,    64);
		API_polar::template gr <   64>(s, l, 65280+    0, 65280+   64, 19968+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                           20032+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32, 20032+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           20076+    0,     4);
		API_polar::template xo0<    4>(s,    20072+    4,                           20072+    0,     4);
		API_polar::template xo0<    8>(s,    20064+    8,                           20064+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 20064+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           20080+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 20080+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           20084+    0,     4);
		API_polar::template xo <    4>(s,    20080+    0, 20080+    4,              20080+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 20080+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           20088+    0,     8);
		API_polar::template xo <    8>(s,    20080+    0, 20080+    8,              20080+    0,     8);
		API_polar::template xo <   16>(s,    20064+    0, 20064+   16,              20064+    0,    16);
		API_polar::template xo <   32>(s,    20032+    0, 20032+   32,              20032+    0,    32);
		API_polar::template xo <   64>(s,    19968+    0, 19968+   64,              19968+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 19968+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           20120+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 20120+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           20124+    0,     4);
		API_polar::template xo <    4>(s,    20120+    0, 20120+    4,              20120+    0,     4);
		API_polar::template xo0<    8>(s,    20112+    8,                           20112+    0,     8);
		API_polar::template xo0<   16>(s,    20096+   16,                           20096+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 20096+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           20128+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 20128+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           20136+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 20136+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           20140+    0,     4);
		API_polar::template xo <    4>(s,    20136+    0, 20136+    4,              20136+    0,     4);
		API_polar::template xo <    8>(s,    20128+    0, 20128+    8,              20128+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 20128+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           20144+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 20144+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           20148+    0,     4);
		API_polar::template xo <    4>(s,    20144+    0, 20144+    4,              20144+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 20144+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           20152+    0,     8);
		API_polar::template xo <    8>(s,    20144+    0, 20144+    8,              20144+    0,     8);
		API_polar::template xo <   16>(s,    20128+    0, 20128+   16,              20128+    0,    16);
		API_polar::template xo <   32>(s,    20096+    0, 20096+   32,              20096+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 20096+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           20160+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 20160+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           20168+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 20168+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           20172+    0,     4);
		API_polar::template xo <    4>(s,    20168+    0, 20168+    4,              20168+    0,     4);
		API_polar::template xo <    8>(s,    20160+    0, 20160+    8,              20160+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 20160+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           20176+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 20176+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           20180+    0,     4);
		API_polar::template xo <    4>(s,    20176+    0, 20176+    4,              20176+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 20176+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           20184+    0,     8);
		API_polar::template xo <    8>(s,    20176+    0, 20176+    8,              20176+    0,     8);
		API_polar::template xo <   16>(s,    20160+    0, 20160+   16,              20160+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 20160+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           20192+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 20192+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           20196+    0,     4);
		API_polar::template xo <    4>(s,    20192+    0, 20192+    4,              20192+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 20192+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           20200+    0,     8);
		API_polar::template xo <    8>(s,    20192+    0, 20192+    8,              20192+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 20192+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           20208+    0,    16);
		API_polar::template xo <   16>(s,    20192+    0, 20192+   16,              20192+    0,    16);
		API_polar::template xo <   32>(s,    20160+    0, 20160+   32,              20160+    0,    32);
		API_polar::template xo <   64>(s,    20096+    0, 20096+   64,              20096+    0,    64);
		API_polar::template xo <  128>(s,    19968+    0, 19968+  128,              19968+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 19968+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           20224+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 20224+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           20240+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 20240+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           20248+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 20248+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           20252+    0,     4);
		API_polar::template xo <    4>(s,    20248+    0, 20248+    4,              20248+    0,     4);
		API_polar::template xo <    8>(s,    20240+    0, 20240+    8,              20240+    0,     8);
		API_polar::template xo <   16>(s,    20224+    0, 20224+   16,              20224+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 20224+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           20256+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 20256+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           20264+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 20264+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           20268+    0,     4);
		API_polar::template xo <    4>(s,    20264+    0, 20264+    4,              20264+    0,     4);
		API_polar::template xo <    8>(s,    20256+    0, 20256+    8,              20256+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 20256+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           20272+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 20272+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           20276+    0,     4);
		API_polar::template xo <    4>(s,    20272+    0, 20272+    4,              20272+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 20272+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           20280+    0,     8);
		API_polar::template xo <    8>(s,    20272+    0, 20272+    8,              20272+    0,     8);
		API_polar::template xo <   16>(s,    20256+    0, 20256+   16,              20256+    0,    16);
		API_polar::template xo <   32>(s,    20224+    0, 20224+   32,              20224+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 20224+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           20288+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 20288+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           20296+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 20296+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           20300+    0,     4);
		API_polar::template xo <    4>(s,    20296+    0, 20296+    4,              20296+    0,     4);
		API_polar::template xo <    8>(s,    20288+    0, 20288+    8,              20288+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 20288+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           20304+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 20304+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           20308+    0,     4);
		API_polar::template xo <    4>(s,    20304+    0, 20304+    4,              20304+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 20304+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           20312+    0,     8);
		API_polar::template xo <    8>(s,    20304+    0, 20304+    8,              20304+    0,     8);
		API_polar::template xo <   16>(s,    20288+    0, 20288+   16,              20288+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 20288+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           20320+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 20320+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           20324+    0,     4);
		API_polar::template xo <    4>(s,    20320+    0, 20320+    4,              20320+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 20320+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           20328+    0,     8);
		API_polar::template xo <    8>(s,    20320+    0, 20320+    8,              20320+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 20320+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           20336+    0,    16);
		API_polar::template xo <   16>(s,    20320+    0, 20320+   16,              20320+    0,    16);
		API_polar::template xo <   32>(s,    20288+    0, 20288+   32,              20288+    0,    32);
		API_polar::template xo <   64>(s,    20224+    0, 20224+   64,              20224+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 20224+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           20352+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 20352+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           20360+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 20360+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           20364+    0,     4);
		API_polar::template xo <    4>(s,    20360+    0, 20360+    4,              20360+    0,     4);
		API_polar::template xo <    8>(s,    20352+    0, 20352+    8,              20352+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 20352+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           20368+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 20368+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           20372+    0,     4);
		API_polar::template xo <    4>(s,    20368+    0, 20368+    4,              20368+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 20368+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           20376+    0,     8);
		API_polar::template xo <    8>(s,    20368+    0, 20368+    8,              20368+    0,     8);
		API_polar::template xo <   16>(s,    20352+    0, 20352+   16,              20352+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 20352+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                           20386+    0,     2);
		API_polar::template xo0<    2>(s,    20384+    2,                           20384+    0,     2);
		API_polar::template g  <    4>(s, l, 65520+    0, 65520+    4, 20384+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           20388+    0,     4);
		API_polar::template xo <    4>(s,    20384+    0, 20384+    4,              20384+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 20384+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                           20392+    0,     8);
		API_polar::template xo <    8>(s,    20384+    0, 20384+    8,              20384+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 20384+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                           20400+    0,    16);
		API_polar::template xo <   16>(s,    20384+    0, 20384+   16,              20384+    0,    16);
		API_polar::template xo <   32>(s,    20352+    0, 20352+   32,              20352+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 20352+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           20416+    0,    64);
		API_polar::template xo <   64>(s,    20352+    0, 20352+   64,              20352+    0,    64);
		API_polar::template xo <  128>(s,    20224+    0, 20224+  128,              20224+    0,   128);
		API_polar::template xo <  256>(s,    19968+    0, 19968+  256,              19968+    0,   256);
		API_polar::template xo <  512>(s,    19456+    0, 19456+  512,              19456+    0,   512);
		API_polar::template xo < 1024>(s,    18432+    0, 18432+ 1024,              18432+    0,  1024);
		API_polar::template xo < 2048>(s,    16384+    0, 16384+ 2048,              16384+    0,  2048);
		API_polar::template g  < 4096>(s, l, 49152+    0, 49152+ 4096, 16384+    0, 49152+ 8192,  4096);
		API_polar::template f  < 2048>(   l, 57344+    0, 57344+ 2048,              57344+ 4096,  2048);
		API_polar::template f  < 1024>(   l, 61440+    0, 61440+ 1024,              61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template g0 <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template g0 <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template g0 <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template g0 <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           20976+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 20976+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           20984+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 20984+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           20988+    0,     4);
		API_polar::template xo <    4>(s,    20984+    0, 20984+    4,              20984+    0,     4);
		API_polar::template xo <    8>(s,    20976+    0, 20976+    8,              20976+    0,     8);
		API_polar::template xo0<   16>(s,    20960+   16,                           20960+    0,    16);
		API_polar::template xo0<   32>(s,    20928+   32,                           20928+    0,    32);
		API_polar::template xo0<   64>(s,    20864+   64,                           20864+    0,    64);
		API_polar::template xo0<  128>(s,    20736+  128,                           20736+    0,   128);
		API_polar::template xo0<  256>(s,    20480+  256,                           20480+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512, 20480+    0, 63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template g0 <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template g0 <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                           21184+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32, 21184+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           21216+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 21216+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           21232+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 21232+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           21240+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 21240+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           21244+    0,     4);
		API_polar::template xo <    4>(s,    21240+    0, 21240+    4,              21240+    0,     4);
		API_polar::template xo <    8>(s,    21232+    0, 21232+    8,              21232+    0,     8);
		API_polar::template xo <   16>(s,    21216+    0, 21216+   16,              21216+    0,    16);
		API_polar::template xo <   32>(s,    21184+    0, 21184+   32,              21184+    0,    32);
		API_polar::template xo0<   64>(s,    21120+   64,                           21120+    0,    64);
		API_polar::template xo0<  128>(s,    20992+  128,                           20992+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 20992+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template rep<   64>(s, l, 65408+    0,                           21248+    0,    64);
		API_polar::template gr <   64>(s, l, 65280+    0, 65280+   64, 21248+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                           21312+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32, 21312+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           21344+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 21344+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           21364+    0,     4);
		API_polar::template xo0<    4>(s,    21360+    4,                           21360+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 21360+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           21368+    0,     8);
		API_polar::template xo <    8>(s,    21360+    0, 21360+    8,              21360+    0,     8);
		API_polar::template xo <   16>(s,    21344+    0, 21344+   16,              21344+    0,    16);
		API_polar::template xo <   32>(s,    21312+    0, 21312+   32,              21312+    0,    32);
		API_polar::template xo <   64>(s,    21248+    0, 21248+   64,              21248+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 21248+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                           21376+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32, 21376+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           21416+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 21416+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           21420+    0,     4);
		API_polar::template xo <    4>(s,    21416+    0, 21416+    4,              21416+    0,     4);
		API_polar::template xo0<    8>(s,    21408+    8,                           21408+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 21408+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           21424+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 21424+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           21428+    0,     4);
		API_polar::template xo <    4>(s,    21424+    0, 21424+    4,              21424+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 21424+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           21432+    0,     8);
		API_polar::template xo <    8>(s,    21424+    0, 21424+    8,              21424+    0,     8);
		API_polar::template xo <   16>(s,    21408+    0, 21408+   16,              21408+    0,    16);
		API_polar::template xo <   32>(s,    21376+    0, 21376+   32,              21376+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 21376+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           21440+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 21440+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           21448+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 21448+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           21452+    0,     4);
		API_polar::template xo <    4>(s,    21448+    0, 21448+    4,              21448+    0,     4);
		API_polar::template xo <    8>(s,    21440+    0, 21440+    8,              21440+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 21440+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           21456+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 21456+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           21460+    0,     4);
		API_polar::template xo <    4>(s,    21456+    0, 21456+    4,              21456+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 21456+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           21464+    0,     8);
		API_polar::template xo <    8>(s,    21456+    0, 21456+    8,              21456+    0,     8);
		API_polar::template xo <   16>(s,    21440+    0, 21440+   16,              21440+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 21440+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           21472+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 21472+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           21476+    0,     4);
		API_polar::template xo <    4>(s,    21472+    0, 21472+    4,              21472+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 21472+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           21480+    0,     8);
		API_polar::template xo <    8>(s,    21472+    0, 21472+    8,              21472+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 21472+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           21488+    0,    16);
		API_polar::template xo <   16>(s,    21472+    0, 21472+   16,              21472+    0,    16);
		API_polar::template xo <   32>(s,    21440+    0, 21440+   32,              21440+    0,    32);
		API_polar::template xo <   64>(s,    21376+    0, 21376+   64,              21376+    0,    64);
		API_polar::template xo <  128>(s,    21248+    0, 21248+  128,              21248+    0,   128);
		API_polar::template xo <  256>(s,    20992+    0, 20992+  256,              20992+    0,   256);
		API_polar::template xo <  512>(s,    20480+    0, 20480+  512,              20480+    0,   512);
		API_polar::template g  < 1024>(s, l, 61440+    0, 61440+ 1024, 20480+    0, 61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template rep<  128>(s, l, 65280+    0,                           21504+    0,   128);
		API_polar::template gr <  128>(s, l, 65024+    0, 65024+  128, 21504+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template rep<   64>(s, l, 65408+    0,                           21632+    0,    64);
		API_polar::template gr <   64>(s, l, 65280+    0, 65280+   64, 21632+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                           21696+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32, 21696+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           21740+    0,     4);
		API_polar::template xo0<    4>(s,    21736+    4,                           21736+    0,     4);
		API_polar::template xo0<    8>(s,    21728+    8,                           21728+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 21728+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           21744+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 21744+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           21748+    0,     4);
		API_polar::template xo <    4>(s,    21744+    0, 21744+    4,              21744+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 21744+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           21752+    0,     8);
		API_polar::template xo <    8>(s,    21744+    0, 21744+    8,              21744+    0,     8);
		API_polar::template xo <   16>(s,    21728+    0, 21728+   16,              21728+    0,    16);
		API_polar::template xo <   32>(s,    21696+    0, 21696+   32,              21696+    0,    32);
		API_polar::template xo <   64>(s,    21632+    0, 21632+   64,              21632+    0,    64);
		API_polar::template xo <  128>(s,    21504+    0, 21504+  128,              21504+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 21504+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template g0 <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           21816+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 21816+    0, 65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                           21822+    0,     2);
		API_polar::template xo0<    2>(s,    21820+    2,                           21820+    0,     2);
		API_polar::template xo <    4>(s,    21816+    0, 21816+    4,              21816+    0,     4);
		API_polar::template xo0<    8>(s,    21808+    8,                           21808+    0,     8);
		API_polar::template xo0<   16>(s,    21792+   16,                           21792+    0,    16);
		API_polar::template xo0<   32>(s,    21760+   32,                           21760+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 21760+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           21840+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 21840+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           21848+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 21848+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           21852+    0,     4);
		API_polar::template xo <    4>(s,    21848+    0, 21848+    4,              21848+    0,     4);
		API_polar::template xo <    8>(s,    21840+    0, 21840+    8,              21840+    0,     8);
		API_polar::template xo0<   16>(s,    21824+   16,                           21824+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 21824+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           21856+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 21856+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           21864+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 21864+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           21868+    0,     4);
		API_polar::template xo <    4>(s,    21864+    0, 21864+    4,              21864+    0,     4);
		API_polar::template xo <    8>(s,    21856+    0, 21856+    8,              21856+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 21856+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           21872+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 21872+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           21876+    0,     4);
		API_polar::template xo <    4>(s,    21872+    0, 21872+    4,              21872+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 21872+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           21880+    0,     8);
		API_polar::template xo <    8>(s,    21872+    0, 21872+    8,              21872+    0,     8);
		API_polar::template xo <   16>(s,    21856+    0, 21856+   16,              21856+    0,    16);
		API_polar::template xo <   32>(s,    21824+    0, 21824+   32,              21824+    0,    32);
		API_polar::template xo <   64>(s,    21760+    0, 21760+   64,              21760+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 21760+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           21888+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 21888+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           21904+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 21904+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           21912+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 21912+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           21916+    0,     4);
		API_polar::template xo <    4>(s,    21912+    0, 21912+    4,              21912+    0,     4);
		API_polar::template xo <    8>(s,    21904+    0, 21904+    8,              21904+    0,     8);
		API_polar::template xo <   16>(s,    21888+    0, 21888+   16,              21888+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 21888+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           21920+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 21920+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           21928+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 21928+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           21932+    0,     4);
		API_polar::template xo <    4>(s,    21928+    0, 21928+    4,              21928+    0,     4);
		API_polar::template xo <    8>(s,    21920+    0, 21920+    8,              21920+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 21920+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           21936+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 21936+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           21940+    0,     4);
		API_polar::template xo <    4>(s,    21936+    0, 21936+    4,              21936+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 21936+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           21944+    0,     8);
		API_polar::template xo <    8>(s,    21936+    0, 21936+    8,              21936+    0,     8);
		API_polar::template xo <   16>(s,    21920+    0, 21920+   16,              21920+    0,    16);
		API_polar::template xo <   32>(s,    21888+    0, 21888+   32,              21888+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 21888+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           21952+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 21952+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           21960+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 21960+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           21964+    0,     4);
		API_polar::template xo <    4>(s,    21960+    0, 21960+    4,              21960+    0,     4);
		API_polar::template xo <    8>(s,    21952+    0, 21952+    8,              21952+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 21952+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           21968+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 21968+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           21972+    0,     4);
		API_polar::template xo <    4>(s,    21968+    0, 21968+    4,              21968+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 21968+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           21976+    0,     8);
		API_polar::template xo <    8>(s,    21968+    0, 21968+    8,              21968+    0,     8);
		API_polar::template xo <   16>(s,    21952+    0, 21952+   16,              21952+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 21952+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           21984+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 21984+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           21988+    0,     4);
		API_polar::template xo <    4>(s,    21984+    0, 21984+    4,              21984+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 21984+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           21992+    0,     8);
		API_polar::template xo <    8>(s,    21984+    0, 21984+    8,              21984+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 21984+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           22000+    0,    16);
		API_polar::template xo <   16>(s,    21984+    0, 21984+   16,              21984+    0,    16);
		API_polar::template xo <   32>(s,    21952+    0, 21952+   32,              21952+    0,    32);
		API_polar::template xo <   64>(s,    21888+    0, 21888+   64,              21888+    0,    64);
		API_polar::template xo <  128>(s,    21760+    0, 21760+  128,              21760+    0,   128);
		API_polar::template xo <  256>(s,    21504+    0, 21504+  256,              21504+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512, 21504+    0, 63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template g0 <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           22048+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 22048+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           22064+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 22064+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           22072+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 22072+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           22076+    0,     4);
		API_polar::template xo <    4>(s,    22072+    0, 22072+    4,              22072+    0,     4);
		API_polar::template xo <    8>(s,    22064+    0, 22064+    8,              22064+    0,     8);
		API_polar::template xo <   16>(s,    22048+    0, 22048+   16,              22048+    0,    16);
		API_polar::template xo0<   32>(s,    22016+   32,                           22016+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 22016+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           22080+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 22080+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           22096+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 22096+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           22104+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 22104+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           22108+    0,     4);
		API_polar::template xo <    4>(s,    22104+    0, 22104+    4,              22104+    0,     4);
		API_polar::template xo <    8>(s,    22096+    0, 22096+    8,              22096+    0,     8);
		API_polar::template xo <   16>(s,    22080+    0, 22080+   16,              22080+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 22080+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           22112+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 22112+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           22120+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 22120+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           22124+    0,     4);
		API_polar::template xo <    4>(s,    22120+    0, 22120+    4,              22120+    0,     4);
		API_polar::template xo <    8>(s,    22112+    0, 22112+    8,              22112+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 22112+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           22128+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 22128+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           22132+    0,     4);
		API_polar::template xo <    4>(s,    22128+    0, 22128+    4,              22128+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 22128+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           22136+    0,     8);
		API_polar::template xo <    8>(s,    22128+    0, 22128+    8,              22128+    0,     8);
		API_polar::template xo <   16>(s,    22112+    0, 22112+   16,              22112+    0,    16);
		API_polar::template xo <   32>(s,    22080+    0, 22080+   32,              22080+    0,    32);
		API_polar::template xo <   64>(s,    22016+    0, 22016+   64,              22016+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 22016+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           22144+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 22144+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           22160+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 22160+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           22168+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 22168+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           22172+    0,     4);
		API_polar::template xo <    4>(s,    22168+    0, 22168+    4,              22168+    0,     4);
		API_polar::template xo <    8>(s,    22160+    0, 22160+    8,              22160+    0,     8);
		API_polar::template xo <   16>(s,    22144+    0, 22144+   16,              22144+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 22144+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           22176+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 22176+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           22184+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 22184+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           22188+    0,     4);
		API_polar::template xo <    4>(s,    22184+    0, 22184+    4,              22184+    0,     4);
		API_polar::template xo <    8>(s,    22176+    0, 22176+    8,              22176+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 22176+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           22192+    0,    16);
		API_polar::template xo <   16>(s,    22176+    0, 22176+   16,              22176+    0,    16);
		API_polar::template xo <   32>(s,    22144+    0, 22144+   32,              22144+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 22144+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           22208+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 22208+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           22216+    0,     8);
		API_polar::template xo <    8>(s,    22208+    0, 22208+    8,              22208+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 22208+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           22224+    0,    16);
		API_polar::template xo <   16>(s,    22208+    0, 22208+   16,              22208+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 22208+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           22240+    0,    32);
		API_polar::template xo <   32>(s,    22208+    0, 22208+   32,              22208+    0,    32);
		API_polar::template xo <   64>(s,    22144+    0, 22144+   64,              22144+    0,    64);
		API_polar::template xo <  128>(s,    22016+    0, 22016+  128,              22016+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 22016+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           22272+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 22272+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           22288+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 22288+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           22296+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 22296+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           22300+    0,     4);
		API_polar::template xo <    4>(s,    22296+    0, 22296+    4,              22296+    0,     4);
		API_polar::template xo <    8>(s,    22288+    0, 22288+    8,              22288+    0,     8);
		API_polar::template xo <   16>(s,    22272+    0, 22272+   16,              22272+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 22272+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           22308+    0,     4);
		API_polar::template xo0<    4>(s,    22304+    4,                           22304+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 22304+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           22312+    0,     8);
		API_polar::template xo <    8>(s,    22304+    0, 22304+    8,              22304+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 22304+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           22320+    0,    16);
		API_polar::template xo <   16>(s,    22304+    0, 22304+   16,              22304+    0,    16);
		API_polar::template xo <   32>(s,    22272+    0, 22272+   32,              22272+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 22272+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           22336+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 22336+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           22340+    0,     4);
		API_polar::template xo <    4>(s,    22336+    0, 22336+    4,              22336+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 22336+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           22344+    0,     8);
		API_polar::template xo <    8>(s,    22336+    0, 22336+    8,              22336+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 22336+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           22352+    0,    16);
		API_polar::template xo <   16>(s,    22336+    0, 22336+   16,              22336+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 22336+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           22368+    0,    32);
		API_polar::template xo <   32>(s,    22336+    0, 22336+   32,              22336+    0,    32);
		API_polar::template xo <   64>(s,    22272+    0, 22272+   64,              22272+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 22272+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           22400+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 22400+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           22404+    0,     4);
		API_polar::template xo <    4>(s,    22400+    0, 22400+    4,              22400+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 22400+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           22408+    0,     8);
		API_polar::template xo <    8>(s,    22400+    0, 22400+    8,              22400+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 22400+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           22416+    0,    16);
		API_polar::template xo <   16>(s,    22400+    0, 22400+   16,              22400+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 22400+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           22432+    0,    32);
		API_polar::template xo <   32>(s,    22400+    0, 22400+   32,              22400+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 22400+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           22464+    0,    64);
		API_polar::template xo <   64>(s,    22400+    0, 22400+   64,              22400+    0,    64);
		API_polar::template xo <  128>(s,    22272+    0, 22272+  128,              22272+    0,   128);
		API_polar::template xo <  256>(s,    22016+    0, 22016+  256,              22016+    0,   256);
		API_polar::template xo <  512>(s,    21504+    0, 21504+  512,              21504+    0,   512);
		API_polar::template xo < 1024>(s,    20480+    0, 20480+ 1024,              20480+    0,  1024);
		API_polar::template g  < 2048>(s, l, 57344+    0, 57344+ 2048, 20480+    0, 57344+ 4096,  2048);
		API_polar::template f  < 1024>(   l, 61440+    0, 61440+ 1024,              61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template rep<  128>(s, l, 65280+    0,                           22528+    0,   128);
		API_polar::template gr <  128>(s, l, 65024+    0, 65024+  128, 22528+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template g0 <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           22704+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 22704+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           22712+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 22712+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           22716+    0,     4);
		API_polar::template xo <    4>(s,    22712+    0, 22712+    4,              22712+    0,     4);
		API_polar::template xo <    8>(s,    22704+    0, 22704+    8,              22704+    0,     8);
		API_polar::template xo0<   16>(s,    22688+   16,                           22688+    0,    16);
		API_polar::template xo0<   32>(s,    22656+   32,                           22656+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 22656+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           22720+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 22720+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           22736+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 22736+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           22744+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 22744+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           22748+    0,     4);
		API_polar::template xo <    4>(s,    22744+    0, 22744+    4,              22744+    0,     4);
		API_polar::template xo <    8>(s,    22736+    0, 22736+    8,              22736+    0,     8);
		API_polar::template xo <   16>(s,    22720+    0, 22720+   16,              22720+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 22720+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           22752+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 22752+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           22760+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 22760+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           22764+    0,     4);
		API_polar::template xo <    4>(s,    22760+    0, 22760+    4,              22760+    0,     4);
		API_polar::template xo <    8>(s,    22752+    0, 22752+    8,              22752+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 22752+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           22768+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 22768+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           22772+    0,     4);
		API_polar::template xo <    4>(s,    22768+    0, 22768+    4,              22768+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 22768+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           22776+    0,     8);
		API_polar::template xo <    8>(s,    22768+    0, 22768+    8,              22768+    0,     8);
		API_polar::template xo <   16>(s,    22752+    0, 22752+   16,              22752+    0,    16);
		API_polar::template xo <   32>(s,    22720+    0, 22720+   32,              22720+    0,    32);
		API_polar::template xo <   64>(s,    22656+    0, 22656+   64,              22656+    0,    64);
		API_polar::template xo <  128>(s,    22528+    0, 22528+  128,              22528+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 22528+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                           22784+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32, 22784+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           22816+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 22816+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           22832+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 22832+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           22840+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 22840+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           22844+    0,     4);
		API_polar::template xo <    4>(s,    22840+    0, 22840+    4,              22840+    0,     4);
		API_polar::template xo <    8>(s,    22832+    0, 22832+    8,              22832+    0,     8);
		API_polar::template xo <   16>(s,    22816+    0, 22816+   16,              22816+    0,    16);
		API_polar::template xo <   32>(s,    22784+    0, 22784+   32,              22784+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 22784+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           22848+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 22848+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           22864+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 22864+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           22872+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 22872+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           22876+    0,     4);
		API_polar::template xo <    4>(s,    22872+    0, 22872+    4,              22872+    0,     4);
		API_polar::template xo <    8>(s,    22864+    0, 22864+    8,              22864+    0,     8);
		API_polar::template xo <   16>(s,    22848+    0, 22848+   16,              22848+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 22848+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           22880+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 22880+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           22888+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 22888+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           22892+    0,     4);
		API_polar::template xo <    4>(s,    22888+    0, 22888+    4,              22888+    0,     4);
		API_polar::template xo <    8>(s,    22880+    0, 22880+    8,              22880+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 22880+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           22896+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 22896+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           22900+    0,     4);
		API_polar::template xo <    4>(s,    22896+    0, 22896+    4,              22896+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 22896+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           22904+    0,     8);
		API_polar::template xo <    8>(s,    22896+    0, 22896+    8,              22896+    0,     8);
		API_polar::template xo <   16>(s,    22880+    0, 22880+   16,              22880+    0,    16);
		API_polar::template xo <   32>(s,    22848+    0, 22848+   32,              22848+    0,    32);
		API_polar::template xo <   64>(s,    22784+    0, 22784+   64,              22784+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 22784+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           22912+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 22912+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           22928+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 22928+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           22936+    0,     8);
		API_polar::template xo <    8>(s,    22928+    0, 22928+    8,              22928+    0,     8);
		API_polar::template xo <   16>(s,    22912+    0, 22912+   16,              22912+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 22912+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           22948+    0,     4);
		API_polar::template xo0<    4>(s,    22944+    4,                           22944+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 22944+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           22952+    0,     8);
		API_polar::template xo <    8>(s,    22944+    0, 22944+    8,              22944+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 22944+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           22960+    0,    16);
		API_polar::template xo <   16>(s,    22944+    0, 22944+   16,              22944+    0,    16);
		API_polar::template xo <   32>(s,    22912+    0, 22912+   32,              22912+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 22912+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           22976+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 22976+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           22980+    0,     4);
		API_polar::template xo <    4>(s,    22976+    0, 22976+    4,              22976+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 22976+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           22984+    0,     8);
		API_polar::template xo <    8>(s,    22976+    0, 22976+    8,              22976+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 22976+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           22992+    0,    16);
		API_polar::template xo <   16>(s,    22976+    0, 22976+   16,              22976+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 22976+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           23008+    0,    32);
		API_polar::template xo <   32>(s,    22976+    0, 22976+   32,              22976+    0,    32);
		API_polar::template xo <   64>(s,    22912+    0, 22912+   64,              22912+    0,    64);
		API_polar::template xo <  128>(s,    22784+    0, 22784+  128,              22784+    0,   128);
		API_polar::template xo <  256>(s,    22528+    0, 22528+  256,              22528+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512, 22528+    0, 63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                           23040+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32, 23040+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           23072+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 23072+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           23088+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 23088+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           23096+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 23096+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           23100+    0,     4);
		API_polar::template xo <    4>(s,    23096+    0, 23096+    4,              23096+    0,     4);
		API_polar::template xo <    8>(s,    23088+    0, 23088+    8,              23088+    0,     8);
		API_polar::template xo <   16>(s,    23072+    0, 23072+   16,              23072+    0,    16);
		API_polar::template xo <   32>(s,    23040+    0, 23040+   32,              23040+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 23040+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           23104+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 23104+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           23124+    0,     4);
		API_polar::template xo0<    4>(s,    23120+    4,                           23120+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 23120+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           23128+    0,     8);
		API_polar::template xo <    8>(s,    23120+    0, 23120+    8,              23120+    0,     8);
		API_polar::template xo <   16>(s,    23104+    0, 23104+   16,              23104+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 23104+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           23136+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 23136+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           23140+    0,     4);
		API_polar::template xo <    4>(s,    23136+    0, 23136+    4,              23136+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 23136+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           23144+    0,     8);
		API_polar::template xo <    8>(s,    23136+    0, 23136+    8,              23136+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 23136+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           23152+    0,    16);
		API_polar::template xo <   16>(s,    23136+    0, 23136+   16,              23136+    0,    16);
		API_polar::template xo <   32>(s,    23104+    0, 23104+   32,              23104+    0,    32);
		API_polar::template xo <   64>(s,    23040+    0, 23040+   64,              23040+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 23040+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           23176+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 23176+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           23180+    0,     4);
		API_polar::template xo <    4>(s,    23176+    0, 23176+    4,              23176+    0,     4);
		API_polar::template xo0<    8>(s,    23168+    8,                           23168+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 23168+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           23184+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 23184+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           23188+    0,     4);
		API_polar::template xo <    4>(s,    23184+    0, 23184+    4,              23184+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 23184+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           23192+    0,     8);
		API_polar::template xo <    8>(s,    23184+    0, 23184+    8,              23184+    0,     8);
		API_polar::template xo <   16>(s,    23168+    0, 23168+   16,              23168+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 23168+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           23200+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 23200+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           23204+    0,     4);
		API_polar::template xo <    4>(s,    23200+    0, 23200+    4,              23200+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 23200+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           23208+    0,     8);
		API_polar::template xo <    8>(s,    23200+    0, 23200+    8,              23200+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 23200+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           23216+    0,    16);
		API_polar::template xo <   16>(s,    23200+    0, 23200+   16,              23200+    0,    16);
		API_polar::template xo <   32>(s,    23168+    0, 23168+   32,              23168+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 23168+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           23232+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 23232+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           23236+    0,     4);
		API_polar::template xo <    4>(s,    23232+    0, 23232+    4,              23232+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 23232+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           23240+    0,     8);
		API_polar::template xo <    8>(s,    23232+    0, 23232+    8,              23232+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 23232+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           23248+    0,    16);
		API_polar::template xo <   16>(s,    23232+    0, 23232+   16,              23232+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 23232+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           23264+    0,    32);
		API_polar::template xo <   32>(s,    23232+    0, 23232+   32,              23232+    0,    32);
		API_polar::template xo <   64>(s,    23168+    0, 23168+   64,              23168+    0,    64);
		API_polar::template xo <  128>(s,    23040+    0, 23040+  128,              23040+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 23040+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           23296+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 23296+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           23304+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 23304+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           23308+    0,     4);
		API_polar::template xo <    4>(s,    23304+    0, 23304+    4,              23304+    0,     4);
		API_polar::template xo <    8>(s,    23296+    0, 23296+    8,              23296+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 23296+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           23312+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 23312+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           23316+    0,     4);
		API_polar::template xo <    4>(s,    23312+    0, 23312+    4,              23312+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 23312+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           23320+    0,     8);
		API_polar::template xo <    8>(s,    23312+    0, 23312+    8,              23312+    0,     8);
		API_polar::template xo <   16>(s,    23296+    0, 23296+   16,              23296+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 23296+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           23328+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 23328+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           23332+    0,     4);
		API_polar::template xo <    4>(s,    23328+    0, 23328+    4,              23328+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 23328+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           23336+    0,     8);
		API_polar::template xo <    8>(s,    23328+    0, 23328+    8,              23328+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 23328+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           23344+    0,    16);
		API_polar::template xo <   16>(s,    23328+    0, 23328+   16,              23328+    0,    16);
		API_polar::template xo <   32>(s,    23296+    0, 23296+   32,              23296+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 23296+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           23360+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 23360+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           23364+    0,     4);
		API_polar::template xo <    4>(s,    23360+    0, 23360+    4,              23360+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 23360+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           23368+    0,     8);
		API_polar::template xo <    8>(s,    23360+    0, 23360+    8,              23360+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 23360+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           23376+    0,    16);
		API_polar::template xo <   16>(s,    23360+    0, 23360+   16,              23360+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 23360+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           23392+    0,    32);
		API_polar::template xo <   32>(s,    23360+    0, 23360+   32,              23360+    0,    32);
		API_polar::template xo <   64>(s,    23296+    0, 23296+   64,              23296+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 23296+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           23424+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 23424+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           23428+    0,     4);
		API_polar::template xo <    4>(s,    23424+    0, 23424+    4,              23424+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 23424+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           23432+    0,     8);
		API_polar::template xo <    8>(s,    23424+    0, 23424+    8,              23424+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 23424+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           23440+    0,    16);
		API_polar::template xo <   16>(s,    23424+    0, 23424+   16,              23424+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 23424+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           23456+    0,    32);
		API_polar::template xo <   32>(s,    23424+    0, 23424+   32,              23424+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 23424+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           23488+    0,    64);
		API_polar::template xo <   64>(s,    23424+    0, 23424+   64,              23424+    0,    64);
		API_polar::template xo <  128>(s,    23296+    0, 23296+  128,              23296+    0,   128);
		API_polar::template xo <  256>(s,    23040+    0, 23040+  256,              23040+    0,   256);
		API_polar::template xo <  512>(s,    22528+    0, 22528+  512,              22528+    0,   512);
		API_polar::template g  < 1024>(s, l, 61440+    0, 61440+ 1024, 22528+    0, 61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                           23552+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32, 23552+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           23592+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 23592+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           23596+    0,     4);
		API_polar::template xo <    4>(s,    23592+    0, 23592+    4,              23592+    0,     4);
		API_polar::template xo0<    8>(s,    23584+    8,                           23584+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 23584+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           23600+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 23600+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           23604+    0,     4);
		API_polar::template xo <    4>(s,    23600+    0, 23600+    4,              23600+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 23600+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           23608+    0,     8);
		API_polar::template xo <    8>(s,    23600+    0, 23600+    8,              23600+    0,     8);
		API_polar::template xo <   16>(s,    23584+    0, 23584+   16,              23584+    0,    16);
		API_polar::template xo <   32>(s,    23552+    0, 23552+   32,              23552+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 23552+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           23616+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 23616+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           23624+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 23624+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           23628+    0,     4);
		API_polar::template xo <    4>(s,    23624+    0, 23624+    4,              23624+    0,     4);
		API_polar::template xo <    8>(s,    23616+    0, 23616+    8,              23616+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 23616+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           23632+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 23632+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           23636+    0,     4);
		API_polar::template xo <    4>(s,    23632+    0, 23632+    4,              23632+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 23632+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           23640+    0,     8);
		API_polar::template xo <    8>(s,    23632+    0, 23632+    8,              23632+    0,     8);
		API_polar::template xo <   16>(s,    23616+    0, 23616+   16,              23616+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 23616+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           23648+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 23648+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           23652+    0,     4);
		API_polar::template xo <    4>(s,    23648+    0, 23648+    4,              23648+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 23648+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           23656+    0,     8);
		API_polar::template xo <    8>(s,    23648+    0, 23648+    8,              23648+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 23648+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           23664+    0,    16);
		API_polar::template xo <   16>(s,    23648+    0, 23648+   16,              23648+    0,    16);
		API_polar::template xo <   32>(s,    23616+    0, 23616+   32,              23616+    0,    32);
		API_polar::template xo <   64>(s,    23552+    0, 23552+   64,              23552+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 23552+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           23680+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 23680+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           23688+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 23688+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           23692+    0,     4);
		API_polar::template xo <    4>(s,    23688+    0, 23688+    4,              23688+    0,     4);
		API_polar::template xo <    8>(s,    23680+    0, 23680+    8,              23680+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 23680+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           23696+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 23696+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           23700+    0,     4);
		API_polar::template xo <    4>(s,    23696+    0, 23696+    4,              23696+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 23696+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           23704+    0,     8);
		API_polar::template xo <    8>(s,    23696+    0, 23696+    8,              23696+    0,     8);
		API_polar::template xo <   16>(s,    23680+    0, 23680+   16,              23680+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 23680+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           23712+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 23712+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           23716+    0,     4);
		API_polar::template xo <    4>(s,    23712+    0, 23712+    4,              23712+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 23712+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           23720+    0,     8);
		API_polar::template xo <    8>(s,    23712+    0, 23712+    8,              23712+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 23712+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           23728+    0,    16);
		API_polar::template xo <   16>(s,    23712+    0, 23712+   16,              23712+    0,    16);
		API_polar::template xo <   32>(s,    23680+    0, 23680+   32,              23680+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 23680+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           23744+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 23744+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           23748+    0,     4);
		API_polar::template xo <    4>(s,    23744+    0, 23744+    4,              23744+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 23744+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           23752+    0,     8);
		API_polar::template xo <    8>(s,    23744+    0, 23744+    8,              23744+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 23744+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           23760+    0,    16);
		API_polar::template xo <   16>(s,    23744+    0, 23744+   16,              23744+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 23744+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           23776+    0,    32);
		API_polar::template xo <   32>(s,    23744+    0, 23744+   32,              23744+    0,    32);
		API_polar::template xo <   64>(s,    23680+    0, 23680+   64,              23680+    0,    64);
		API_polar::template xo <  128>(s,    23552+    0, 23552+  128,              23552+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 23552+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           23808+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 23808+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           23816+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 23816+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           23820+    0,     4);
		API_polar::template xo <    4>(s,    23816+    0, 23816+    4,              23816+    0,     4);
		API_polar::template xo <    8>(s,    23808+    0, 23808+    8,              23808+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 23808+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           23824+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 23824+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           23828+    0,     4);
		API_polar::template xo <    4>(s,    23824+    0, 23824+    4,              23824+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 23824+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           23832+    0,     8);
		API_polar::template xo <    8>(s,    23824+    0, 23824+    8,              23824+    0,     8);
		API_polar::template xo <   16>(s,    23808+    0, 23808+   16,              23808+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 23808+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           23840+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 23840+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           23844+    0,     4);
		API_polar::template xo <    4>(s,    23840+    0, 23840+    4,              23840+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 23840+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           23848+    0,     8);
		API_polar::template xo <    8>(s,    23840+    0, 23840+    8,              23840+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 23840+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           23856+    0,    16);
		API_polar::template xo <   16>(s,    23840+    0, 23840+   16,              23840+    0,    16);
		API_polar::template xo <   32>(s,    23808+    0, 23808+   32,              23808+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 23808+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           23872+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 23872+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           23876+    0,     4);
		API_polar::template xo <    4>(s,    23872+    0, 23872+    4,              23872+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 23872+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           23880+    0,     8);
		API_polar::template xo <    8>(s,    23872+    0, 23872+    8,              23872+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 23872+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           23888+    0,    16);
		API_polar::template xo <   16>(s,    23872+    0, 23872+   16,              23872+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 23872+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           23904+    0,    32);
		API_polar::template xo <   32>(s,    23872+    0, 23872+   32,              23872+    0,    32);
		API_polar::template xo <   64>(s,    23808+    0, 23808+   64,              23808+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 23808+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           23936+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 23936+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           23940+    0,     4);
		API_polar::template xo <    4>(s,    23936+    0, 23936+    4,              23936+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 23936+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           23944+    0,     8);
		API_polar::template xo <    8>(s,    23936+    0, 23936+    8,              23936+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 23936+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           23952+    0,    16);
		API_polar::template xo <   16>(s,    23936+    0, 23936+   16,              23936+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 23936+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           23968+    0,    32);
		API_polar::template xo <   32>(s,    23936+    0, 23936+   32,              23936+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 23936+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           24000+    0,    64);
		API_polar::template xo <   64>(s,    23936+    0, 23936+   64,              23936+    0,    64);
		API_polar::template xo <  128>(s,    23808+    0, 23808+  128,              23808+    0,   128);
		API_polar::template xo <  256>(s,    23552+    0, 23552+  256,              23552+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512, 23552+    0, 63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           24064+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 24064+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           24072+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 24072+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           24076+    0,     4);
		API_polar::template xo <    4>(s,    24072+    0, 24072+    4,              24072+    0,     4);
		API_polar::template xo <    8>(s,    24064+    0, 24064+    8,              24064+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 24064+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           24080+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 24080+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           24084+    0,     4);
		API_polar::template xo <    4>(s,    24080+    0, 24080+    4,              24080+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 24080+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           24088+    0,     8);
		API_polar::template xo <    8>(s,    24080+    0, 24080+    8,              24080+    0,     8);
		API_polar::template xo <   16>(s,    24064+    0, 24064+   16,              24064+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 24064+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           24096+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 24096+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           24100+    0,     4);
		API_polar::template xo <    4>(s,    24096+    0, 24096+    4,              24096+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 24096+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           24104+    0,     8);
		API_polar::template xo <    8>(s,    24096+    0, 24096+    8,              24096+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 24096+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           24112+    0,    16);
		API_polar::template xo <   16>(s,    24096+    0, 24096+   16,              24096+    0,    16);
		API_polar::template xo <   32>(s,    24064+    0, 24064+   32,              24064+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 24064+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           24128+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 24128+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           24132+    0,     4);
		API_polar::template xo <    4>(s,    24128+    0, 24128+    4,              24128+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 24128+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           24136+    0,     8);
		API_polar::template xo <    8>(s,    24128+    0, 24128+    8,              24128+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 24128+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           24144+    0,    16);
		API_polar::template xo <   16>(s,    24128+    0, 24128+   16,              24128+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 24128+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           24160+    0,    32);
		API_polar::template xo <   32>(s,    24128+    0, 24128+   32,              24128+    0,    32);
		API_polar::template xo <   64>(s,    24064+    0, 24064+   64,              24064+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 24064+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           24192+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 24192+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           24196+    0,     4);
		API_polar::template xo <    4>(s,    24192+    0, 24192+    4,              24192+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 24192+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                           24200+    0,     8);
		API_polar::template xo <    8>(s,    24192+    0, 24192+    8,              24192+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 24192+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                           24208+    0,    16);
		API_polar::template xo <   16>(s,    24192+    0, 24192+   16,              24192+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 24192+    0, 65408+   64,    32);
		API_polar::template h  <   32>(s, l, 65472+    0,                           24224+    0,    32);
		API_polar::template xo <   32>(s,    24192+    0, 24192+   32,              24192+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 24192+    0, 65280+  128,    64);
		API_polar::template h  <   64>(s, l, 65408+    0,                           24256+    0,    64);
		API_polar::template xo <   64>(s,    24192+    0, 24192+   64,              24192+    0,    64);
		API_polar::template xo <  128>(s,    24064+    0, 24064+  128,              24064+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 24064+    0, 64512+  512,   256);
		API_polar::template spc<  256>(s, l, 65024+    0,                           24320+    0,   256);
		API_polar::template xo <  256>(s,    24064+    0, 24064+  256,              24064+    0,   256);
		API_polar::template xo <  512>(s,    23552+    0, 23552+  512,              23552+    0,   512);
		API_polar::template xo < 1024>(s,    22528+    0, 22528+ 1024,              22528+    0,  1024);
		API_polar::template xo < 2048>(s,    20480+    0, 20480+ 2048,              20480+    0,  2048);
		API_polar::template xo < 4096>(s,    16384+    0, 16384+ 4096,              16384+    0,  4096);
		API_polar::template g  < 8192>(s, l, 32768+    0, 32768+ 8192, 16384+    0, 32768+16384,  8192);
		API_polar::template f  < 4096>(   l, 49152+    0, 49152+ 4096,              49152+ 8192,  4096);
		API_polar::template f  < 2048>(   l, 57344+    0, 57344+ 2048,              57344+ 4096,  2048);
		API_polar::template f  < 1024>(   l, 61440+    0, 61440+ 1024,              61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template g0 <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template rep<  128>(s, l, 65280+    0,                           24832+    0,   128);
		API_polar::template gr <  128>(s, l, 65024+    0, 65024+  128, 24832+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template rep<   64>(s, l, 65408+    0,                           24960+    0,    64);
		API_polar::template gr <   64>(s, l, 65280+    0, 65280+   64, 24960+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                           25024+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32, 25024+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           25068+    0,     4);
		API_polar::template xo0<    4>(s,    25064+    4,                           25064+    0,     4);
		API_polar::template xo0<    8>(s,    25056+    8,                           25056+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 25056+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           25072+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 25072+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           25076+    0,     4);
		API_polar::template xo <    4>(s,    25072+    0, 25072+    4,              25072+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 25072+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           25080+    0,     8);
		API_polar::template xo <    8>(s,    25072+    0, 25072+    8,              25072+    0,     8);
		API_polar::template xo <   16>(s,    25056+    0, 25056+   16,              25056+    0,    16);
		API_polar::template xo <   32>(s,    25024+    0, 25024+   32,              25024+    0,    32);
		API_polar::template xo <   64>(s,    24960+    0, 24960+   64,              24960+    0,    64);
		API_polar::template xo <  128>(s,    24832+    0, 24832+  128,              24832+    0,   128);
		API_polar::template xo0<  256>(s,    24576+  256,                           24576+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512, 24576+    0, 63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template rep<  128>(s, l, 65280+    0,                           25088+    0,   128);
		API_polar::template gr <  128>(s, l, 65024+    0, 65024+  128, 25088+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template g0 <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                           25278+    0,     2);
		API_polar::template xo0<    2>(s,    25276+    2,                           25276+    0,     2);
		API_polar::template xo0<    4>(s,    25272+    4,                           25272+    0,     4);
		API_polar::template xo0<    8>(s,    25264+    8,                           25264+    0,     8);
		API_polar::template xo0<   16>(s,    25248+   16,                           25248+    0,    16);
		API_polar::template xo0<   32>(s,    25216+   32,                           25216+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 25216+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           25296+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 25296+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           25304+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 25304+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           25308+    0,     4);
		API_polar::template xo <    4>(s,    25304+    0, 25304+    4,              25304+    0,     4);
		API_polar::template xo <    8>(s,    25296+    0, 25296+    8,              25296+    0,     8);
		API_polar::template xo0<   16>(s,    25280+   16,                           25280+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 25280+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           25312+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 25312+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           25320+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 25320+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           25324+    0,     4);
		API_polar::template xo <    4>(s,    25320+    0, 25320+    4,              25320+    0,     4);
		API_polar::template xo <    8>(s,    25312+    0, 25312+    8,              25312+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 25312+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           25328+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 25328+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           25332+    0,     4);
		API_polar::template xo <    4>(s,    25328+    0, 25328+    4,              25328+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 25328+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           25336+    0,     8);
		API_polar::template xo <    8>(s,    25328+    0, 25328+    8,              25328+    0,     8);
		API_polar::template xo <   16>(s,    25312+    0, 25312+   16,              25312+    0,    16);
		API_polar::template xo <   32>(s,    25280+    0, 25280+   32,              25280+    0,    32);
		API_polar::template xo <   64>(s,    25216+    0, 25216+   64,              25216+    0,    64);
		API_polar::template xo <  128>(s,    25088+    0, 25088+  128,              25088+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 25088+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template g0 <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           25376+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 25376+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           25392+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 25392+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           25400+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 25400+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           25404+    0,     4);
		API_polar::template xo <    4>(s,    25400+    0, 25400+    4,              25400+    0,     4);
		API_polar::template xo <    8>(s,    25392+    0, 25392+    8,              25392+    0,     8);
		API_polar::template xo <   16>(s,    25376+    0, 25376+   16,              25376+    0,    16);
		API_polar::template xo0<   32>(s,    25344+   32,                           25344+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 25344+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           25408+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 25408+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           25424+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 25424+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           25432+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 25432+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           25436+    0,     4);
		API_polar::template xo <    4>(s,    25432+    0, 25432+    4,              25432+    0,     4);
		API_polar::template xo <    8>(s,    25424+    0, 25424+    8,              25424+    0,     8);
		API_polar::template xo <   16>(s,    25408+    0, 25408+   16,              25408+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 25408+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           25440+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 25440+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           25448+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 25448+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           25452+    0,     4);
		API_polar::template xo <    4>(s,    25448+    0, 25448+    4,              25448+    0,     4);
		API_polar::template xo <    8>(s,    25440+    0, 25440+    8,              25440+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 25440+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           25456+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 25456+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           25460+    0,     4);
		API_polar::template xo <    4>(s,    25456+    0, 25456+    4,              25456+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 25456+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           25464+    0,     8);
		API_polar::template xo <    8>(s,    25456+    0, 25456+    8,              25456+    0,     8);
		API_polar::template xo <   16>(s,    25440+    0, 25440+   16,              25440+    0,    16);
		API_polar::template xo <   32>(s,    25408+    0, 25408+   32,              25408+    0,    32);
		API_polar::template xo <   64>(s,    25344+    0, 25344+   64,              25344+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 25344+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           25472+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 25472+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           25488+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 25488+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           25496+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 25496+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           25500+    0,     4);
		API_polar::template xo <    4>(s,    25496+    0, 25496+    4,              25496+    0,     4);
		API_polar::template xo <    8>(s,    25488+    0, 25488+    8,              25488+    0,     8);
		API_polar::template xo <   16>(s,    25472+    0, 25472+   16,              25472+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 25472+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           25504+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 25504+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           25512+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 25512+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           25516+    0,     4);
		API_polar::template xo <    4>(s,    25512+    0, 25512+    4,              25512+    0,     4);
		API_polar::template xo <    8>(s,    25504+    0, 25504+    8,              25504+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 25504+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           25520+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 25520+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           25524+    0,     4);
		API_polar::template xo <    4>(s,    25520+    0, 25520+    4,              25520+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 25520+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                           25528+    0,     8);
		API_polar::template xo <    8>(s,    25520+    0, 25520+    8,              25520+    0,     8);
		API_polar::template xo <   16>(s,    25504+    0, 25504+   16,              25504+    0,    16);
		API_polar::template xo <   32>(s,    25472+    0, 25472+   32,              25472+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 25472+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           25540+    0,     4);
		API_polar::template xo0<    4>(s,    25536+    4,                           25536+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 25536+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           25544+    0,     8);
		API_polar::template xo <    8>(s,    25536+    0, 25536+    8,              25536+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 25536+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           25552+    0,    16);
		API_polar::template xo <   16>(s,    25536+    0, 25536+   16,              25536+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 25536+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           25568+    0,    32);
		API_polar::template xo <   32>(s,    25536+    0, 25536+   32,              25536+    0,    32);
		API_polar::template xo <   64>(s,    25472+    0, 25472+   64,              25472+    0,    64);
		API_polar::template xo <  128>(s,    25344+    0, 25344+  128,              25344+    0,   128);
		API_polar::template xo <  256>(s,    25088+    0, 25088+  256,              25088+    0,   256);
		API_polar::template xo <  512>(s,    24576+    0, 24576+  512,              24576+    0,   512);
		API_polar::template g  < 1024>(s, l, 61440+    0, 61440+ 1024, 24576+    0, 61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template g0 <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template g0 <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           25712+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 25712+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           25720+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 25720+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           25724+    0,     4);
		API_polar::template xo <    4>(s,    25720+    0, 25720+    4,              25720+    0,     4);
		API_polar::template xo <    8>(s,    25712+    0, 25712+    8,              25712+    0,     8);
		API_polar::template xo0<   16>(s,    25696+   16,                           25696+    0,    16);
		API_polar::template xo0<   32>(s,    25664+   32,                           25664+    0,    32);
		API_polar::template xo0<   64>(s,    25600+   64,                           25600+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 25600+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template g0 <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           25760+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 25760+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           25776+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 25776+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           25784+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 25784+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           25788+    0,     4);
		API_polar::template xo <    4>(s,    25784+    0, 25784+    4,              25784+    0,     4);
		API_polar::template xo <    8>(s,    25776+    0, 25776+    8,              25776+    0,     8);
		API_polar::template xo <   16>(s,    25760+    0, 25760+   16,              25760+    0,    16);
		API_polar::template xo0<   32>(s,    25728+   32,                           25728+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 25728+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           25792+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 25792+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           25808+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 25808+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           25816+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 25816+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           25820+    0,     4);
		API_polar::template xo <    4>(s,    25816+    0, 25816+    4,              25816+    0,     4);
		API_polar::template xo <    8>(s,    25808+    0, 25808+    8,              25808+    0,     8);
		API_polar::template xo <   16>(s,    25792+    0, 25792+   16,              25792+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 25792+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           25824+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 25824+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           25832+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 25832+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           25836+    0,     4);
		API_polar::template xo <    4>(s,    25832+    0, 25832+    4,              25832+    0,     4);
		API_polar::template xo <    8>(s,    25824+    0, 25824+    8,              25824+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 25824+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           25840+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 25840+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           25844+    0,     4);
		API_polar::template xo <    4>(s,    25840+    0, 25840+    4,              25840+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 25840+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           25848+    0,     8);
		API_polar::template xo <    8>(s,    25840+    0, 25840+    8,              25840+    0,     8);
		API_polar::template xo <   16>(s,    25824+    0, 25824+   16,              25824+    0,    16);
		API_polar::template xo <   32>(s,    25792+    0, 25792+   32,              25792+    0,    32);
		API_polar::template xo <   64>(s,    25728+    0, 25728+   64,              25728+    0,    64);
		API_polar::template xo <  128>(s,    25600+    0, 25600+  128,              25600+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 25600+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                           25856+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32, 25856+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           25888+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 25888+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           25904+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 25904+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           25912+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 25912+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           25916+    0,     4);
		API_polar::template xo <    4>(s,    25912+    0, 25912+    4,              25912+    0,     4);
		API_polar::template xo <    8>(s,    25904+    0, 25904+    8,              25904+    0,     8);
		API_polar::template xo <   16>(s,    25888+    0, 25888+   16,              25888+    0,    16);
		API_polar::template xo <   32>(s,    25856+    0, 25856+   32,              25856+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 25856+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           25920+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 25920+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           25936+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 25936+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           25944+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 25944+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           25948+    0,     4);
		API_polar::template xo <    4>(s,    25944+    0, 25944+    4,              25944+    0,     4);
		API_polar::template xo <    8>(s,    25936+    0, 25936+    8,              25936+    0,     8);
		API_polar::template xo <   16>(s,    25920+    0, 25920+   16,              25920+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 25920+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           25956+    0,     4);
		API_polar::template xo0<    4>(s,    25952+    4,                           25952+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 25952+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           25960+    0,     8);
		API_polar::template xo <    8>(s,    25952+    0, 25952+    8,              25952+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 25952+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           25968+    0,    16);
		API_polar::template xo <   16>(s,    25952+    0, 25952+   16,              25952+    0,    16);
		API_polar::template xo <   32>(s,    25920+    0, 25920+   32,              25920+    0,    32);
		API_polar::template xo <   64>(s,    25856+    0, 25856+   64,              25856+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 25856+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           25996+    0,     4);
		API_polar::template xo0<    4>(s,    25992+    4,                           25992+    0,     4);
		API_polar::template xo0<    8>(s,    25984+    8,                           25984+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 25984+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           26000+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 26000+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           26004+    0,     4);
		API_polar::template xo <    4>(s,    26000+    0, 26000+    4,              26000+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 26000+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           26008+    0,     8);
		API_polar::template xo <    8>(s,    26000+    0, 26000+    8,              26000+    0,     8);
		API_polar::template xo <   16>(s,    25984+    0, 25984+   16,              25984+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 25984+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           26016+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 26016+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           26020+    0,     4);
		API_polar::template xo <    4>(s,    26016+    0, 26016+    4,              26016+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 26016+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           26024+    0,     8);
		API_polar::template xo <    8>(s,    26016+    0, 26016+    8,              26016+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 26016+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           26032+    0,    16);
		API_polar::template xo <   16>(s,    26016+    0, 26016+   16,              26016+    0,    16);
		API_polar::template xo <   32>(s,    25984+    0, 25984+   32,              25984+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 25984+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           26048+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 26048+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           26052+    0,     4);
		API_polar::template xo <    4>(s,    26048+    0, 26048+    4,              26048+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 26048+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           26056+    0,     8);
		API_polar::template xo <    8>(s,    26048+    0, 26048+    8,              26048+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 26048+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           26064+    0,    16);
		API_polar::template xo <   16>(s,    26048+    0, 26048+   16,              26048+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 26048+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           26080+    0,    32);
		API_polar::template xo <   32>(s,    26048+    0, 26048+   32,              26048+    0,    32);
		API_polar::template xo <   64>(s,    25984+    0, 25984+   64,              25984+    0,    64);
		API_polar::template xo <  128>(s,    25856+    0, 25856+  128,              25856+    0,   128);
		API_polar::template xo <  256>(s,    25600+    0, 25600+  256,              25600+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512, 25600+    0, 63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                           26112+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32, 26112+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           26144+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 26144+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           26164+    0,     4);
		API_polar::template xo0<    4>(s,    26160+    4,                           26160+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 26160+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           26168+    0,     8);
		API_polar::template xo <    8>(s,    26160+    0, 26160+    8,              26160+    0,     8);
		API_polar::template xo <   16>(s,    26144+    0, 26144+   16,              26144+    0,    16);
		API_polar::template xo <   32>(s,    26112+    0, 26112+   32,              26112+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 26112+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           26176+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 26176+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           26184+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 26184+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           26188+    0,     4);
		API_polar::template xo <    4>(s,    26184+    0, 26184+    4,              26184+    0,     4);
		API_polar::template xo <    8>(s,    26176+    0, 26176+    8,              26176+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 26176+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           26192+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 26192+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           26196+    0,     4);
		API_polar::template xo <    4>(s,    26192+    0, 26192+    4,              26192+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 26192+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           26200+    0,     8);
		API_polar::template xo <    8>(s,    26192+    0, 26192+    8,              26192+    0,     8);
		API_polar::template xo <   16>(s,    26176+    0, 26176+   16,              26176+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 26176+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           26208+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 26208+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           26212+    0,     4);
		API_polar::template xo <    4>(s,    26208+    0, 26208+    4,              26208+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 26208+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           26216+    0,     8);
		API_polar::template xo <    8>(s,    26208+    0, 26208+    8,              26208+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 26208+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           26224+    0,    16);
		API_polar::template xo <   16>(s,    26208+    0, 26208+   16,              26208+    0,    16);
		API_polar::template xo <   32>(s,    26176+    0, 26176+   32,              26176+    0,    32);
		API_polar::template xo <   64>(s,    26112+    0, 26112+   64,              26112+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 26112+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           26240+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 26240+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           26248+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 26248+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           26252+    0,     4);
		API_polar::template xo <    4>(s,    26248+    0, 26248+    4,              26248+    0,     4);
		API_polar::template xo <    8>(s,    26240+    0, 26240+    8,              26240+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 26240+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           26256+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 26256+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           26260+    0,     4);
		API_polar::template xo <    4>(s,    26256+    0, 26256+    4,              26256+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 26256+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           26264+    0,     8);
		API_polar::template xo <    8>(s,    26256+    0, 26256+    8,              26256+    0,     8);
		API_polar::template xo <   16>(s,    26240+    0, 26240+   16,              26240+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 26240+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           26272+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 26272+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           26276+    0,     4);
		API_polar::template xo <    4>(s,    26272+    0, 26272+    4,              26272+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 26272+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           26280+    0,     8);
		API_polar::template xo <    8>(s,    26272+    0, 26272+    8,              26272+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 26272+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           26288+    0,    16);
		API_polar::template xo <   16>(s,    26272+    0, 26272+   16,              26272+    0,    16);
		API_polar::template xo <   32>(s,    26240+    0, 26240+   32,              26240+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 26240+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           26304+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 26304+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           26308+    0,     4);
		API_polar::template xo <    4>(s,    26304+    0, 26304+    4,              26304+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 26304+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           26312+    0,     8);
		API_polar::template xo <    8>(s,    26304+    0, 26304+    8,              26304+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 26304+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           26320+    0,    16);
		API_polar::template xo <   16>(s,    26304+    0, 26304+   16,              26304+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 26304+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           26336+    0,    32);
		API_polar::template xo <   32>(s,    26304+    0, 26304+   32,              26304+    0,    32);
		API_polar::template xo <   64>(s,    26240+    0, 26240+   64,              26240+    0,    64);
		API_polar::template xo <  128>(s,    26112+    0, 26112+  128,              26112+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 26112+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           26368+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 26368+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           26376+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 26376+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           26380+    0,     4);
		API_polar::template xo <    4>(s,    26376+    0, 26376+    4,              26376+    0,     4);
		API_polar::template xo <    8>(s,    26368+    0, 26368+    8,              26368+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 26368+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           26384+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 26384+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           26388+    0,     4);
		API_polar::template xo <    4>(s,    26384+    0, 26384+    4,              26384+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 26384+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           26392+    0,     8);
		API_polar::template xo <    8>(s,    26384+    0, 26384+    8,              26384+    0,     8);
		API_polar::template xo <   16>(s,    26368+    0, 26368+   16,              26368+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 26368+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           26400+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 26400+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           26404+    0,     4);
		API_polar::template xo <    4>(s,    26400+    0, 26400+    4,              26400+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 26400+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           26408+    0,     8);
		API_polar::template xo <    8>(s,    26400+    0, 26400+    8,              26400+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 26400+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           26416+    0,    16);
		API_polar::template xo <   16>(s,    26400+    0, 26400+   16,              26400+    0,    16);
		API_polar::template xo <   32>(s,    26368+    0, 26368+   32,              26368+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 26368+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           26432+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 26432+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           26436+    0,     4);
		API_polar::template xo <    4>(s,    26432+    0, 26432+    4,              26432+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 26432+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           26440+    0,     8);
		API_polar::template xo <    8>(s,    26432+    0, 26432+    8,              26432+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 26432+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           26448+    0,    16);
		API_polar::template xo <   16>(s,    26432+    0, 26432+   16,              26432+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 26432+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           26464+    0,    32);
		API_polar::template xo <   32>(s,    26432+    0, 26432+   32,              26432+    0,    32);
		API_polar::template xo <   64>(s,    26368+    0, 26368+   64,              26368+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 26368+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           26496+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 26496+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           26500+    0,     4);
		API_polar::template xo <    4>(s,    26496+    0, 26496+    4,              26496+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 26496+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           26504+    0,     8);
		API_polar::template xo <    8>(s,    26496+    0, 26496+    8,              26496+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 26496+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           26512+    0,    16);
		API_polar::template xo <   16>(s,    26496+    0, 26496+   16,              26496+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 26496+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           26528+    0,    32);
		API_polar::template xo <   32>(s,    26496+    0, 26496+   32,              26496+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 26496+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           26560+    0,    64);
		API_polar::template xo <   64>(s,    26496+    0, 26496+   64,              26496+    0,    64);
		API_polar::template xo <  128>(s,    26368+    0, 26368+  128,              26368+    0,   128);
		API_polar::template xo <  256>(s,    26112+    0, 26112+  256,              26112+    0,   256);
		API_polar::template xo <  512>(s,    25600+    0, 25600+  512,              25600+    0,   512);
		API_polar::template xo < 1024>(s,    24576+    0, 24576+ 1024,              24576+    0,  1024);
		API_polar::template g  < 2048>(s, l, 57344+    0, 57344+ 2048, 24576+    0, 57344+ 4096,  2048);
		API_polar::template f  < 1024>(   l, 61440+    0, 61440+ 1024,              61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template g0 <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                           26688+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32, 26688+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           26720+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 26720+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           26736+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 26736+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           26744+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 26744+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           26748+    0,     4);
		API_polar::template xo <    4>(s,    26744+    0, 26744+    4,              26744+    0,     4);
		API_polar::template xo <    8>(s,    26736+    0, 26736+    8,              26736+    0,     8);
		API_polar::template xo <   16>(s,    26720+    0, 26720+   16,              26720+    0,    16);
		API_polar::template xo <   32>(s,    26688+    0, 26688+   32,              26688+    0,    32);
		API_polar::template xo0<   64>(s,    26624+   64,                           26624+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 26624+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                           26752+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32, 26752+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           26784+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 26784+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           26800+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 26800+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           26808+    0,     8);
		API_polar::template xo <    8>(s,    26800+    0, 26800+    8,              26800+    0,     8);
		API_polar::template xo <   16>(s,    26784+    0, 26784+   16,              26784+    0,    16);
		API_polar::template xo <   32>(s,    26752+    0, 26752+   32,              26752+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 26752+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           26828+    0,     4);
		API_polar::template xo0<    4>(s,    26824+    4,                           26824+    0,     4);
		API_polar::template xo0<    8>(s,    26816+    8,                           26816+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 26816+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           26832+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 26832+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           26836+    0,     4);
		API_polar::template xo <    4>(s,    26832+    0, 26832+    4,              26832+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 26832+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           26840+    0,     8);
		API_polar::template xo <    8>(s,    26832+    0, 26832+    8,              26832+    0,     8);
		API_polar::template xo <   16>(s,    26816+    0, 26816+   16,              26816+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 26816+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           26848+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 26848+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           26852+    0,     4);
		API_polar::template xo <    4>(s,    26848+    0, 26848+    4,              26848+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 26848+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           26856+    0,     8);
		API_polar::template xo <    8>(s,    26848+    0, 26848+    8,              26848+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 26848+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           26864+    0,    16);
		API_polar::template xo <   16>(s,    26848+    0, 26848+   16,              26848+    0,    16);
		API_polar::template xo <   32>(s,    26816+    0, 26816+   32,              26816+    0,    32);
		API_polar::template xo <   64>(s,    26752+    0, 26752+   64,              26752+    0,    64);
		API_polar::template xo <  128>(s,    26624+    0, 26624+  128,              26624+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 26624+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           26908+    0,     4);
		API_polar::template xo0<    4>(s,    26904+    4,                           26904+    0,     4);
		API_polar::template xo0<    8>(s,    26896+    8,                           26896+    0,     8);
		API_polar::template xo0<   16>(s,    26880+   16,                           26880+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 26880+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           26912+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 26912+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           26920+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 26920+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           26924+    0,     4);
		API_polar::template xo <    4>(s,    26920+    0, 26920+    4,              26920+    0,     4);
		API_polar::template xo <    8>(s,    26912+    0, 26912+    8,              26912+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 26912+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           26928+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 26928+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           26932+    0,     4);
		API_polar::template xo <    4>(s,    26928+    0, 26928+    4,              26928+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 26928+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           26936+    0,     8);
		API_polar::template xo <    8>(s,    26928+    0, 26928+    8,              26928+    0,     8);
		API_polar::template xo <   16>(s,    26912+    0, 26912+   16,              26912+    0,    16);
		API_polar::template xo <   32>(s,    26880+    0, 26880+   32,              26880+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 26880+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           26944+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 26944+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           26952+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 26952+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           26956+    0,     4);
		API_polar::template xo <    4>(s,    26952+    0, 26952+    4,              26952+    0,     4);
		API_polar::template xo <    8>(s,    26944+    0, 26944+    8,              26944+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 26944+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           26960+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 26960+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           26964+    0,     4);
		API_polar::template xo <    4>(s,    26960+    0, 26960+    4,              26960+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 26960+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           26968+    0,     8);
		API_polar::template xo <    8>(s,    26960+    0, 26960+    8,              26960+    0,     8);
		API_polar::template xo <   16>(s,    26944+    0, 26944+   16,              26944+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 26944+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           26976+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 26976+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           26980+    0,     4);
		API_polar::template xo <    4>(s,    26976+    0, 26976+    4,              26976+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 26976+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           26984+    0,     8);
		API_polar::template xo <    8>(s,    26976+    0, 26976+    8,              26976+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 26976+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           26992+    0,    16);
		API_polar::template xo <   16>(s,    26976+    0, 26976+   16,              26976+    0,    16);
		API_polar::template xo <   32>(s,    26944+    0, 26944+   32,              26944+    0,    32);
		API_polar::template xo <   64>(s,    26880+    0, 26880+   64,              26880+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 26880+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           27008+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 27008+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           27016+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 27016+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           27020+    0,     4);
		API_polar::template xo <    4>(s,    27016+    0, 27016+    4,              27016+    0,     4);
		API_polar::template xo <    8>(s,    27008+    0, 27008+    8,              27008+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 27008+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           27024+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 27024+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           27028+    0,     4);
		API_polar::template xo <    4>(s,    27024+    0, 27024+    4,              27024+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 27024+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           27032+    0,     8);
		API_polar::template xo <    8>(s,    27024+    0, 27024+    8,              27024+    0,     8);
		API_polar::template xo <   16>(s,    27008+    0, 27008+   16,              27008+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 27008+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           27040+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 27040+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           27044+    0,     4);
		API_polar::template xo <    4>(s,    27040+    0, 27040+    4,              27040+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 27040+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           27048+    0,     8);
		API_polar::template xo <    8>(s,    27040+    0, 27040+    8,              27040+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 27040+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           27056+    0,    16);
		API_polar::template xo <   16>(s,    27040+    0, 27040+   16,              27040+    0,    16);
		API_polar::template xo <   32>(s,    27008+    0, 27008+   32,              27008+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 27008+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           27072+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 27072+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           27076+    0,     4);
		API_polar::template xo <    4>(s,    27072+    0, 27072+    4,              27072+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 27072+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           27080+    0,     8);
		API_polar::template xo <    8>(s,    27072+    0, 27072+    8,              27072+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 27072+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           27088+    0,    16);
		API_polar::template xo <   16>(s,    27072+    0, 27072+   16,              27072+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 27072+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           27104+    0,    32);
		API_polar::template xo <   32>(s,    27072+    0, 27072+   32,              27072+    0,    32);
		API_polar::template xo <   64>(s,    27008+    0, 27008+   64,              27008+    0,    64);
		API_polar::template xo <  128>(s,    26880+    0, 26880+  128,              26880+    0,   128);
		API_polar::template xo <  256>(s,    26624+    0, 26624+  256,              26624+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512, 26624+    0, 63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           27152+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 27152+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           27160+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 27160+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           27164+    0,     4);
		API_polar::template xo <    4>(s,    27160+    0, 27160+    4,              27160+    0,     4);
		API_polar::template xo <    8>(s,    27152+    0, 27152+    8,              27152+    0,     8);
		API_polar::template xo0<   16>(s,    27136+   16,                           27136+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 27136+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           27168+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 27168+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           27176+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 27176+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           27180+    0,     4);
		API_polar::template xo <    4>(s,    27176+    0, 27176+    4,              27176+    0,     4);
		API_polar::template xo <    8>(s,    27168+    0, 27168+    8,              27168+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 27168+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           27184+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 27184+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           27188+    0,     4);
		API_polar::template xo <    4>(s,    27184+    0, 27184+    4,              27184+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 27184+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           27192+    0,     8);
		API_polar::template xo <    8>(s,    27184+    0, 27184+    8,              27184+    0,     8);
		API_polar::template xo <   16>(s,    27168+    0, 27168+   16,              27168+    0,    16);
		API_polar::template xo <   32>(s,    27136+    0, 27136+   32,              27136+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 27136+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           27200+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 27200+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           27208+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 27208+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           27212+    0,     4);
		API_polar::template xo <    4>(s,    27208+    0, 27208+    4,              27208+    0,     4);
		API_polar::template xo <    8>(s,    27200+    0, 27200+    8,              27200+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 27200+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           27216+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 27216+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           27220+    0,     4);
		API_polar::template xo <    4>(s,    27216+    0, 27216+    4,              27216+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 27216+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           27224+    0,     8);
		API_polar::template xo <    8>(s,    27216+    0, 27216+    8,              27216+    0,     8);
		API_polar::template xo <   16>(s,    27200+    0, 27200+   16,              27200+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 27200+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           27232+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 27232+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           27236+    0,     4);
		API_polar::template xo <    4>(s,    27232+    0, 27232+    4,              27232+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 27232+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           27240+    0,     8);
		API_polar::template xo <    8>(s,    27232+    0, 27232+    8,              27232+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 27232+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           27248+    0,    16);
		API_polar::template xo <   16>(s,    27232+    0, 27232+   16,              27232+    0,    16);
		API_polar::template xo <   32>(s,    27200+    0, 27200+   32,              27200+    0,    32);
		API_polar::template xo <   64>(s,    27136+    0, 27136+   64,              27136+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 27136+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           27264+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 27264+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           27272+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 27272+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           27276+    0,     4);
		API_polar::template xo <    4>(s,    27272+    0, 27272+    4,              27272+    0,     4);
		API_polar::template xo <    8>(s,    27264+    0, 27264+    8,              27264+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 27264+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           27280+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 27280+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           27284+    0,     4);
		API_polar::template xo <    4>(s,    27280+    0, 27280+    4,              27280+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 27280+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           27288+    0,     8);
		API_polar::template xo <    8>(s,    27280+    0, 27280+    8,              27280+    0,     8);
		API_polar::template xo <   16>(s,    27264+    0, 27264+   16,              27264+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 27264+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           27296+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 27296+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           27300+    0,     4);
		API_polar::template xo <    4>(s,    27296+    0, 27296+    4,              27296+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 27296+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           27304+    0,     8);
		API_polar::template xo <    8>(s,    27296+    0, 27296+    8,              27296+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 27296+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           27312+    0,    16);
		API_polar::template xo <   16>(s,    27296+    0, 27296+   16,              27296+    0,    16);
		API_polar::template xo <   32>(s,    27264+    0, 27264+   32,              27264+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 27264+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           27328+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 27328+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           27332+    0,     4);
		API_polar::template xo <    4>(s,    27328+    0, 27328+    4,              27328+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 27328+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           27336+    0,     8);
		API_polar::template xo <    8>(s,    27328+    0, 27328+    8,              27328+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 27328+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           27344+    0,    16);
		API_polar::template xo <   16>(s,    27328+    0, 27328+   16,              27328+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 27328+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           27360+    0,    32);
		API_polar::template xo <   32>(s,    27328+    0, 27328+   32,              27328+    0,    32);
		API_polar::template xo <   64>(s,    27264+    0, 27264+   64,              27264+    0,    64);
		API_polar::template xo <  128>(s,    27136+    0, 27136+  128,              27136+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 27136+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           27392+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 27392+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           27400+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 27400+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           27404+    0,     4);
		API_polar::template xo <    4>(s,    27400+    0, 27400+    4,              27400+    0,     4);
		API_polar::template xo <    8>(s,    27392+    0, 27392+    8,              27392+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 27392+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           27408+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 27408+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           27412+    0,     4);
		API_polar::template xo <    4>(s,    27408+    0, 27408+    4,              27408+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 27408+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           27416+    0,     8);
		API_polar::template xo <    8>(s,    27408+    0, 27408+    8,              27408+    0,     8);
		API_polar::template xo <   16>(s,    27392+    0, 27392+   16,              27392+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 27392+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           27424+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 27424+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           27428+    0,     4);
		API_polar::template xo <    4>(s,    27424+    0, 27424+    4,              27424+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 27424+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                           27432+    0,     8);
		API_polar::template xo <    8>(s,    27424+    0, 27424+    8,              27424+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 27424+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                           27440+    0,    16);
		API_polar::template xo <   16>(s,    27424+    0, 27424+   16,              27424+    0,    16);
		API_polar::template xo <   32>(s,    27392+    0, 27392+   32,              27392+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 27392+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           27456+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 27456+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           27460+    0,     4);
		API_polar::template xo <    4>(s,    27456+    0, 27456+    4,              27456+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 27456+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                           27464+    0,     8);
		API_polar::template xo <    8>(s,    27456+    0, 27456+    8,              27456+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 27456+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                           27472+    0,    16);
		API_polar::template xo <   16>(s,    27456+    0, 27456+   16,              27456+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 27456+    0, 65408+   64,    32);
		API_polar::template h  <   32>(s, l, 65472+    0,                           27488+    0,    32);
		API_polar::template xo <   32>(s,    27456+    0, 27456+   32,              27456+    0,    32);
		API_polar::template xo <   64>(s,    27392+    0, 27392+   64,              27392+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 27392+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                           27522+    0,     2);
		API_polar::template xo0<    2>(s,    27520+    2,                           27520+    0,     2);
		API_polar::template g  <    4>(s, l, 65520+    0, 65520+    4, 27520+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           27524+    0,     4);
		API_polar::template xo <    4>(s,    27520+    0, 27520+    4,              27520+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 27520+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                           27528+    0,     8);
		API_polar::template xo <    8>(s,    27520+    0, 27520+    8,              27520+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 27520+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                           27536+    0,    16);
		API_polar::template xo <   16>(s,    27520+    0, 27520+   16,              27520+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 27520+    0, 65408+   64,    32);
		API_polar::template h  <   32>(s, l, 65472+    0,                           27552+    0,    32);
		API_polar::template xo <   32>(s,    27520+    0, 27520+   32,              27520+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 27520+    0, 65280+  128,    64);
		API_polar::template h  <   64>(s, l, 65408+    0,                           27584+    0,    64);
		API_polar::template xo <   64>(s,    27520+    0, 27520+   64,              27520+    0,    64);
		API_polar::template xo <  128>(s,    27392+    0, 27392+  128,              27392+    0,   128);
		API_polar::template xo <  256>(s,    27136+    0, 27136+  256,              27136+    0,   256);
		API_polar::template xo <  512>(s,    26624+    0, 26624+  512,              26624+    0,   512);
		API_polar::template g  < 1024>(s, l, 61440+    0, 61440+ 1024, 26624+    0, 61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           27648+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 27648+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           27664+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 27664+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           27672+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 27672+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           27676+    0,     4);
		API_polar::template xo <    4>(s,    27672+    0, 27672+    4,              27672+    0,     4);
		API_polar::template xo <    8>(s,    27664+    0, 27664+    8,              27664+    0,     8);
		API_polar::template xo <   16>(s,    27648+    0, 27648+   16,              27648+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 27648+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           27680+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 27680+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           27688+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 27688+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           27692+    0,     4);
		API_polar::template xo <    4>(s,    27688+    0, 27688+    4,              27688+    0,     4);
		API_polar::template xo <    8>(s,    27680+    0, 27680+    8,              27680+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 27680+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           27696+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 27696+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           27700+    0,     4);
		API_polar::template xo <    4>(s,    27696+    0, 27696+    4,              27696+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 27696+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           27704+    0,     8);
		API_polar::template xo <    8>(s,    27696+    0, 27696+    8,              27696+    0,     8);
		API_polar::template xo <   16>(s,    27680+    0, 27680+   16,              27680+    0,    16);
		API_polar::template xo <   32>(s,    27648+    0, 27648+   32,              27648+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 27648+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           27712+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 27712+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           27720+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 27720+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           27724+    0,     4);
		API_polar::template xo <    4>(s,    27720+    0, 27720+    4,              27720+    0,     4);
		API_polar::template xo <    8>(s,    27712+    0, 27712+    8,              27712+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 27712+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           27728+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 27728+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           27732+    0,     4);
		API_polar::template xo <    4>(s,    27728+    0, 27728+    4,              27728+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 27728+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           27736+    0,     8);
		API_polar::template xo <    8>(s,    27728+    0, 27728+    8,              27728+    0,     8);
		API_polar::template xo <   16>(s,    27712+    0, 27712+   16,              27712+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 27712+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           27744+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 27744+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           27748+    0,     4);
		API_polar::template xo <    4>(s,    27744+    0, 27744+    4,              27744+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 27744+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           27752+    0,     8);
		API_polar::template xo <    8>(s,    27744+    0, 27744+    8,              27744+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 27744+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           27760+    0,    16);
		API_polar::template xo <   16>(s,    27744+    0, 27744+   16,              27744+    0,    16);
		API_polar::template xo <   32>(s,    27712+    0, 27712+   32,              27712+    0,    32);
		API_polar::template xo <   64>(s,    27648+    0, 27648+   64,              27648+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 27648+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           27776+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 27776+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           27784+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 27784+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           27788+    0,     4);
		API_polar::template xo <    4>(s,    27784+    0, 27784+    4,              27784+    0,     4);
		API_polar::template xo <    8>(s,    27776+    0, 27776+    8,              27776+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 27776+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           27792+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 27792+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           27796+    0,     4);
		API_polar::template xo <    4>(s,    27792+    0, 27792+    4,              27792+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 27792+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           27800+    0,     8);
		API_polar::template xo <    8>(s,    27792+    0, 27792+    8,              27792+    0,     8);
		API_polar::template xo <   16>(s,    27776+    0, 27776+   16,              27776+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 27776+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           27808+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 27808+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           27812+    0,     4);
		API_polar::template xo <    4>(s,    27808+    0, 27808+    4,              27808+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 27808+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                           27816+    0,     8);
		API_polar::template xo <    8>(s,    27808+    0, 27808+    8,              27808+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 27808+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                           27824+    0,    16);
		API_polar::template xo <   16>(s,    27808+    0, 27808+   16,              27808+    0,    16);
		API_polar::template xo <   32>(s,    27776+    0, 27776+   32,              27776+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 27776+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           27840+    0,    64);
		API_polar::template xo <   64>(s,    27776+    0, 27776+   64,              27776+    0,    64);
		API_polar::template xo <  128>(s,    27648+    0, 27648+  128,              27648+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 27648+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                           27910+    0,     2);
		API_polar::template xo0<    2>(s,    27908+    2,                           27908+    0,     2);
		API_polar::template xo0<    4>(s,    27904+    4,                           27904+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 27904+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           27912+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 27912+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           27916+    0,     4);
		API_polar::template xo <    4>(s,    27912+    0, 27912+    4,              27912+    0,     4);
		API_polar::template xo <    8>(s,    27904+    0, 27904+    8,              27904+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 27904+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           27920+    0,    16);
		API_polar::template xo <   16>(s,    27904+    0, 27904+   16,              27904+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 27904+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           27936+    0,    32);
		API_polar::template xo <   32>(s,    27904+    0, 27904+   32,              27904+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 27904+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           27968+    0,    64);
		API_polar::template xo <   64>(s,    27904+    0, 27904+   64,              27904+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 27904+    0, 65024+  256,   128);
		API_polar::template spc<  128>(s, l, 65280+    0,                           28032+    0,   128);
		API_polar::template xo <  128>(s,    27904+    0, 27904+  128,              27904+    0,   128);
		API_polar::template xo <  256>(s,    27648+    0, 27648+  256,              27648+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512, 27648+    0, 63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           28164+    0,     4);
		API_polar::template xo0<    4>(s,    28160+    4,                           28160+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 28160+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           28168+    0,     8);
		API_polar::template xo <    8>(s,    28160+    0, 28160+    8,              28160+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 28160+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           28176+    0,    16);
		API_polar::template xo <   16>(s,    28160+    0, 28160+   16,              28160+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 28160+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           28192+    0,    32);
		API_polar::template xo <   32>(s,    28160+    0, 28160+   32,              28160+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 28160+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           28224+    0,    64);
		API_polar::template xo <   64>(s,    28160+    0, 28160+   64,              28160+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 28160+    0, 65024+  256,   128);
		API_polar::template spc<  128>(s, l, 65280+    0,                           28288+    0,   128);
		API_polar::template xo <  128>(s,    28160+    0, 28160+  128,              28160+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 28160+    0, 64512+  512,   256);
		API_polar::template spc<  256>(s, l, 65024+    0,                           28416+    0,   256);
		API_polar::template xo <  256>(s,    28160+    0, 28160+  256,              28160+    0,   256);
		API_polar::template xo <  512>(s,    27648+    0, 27648+  512,              27648+    0,   512);
		API_polar::template xo < 1024>(s,    26624+    0, 26624+ 1024,              26624+    0,  1024);
		API_polar::template xo < 2048>(s,    24576+    0, 24576+ 2048,              24576+    0,  2048);
		API_polar::template g  < 4096>(s, l, 49152+    0, 49152+ 4096, 24576+    0, 49152+ 8192,  4096);
		API_polar::template f  < 2048>(   l, 57344+    0, 57344+ 2048,              57344+ 4096,  2048);
		API_polar::template f  < 1024>(   l, 61440+    0, 61440+ 1024,              61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template rep<   64>(s, l, 65408+    0,                           28672+    0,    64);
		API_polar::template gr <   64>(s, l, 65280+    0, 65280+   64, 28672+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                           28736+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32, 28736+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           28776+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 28776+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           28780+    0,     4);
		API_polar::template xo <    4>(s,    28776+    0, 28776+    4,              28776+    0,     4);
		API_polar::template xo0<    8>(s,    28768+    8,                           28768+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 28768+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           28784+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 28784+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           28788+    0,     4);
		API_polar::template xo <    4>(s,    28784+    0, 28784+    4,              28784+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 28784+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           28792+    0,     8);
		API_polar::template xo <    8>(s,    28784+    0, 28784+    8,              28784+    0,     8);
		API_polar::template xo <   16>(s,    28768+    0, 28768+   16,              28768+    0,    16);
		API_polar::template xo <   32>(s,    28736+    0, 28736+   32,              28736+    0,    32);
		API_polar::template xo <   64>(s,    28672+    0, 28672+   64,              28672+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 28672+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           28816+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 28816+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           28824+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 28824+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           28828+    0,     4);
		API_polar::template xo <    4>(s,    28824+    0, 28824+    4,              28824+    0,     4);
		API_polar::template xo <    8>(s,    28816+    0, 28816+    8,              28816+    0,     8);
		API_polar::template xo0<   16>(s,    28800+   16,                           28800+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 28800+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           28832+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 28832+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           28840+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 28840+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           28844+    0,     4);
		API_polar::template xo <    4>(s,    28840+    0, 28840+    4,              28840+    0,     4);
		API_polar::template xo <    8>(s,    28832+    0, 28832+    8,              28832+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 28832+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           28848+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 28848+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           28852+    0,     4);
		API_polar::template xo <    4>(s,    28848+    0, 28848+    4,              28848+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 28848+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           28856+    0,     8);
		API_polar::template xo <    8>(s,    28848+    0, 28848+    8,              28848+    0,     8);
		API_polar::template xo <   16>(s,    28832+    0, 28832+   16,              28832+    0,    16);
		API_polar::template xo <   32>(s,    28800+    0, 28800+   32,              28800+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 28800+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           28864+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 28864+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           28872+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 28872+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           28876+    0,     4);
		API_polar::template xo <    4>(s,    28872+    0, 28872+    4,              28872+    0,     4);
		API_polar::template xo <    8>(s,    28864+    0, 28864+    8,              28864+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 28864+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           28880+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 28880+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           28884+    0,     4);
		API_polar::template xo <    4>(s,    28880+    0, 28880+    4,              28880+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 28880+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           28888+    0,     8);
		API_polar::template xo <    8>(s,    28880+    0, 28880+    8,              28880+    0,     8);
		API_polar::template xo <   16>(s,    28864+    0, 28864+   16,              28864+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 28864+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           28896+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 28896+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           28900+    0,     4);
		API_polar::template xo <    4>(s,    28896+    0, 28896+    4,              28896+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 28896+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           28904+    0,     8);
		API_polar::template xo <    8>(s,    28896+    0, 28896+    8,              28896+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 28896+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           28912+    0,    16);
		API_polar::template xo <   16>(s,    28896+    0, 28896+   16,              28896+    0,    16);
		API_polar::template xo <   32>(s,    28864+    0, 28864+   32,              28864+    0,    32);
		API_polar::template xo <   64>(s,    28800+    0, 28800+   64,              28800+    0,    64);
		API_polar::template xo <  128>(s,    28672+    0, 28672+  128,              28672+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 28672+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           28928+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 28928+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           28944+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 28944+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           28952+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 28952+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           28956+    0,     4);
		API_polar::template xo <    4>(s,    28952+    0, 28952+    4,              28952+    0,     4);
		API_polar::template xo <    8>(s,    28944+    0, 28944+    8,              28944+    0,     8);
		API_polar::template xo <   16>(s,    28928+    0, 28928+   16,              28928+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 28928+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           28960+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 28960+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           28968+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 28968+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           28972+    0,     4);
		API_polar::template xo <    4>(s,    28968+    0, 28968+    4,              28968+    0,     4);
		API_polar::template xo <    8>(s,    28960+    0, 28960+    8,              28960+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 28960+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           28976+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 28976+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           28980+    0,     4);
		API_polar::template xo <    4>(s,    28976+    0, 28976+    4,              28976+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 28976+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           28984+    0,     8);
		API_polar::template xo <    8>(s,    28976+    0, 28976+    8,              28976+    0,     8);
		API_polar::template xo <   16>(s,    28960+    0, 28960+   16,              28960+    0,    16);
		API_polar::template xo <   32>(s,    28928+    0, 28928+   32,              28928+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 28928+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           28992+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 28992+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           29000+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 29000+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           29004+    0,     4);
		API_polar::template xo <    4>(s,    29000+    0, 29000+    4,              29000+    0,     4);
		API_polar::template xo <    8>(s,    28992+    0, 28992+    8,              28992+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 28992+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           29008+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 29008+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           29012+    0,     4);
		API_polar::template xo <    4>(s,    29008+    0, 29008+    4,              29008+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 29008+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           29016+    0,     8);
		API_polar::template xo <    8>(s,    29008+    0, 29008+    8,              29008+    0,     8);
		API_polar::template xo <   16>(s,    28992+    0, 28992+   16,              28992+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 28992+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           29024+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 29024+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           29028+    0,     4);
		API_polar::template xo <    4>(s,    29024+    0, 29024+    4,              29024+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 29024+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           29032+    0,     8);
		API_polar::template xo <    8>(s,    29024+    0, 29024+    8,              29024+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 29024+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           29040+    0,    16);
		API_polar::template xo <   16>(s,    29024+    0, 29024+   16,              29024+    0,    16);
		API_polar::template xo <   32>(s,    28992+    0, 28992+   32,              28992+    0,    32);
		API_polar::template xo <   64>(s,    28928+    0, 28928+   64,              28928+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 28928+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           29056+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 29056+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           29064+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 29064+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           29068+    0,     4);
		API_polar::template xo <    4>(s,    29064+    0, 29064+    4,              29064+    0,     4);
		API_polar::template xo <    8>(s,    29056+    0, 29056+    8,              29056+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 29056+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           29072+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 29072+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           29076+    0,     4);
		API_polar::template xo <    4>(s,    29072+    0, 29072+    4,              29072+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 29072+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           29080+    0,     8);
		API_polar::template xo <    8>(s,    29072+    0, 29072+    8,              29072+    0,     8);
		API_polar::template xo <   16>(s,    29056+    0, 29056+   16,              29056+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 29056+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           29088+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 29088+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           29092+    0,     4);
		API_polar::template xo <    4>(s,    29088+    0, 29088+    4,              29088+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 29088+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           29096+    0,     8);
		API_polar::template xo <    8>(s,    29088+    0, 29088+    8,              29088+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 29088+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                           29104+    0,    16);
		API_polar::template xo <   16>(s,    29088+    0, 29088+   16,              29088+    0,    16);
		API_polar::template xo <   32>(s,    29056+    0, 29056+   32,              29056+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 29056+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           29120+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 29120+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           29124+    0,     4);
		API_polar::template xo <    4>(s,    29120+    0, 29120+    4,              29120+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 29120+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                           29128+    0,     8);
		API_polar::template xo <    8>(s,    29120+    0, 29120+    8,              29120+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 29120+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                           29136+    0,    16);
		API_polar::template xo <   16>(s,    29120+    0, 29120+   16,              29120+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 29120+    0, 65408+   64,    32);
		API_polar::template h  <   32>(s, l, 65472+    0,                           29152+    0,    32);
		API_polar::template xo <   32>(s,    29120+    0, 29120+   32,              29120+    0,    32);
		API_polar::template xo <   64>(s,    29056+    0, 29056+   64,              29056+    0,    64);
		API_polar::template xo <  128>(s,    28928+    0, 28928+  128,              28928+    0,   128);
		API_polar::template xo <  256>(s,    28672+    0, 28672+  256,              28672+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512, 28672+    0, 63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           29184+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 29184+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           29200+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 29200+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           29208+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 29208+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           29212+    0,     4);
		API_polar::template xo <    4>(s,    29208+    0, 29208+    4,              29208+    0,     4);
		API_polar::template xo <    8>(s,    29200+    0, 29200+    8,              29200+    0,     8);
		API_polar::template xo <   16>(s,    29184+    0, 29184+   16,              29184+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 29184+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           29216+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 29216+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           29224+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 29224+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           29228+    0,     4);
		API_polar::template xo <    4>(s,    29224+    0, 29224+    4,              29224+    0,     4);
		API_polar::template xo <    8>(s,    29216+    0, 29216+    8,              29216+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 29216+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           29232+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 29232+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           29236+    0,     4);
		API_polar::template xo <    4>(s,    29232+    0, 29232+    4,              29232+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 29232+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           29240+    0,     8);
		API_polar::template xo <    8>(s,    29232+    0, 29232+    8,              29232+    0,     8);
		API_polar::template xo <   16>(s,    29216+    0, 29216+   16,              29216+    0,    16);
		API_polar::template xo <   32>(s,    29184+    0, 29184+   32,              29184+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 29184+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           29248+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 29248+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           29256+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 29256+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           29260+    0,     4);
		API_polar::template xo <    4>(s,    29256+    0, 29256+    4,              29256+    0,     4);
		API_polar::template xo <    8>(s,    29248+    0, 29248+    8,              29248+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 29248+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           29264+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 29264+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           29268+    0,     4);
		API_polar::template xo <    4>(s,    29264+    0, 29264+    4,              29264+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 29264+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                           29272+    0,     8);
		API_polar::template xo <    8>(s,    29264+    0, 29264+    8,              29264+    0,     8);
		API_polar::template xo <   16>(s,    29248+    0, 29248+   16,              29248+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 29248+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           29280+    0,    32);
		API_polar::template xo <   32>(s,    29248+    0, 29248+   32,              29248+    0,    32);
		API_polar::template xo <   64>(s,    29184+    0, 29184+   64,              29184+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 29184+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           29312+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 29312+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           29320+    0,     8);
		API_polar::template xo <    8>(s,    29312+    0, 29312+    8,              29312+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 29312+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           29328+    0,    16);
		API_polar::template xo <   16>(s,    29312+    0, 29312+   16,              29312+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 29312+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           29344+    0,    32);
		API_polar::template xo <   32>(s,    29312+    0, 29312+   32,              29312+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 29312+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           29376+    0,    64);
		API_polar::template xo <   64>(s,    29312+    0, 29312+   64,              29312+    0,    64);
		API_polar::template xo <  128>(s,    29184+    0, 29184+  128,              29184+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 29184+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           29440+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 29440+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           29444+    0,     4);
		API_polar::template xo <    4>(s,    29440+    0, 29440+    4,              29440+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 29440+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           29448+    0,     8);
		API_polar::template xo <    8>(s,    29440+    0, 29440+    8,              29440+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 29440+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           29456+    0,    16);
		API_polar::template xo <   16>(s,    29440+    0, 29440+   16,              29440+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 29440+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           29472+    0,    32);
		API_polar::template xo <   32>(s,    29440+    0, 29440+   32,              29440+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 29440+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           29504+    0,    64);
		API_polar::template xo <   64>(s,    29440+    0, 29440+   64,              29440+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 29440+    0, 65024+  256,   128);
		API_polar::template spc<  128>(s, l, 65280+    0,                           29568+    0,   128);
		API_polar::template xo <  128>(s,    29440+    0, 29440+  128,              29440+    0,   128);
		API_polar::template xo <  256>(s,    29184+    0, 29184+  256,              29184+    0,   256);
		API_polar::template xo <  512>(s,    28672+    0, 28672+  512,              28672+    0,   512);
		API_polar::template g  < 1024>(s, l, 61440+    0, 61440+ 1024, 28672+    0, 61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           29696+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 29696+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           29712+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 29712+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           29720+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 29720+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           29724+    0,     4);
		API_polar::template xo <    4>(s,    29720+    0, 29720+    4,              29720+    0,     4);
		API_polar::template xo <    8>(s,    29712+    0, 29712+    8,              29712+    0,     8);
		API_polar::template xo <   16>(s,    29696+    0, 29696+   16,              29696+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 29696+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                           29734+    0,     2);
		API_polar::template xo0<    2>(s,    29732+    2,                           29732+    0,     2);
		API_polar::template xo0<    4>(s,    29728+    4,                           29728+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 29728+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           29736+    0,     8);
		API_polar::template xo <    8>(s,    29728+    0, 29728+    8,              29728+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 29728+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           29744+    0,    16);
		API_polar::template xo <   16>(s,    29728+    0, 29728+   16,              29728+    0,    16);
		API_polar::template xo <   32>(s,    29696+    0, 29696+   32,              29696+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 29696+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           29764+    0,     4);
		API_polar::template xo0<    4>(s,    29760+    4,                           29760+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 29760+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           29768+    0,     8);
		API_polar::template xo <    8>(s,    29760+    0, 29760+    8,              29760+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 29760+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           29776+    0,    16);
		API_polar::template xo <   16>(s,    29760+    0, 29760+   16,              29760+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 29760+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           29792+    0,    32);
		API_polar::template xo <   32>(s,    29760+    0, 29760+   32,              29760+    0,    32);
		API_polar::template xo <   64>(s,    29696+    0, 29696+   64,              29696+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 29696+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           29824+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 29824+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           29828+    0,     4);
		API_polar::template xo <    4>(s,    29824+    0, 29824+    4,              29824+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 29824+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           29832+    0,     8);
		API_polar::template xo <    8>(s,    29824+    0, 29824+    8,              29824+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 29824+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           29840+    0,    16);
		API_polar::template xo <   16>(s,    29824+    0, 29824+   16,              29824+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 29824+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           29856+    0,    32);
		API_polar::template xo <   32>(s,    29824+    0, 29824+   32,              29824+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 29824+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           29888+    0,    64);
		API_polar::template xo <   64>(s,    29824+    0, 29824+   64,              29824+    0,    64);
		API_polar::template xo <  128>(s,    29696+    0, 29696+  128,              29696+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 29696+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           29952+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 29952+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           29956+    0,     4);
		API_polar::template xo <    4>(s,    29952+    0, 29952+    4,              29952+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 29952+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           29960+    0,     8);
		API_polar::template xo <    8>(s,    29952+    0, 29952+    8,              29952+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 29952+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           29968+    0,    16);
		API_polar::template xo <   16>(s,    29952+    0, 29952+   16,              29952+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 29952+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           29984+    0,    32);
		API_polar::template xo <   32>(s,    29952+    0, 29952+   32,              29952+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 29952+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           30016+    0,    64);
		API_polar::template xo <   64>(s,    29952+    0, 29952+   64,              29952+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 29952+    0, 65024+  256,   128);
		API_polar::template spc<  128>(s, l, 65280+    0,                           30080+    0,   128);
		API_polar::template xo <  128>(s,    29952+    0, 29952+  128,              29952+    0,   128);
		API_polar::template xo <  256>(s,    29696+    0, 29696+  256,              29696+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512, 29696+    0, 63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           30208+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 30208+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           30212+    0,     4);
		API_polar::template xo <    4>(s,    30208+    0, 30208+    4,              30208+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 30208+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           30216+    0,     8);
		API_polar::template xo <    8>(s,    30208+    0, 30208+    8,              30208+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 30208+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           30224+    0,    16);
		API_polar::template xo <   16>(s,    30208+    0, 30208+   16,              30208+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 30208+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           30240+    0,    32);
		API_polar::template xo <   32>(s,    30208+    0, 30208+   32,              30208+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 30208+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           30272+    0,    64);
		API_polar::template xo <   64>(s,    30208+    0, 30208+   64,              30208+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 30208+    0, 65024+  256,   128);
		API_polar::template spc<  128>(s, l, 65280+    0,                           30336+    0,   128);
		API_polar::template xo <  128>(s,    30208+    0, 30208+  128,              30208+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 30208+    0, 64512+  512,   256);
		API_polar::template spc<  256>(s, l, 65024+    0,                           30464+    0,   256);
		API_polar::template xo <  256>(s,    30208+    0, 30208+  256,              30208+    0,   256);
		API_polar::template xo <  512>(s,    29696+    0, 29696+  512,              29696+    0,   512);
		API_polar::template xo < 1024>(s,    28672+    0, 28672+ 1024,              28672+    0,  1024);
		API_polar::template g  < 2048>(s, l, 57344+    0, 57344+ 2048, 28672+    0, 57344+ 4096,  2048);
		API_polar::template f  < 1024>(   l, 61440+    0, 61440+ 1024,              61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           30720+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 30720+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           30736+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 30736+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           30740+    0,     4);
		API_polar::template xo <    4>(s,    30736+    0, 30736+    4,              30736+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 30736+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           30744+    0,     8);
		API_polar::template xo <    8>(s,    30736+    0, 30736+    8,              30736+    0,     8);
		API_polar::template xo <   16>(s,    30720+    0, 30720+   16,              30720+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 30720+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           30752+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 30752+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           30756+    0,     4);
		API_polar::template xo <    4>(s,    30752+    0, 30752+    4,              30752+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 30752+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           30760+    0,     8);
		API_polar::template xo <    8>(s,    30752+    0, 30752+    8,              30752+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 30752+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           30768+    0,    16);
		API_polar::template xo <   16>(s,    30752+    0, 30752+   16,              30752+    0,    16);
		API_polar::template xo <   32>(s,    30720+    0, 30720+   32,              30720+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 30720+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           30784+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 30784+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           30788+    0,     4);
		API_polar::template xo <    4>(s,    30784+    0, 30784+    4,              30784+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 30784+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           30792+    0,     8);
		API_polar::template xo <    8>(s,    30784+    0, 30784+    8,              30784+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 30784+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           30800+    0,    16);
		API_polar::template xo <   16>(s,    30784+    0, 30784+   16,              30784+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 30784+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           30816+    0,    32);
		API_polar::template xo <   32>(s,    30784+    0, 30784+   32,              30784+    0,    32);
		API_polar::template xo <   64>(s,    30720+    0, 30720+   64,              30720+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 30720+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           30848+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 30848+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           30852+    0,     4);
		API_polar::template xo <    4>(s,    30848+    0, 30848+    4,              30848+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 30848+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           30856+    0,     8);
		API_polar::template xo <    8>(s,    30848+    0, 30848+    8,              30848+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 30848+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           30864+    0,    16);
		API_polar::template xo <   16>(s,    30848+    0, 30848+   16,              30848+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 30848+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           30880+    0,    32);
		API_polar::template xo <   32>(s,    30848+    0, 30848+   32,              30848+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 30848+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           30912+    0,    64);
		API_polar::template xo <   64>(s,    30848+    0, 30848+   64,              30848+    0,    64);
		API_polar::template xo <  128>(s,    30720+    0, 30720+  128,              30720+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 30720+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           30976+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 30976+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           30980+    0,     4);
		API_polar::template xo <    4>(s,    30976+    0, 30976+    4,              30976+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 30976+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           30984+    0,     8);
		API_polar::template xo <    8>(s,    30976+    0, 30976+    8,              30976+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 30976+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           30992+    0,    16);
		API_polar::template xo <   16>(s,    30976+    0, 30976+   16,              30976+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 30976+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           31008+    0,    32);
		API_polar::template xo <   32>(s,    30976+    0, 30976+   32,              30976+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 30976+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           31040+    0,    64);
		API_polar::template xo <   64>(s,    30976+    0, 30976+   64,              30976+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 30976+    0, 65024+  256,   128);
		API_polar::template spc<  128>(s, l, 65280+    0,                           31104+    0,   128);
		API_polar::template xo <  128>(s,    30976+    0, 30976+  128,              30976+    0,   128);
		API_polar::template xo <  256>(s,    30720+    0, 30720+  256,              30720+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512, 30720+    0, 63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           31232+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 31232+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           31236+    0,     4);
		API_polar::template xo <    4>(s,    31232+    0, 31232+    4,              31232+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 31232+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           31240+    0,     8);
		API_polar::template xo <    8>(s,    31232+    0, 31232+    8,              31232+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 31232+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           31248+    0,    16);
		API_polar::template xo <   16>(s,    31232+    0, 31232+   16,              31232+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 31232+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           31264+    0,    32);
		API_polar::template xo <   32>(s,    31232+    0, 31232+   32,              31232+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 31232+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           31296+    0,    64);
		API_polar::template xo <   64>(s,    31232+    0, 31232+   64,              31232+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 31232+    0, 65024+  256,   128);
		API_polar::template spc<  128>(s, l, 65280+    0,                           31360+    0,   128);
		API_polar::template xo <  128>(s,    31232+    0, 31232+  128,              31232+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 31232+    0, 64512+  512,   256);
		API_polar::template spc<  256>(s, l, 65024+    0,                           31488+    0,   256);
		API_polar::template xo <  256>(s,    31232+    0, 31232+  256,              31232+    0,   256);
		API_polar::template xo <  512>(s,    30720+    0, 30720+  512,              30720+    0,   512);
		API_polar::template g  < 1024>(s, l, 61440+    0, 61440+ 1024, 30720+    0, 61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           31744+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 31744+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           31748+    0,     4);
		API_polar::template xo <    4>(s,    31744+    0, 31744+    4,              31744+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 31744+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           31752+    0,     8);
		API_polar::template xo <    8>(s,    31744+    0, 31744+    8,              31744+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 31744+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           31760+    0,    16);
		API_polar::template xo <   16>(s,    31744+    0, 31744+   16,              31744+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 31744+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           31776+    0,    32);
		API_polar::template xo <   32>(s,    31744+    0, 31744+   32,              31744+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 31744+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           31808+    0,    64);
		API_polar::template xo <   64>(s,    31744+    0, 31744+   64,              31744+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 31744+    0, 65024+  256,   128);
		API_polar::template spc<  128>(s, l, 65280+    0,                           31872+    0,   128);
		API_polar::template xo <  128>(s,    31744+    0, 31744+  128,              31744+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 31744+    0, 64512+  512,   256);
		API_polar::template spc<  256>(s, l, 65024+    0,                           32000+    0,   256);
		API_polar::template xo <  256>(s,    31744+    0, 31744+  256,              31744+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512, 31744+    0, 63488+ 1024,   512);
		API_polar::template spc<  512>(s, l, 64512+    0,                           32256+    0,   512);
		API_polar::template xo <  512>(s,    31744+    0, 31744+  512,              31744+    0,   512);
		API_polar::template xo < 1024>(s,    30720+    0, 30720+ 1024,              30720+    0,  1024);
		API_polar::template xo < 2048>(s,    28672+    0, 28672+ 2048,              28672+    0,  2048);
		API_polar::template xo < 4096>(s,    24576+    0, 24576+ 4096,              24576+    0,  4096);
		API_polar::template xo < 8192>(s,    16384+    0, 16384+ 8192,              16384+    0,  8192);
		API_polar::template xo <16384>(s,        0+    0,     0+16384,                  0+    0, 16384);
	}
};
}
}
#endif
