#ifndef DECODER_POLAR_SC_FAST_SYS_N32768_K29492_SNR40_HPP_
#define DECODER_POLAR_SC_FAST_SYS_N32768_K29492_SNR40_HPP_

#include <cassert>

#include "../Decoder_polar_SC_fast_sys.hpp"

namespace aff3ct
{
namespace module
{
static const char Frozen_bits_32768_29492_40[32768] = {
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};

template <typename B, typename R, class API_polar>
class Decoder_polar_SC_fast_sys_N32768_K29492_SNR40 : public Decoder_polar_SC_fast_sys<B, R, API_polar>
{
public:
	Decoder_polar_SC_fast_sys_N32768_K29492_SNR40(const int& K, const int& N, const mipp::vector<B>& frozen_bits, const int n_frames = 1)
	: Decoder_polar_SC_fast_sys<B, R, API_polar>(K, N, frozen_bits, n_frames)
	{
		assert(N == 32768);
		assert(K == 29492);
		
		auto i = 0;
		while (i < 32768 && Frozen_bits_32768_29492_40[i] == frozen_bits[i]) i++;
		assert(i == 32768);
	}

	virtual ~Decoder_polar_SC_fast_sys_N32768_K29492_SNR40()
	{
	}

	void decode()
	{
		auto &l = this->l;
		auto &s = this->s;

		API_polar::template f  <16384>(   l,     0+    0,     0+16384,                  0+32768, 16384);
		API_polar::template f  < 8192>(   l, 32768+    0, 32768+ 8192,              32768+16384,  8192);
		API_polar::template f  < 4096>(   l, 49152+    0, 49152+ 4096,              49152+ 8192,  4096);
		API_polar::template f  < 2048>(   l, 57344+    0, 57344+ 2048,              57344+ 4096,  2048);
		API_polar::template f  < 1024>(   l, 61440+    0, 61440+ 1024,              61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template rep<  512>(s, l, 64512+    0,                               0+    0,   512);
		API_polar::template gr <  512>(s, l, 63488+    0, 63488+  512,     0+    0, 63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template g0 <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template g0 <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template g0 <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                             760+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,   760+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                             764+    0,     4);
		API_polar::template xo <    4>(s,      760+    0,   760+    4,                760+    0,     4);
		API_polar::template xo0<    8>(s,      752+    8,                             752+    0,     8);
		API_polar::template xo0<   16>(s,      736+   16,                             736+    0,    16);
		API_polar::template xo0<   32>(s,      704+   32,                             704+    0,    32);
		API_polar::template xo0<   64>(s,      640+   64,                             640+    0,    64);
		API_polar::template xo0<  128>(s,      512+  128,                             512+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256,   512+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template g0 <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template g0 <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                             864+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16,   864+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                             880+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,   880+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                             888+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,   888+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                             892+    0,     4);
		API_polar::template xo <    4>(s,      888+    0,   888+    4,                888+    0,     4);
		API_polar::template xo <    8>(s,      880+    0,   880+    8,                880+    0,     8);
		API_polar::template xo <   16>(s,      864+    0,   864+   16,                864+    0,    16);
		API_polar::template xo0<   32>(s,      832+   32,                             832+    0,    32);
		API_polar::template xo0<   64>(s,      768+   64,                             768+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128,   768+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                             896+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32,   896+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                             928+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16,   928+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                             950+    0,     2);
		API_polar::template xo0<    2>(s,      948+    2,                             948+    0,     2);
		API_polar::template xo0<    4>(s,      944+    4,                             944+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,   944+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                             952+    0,     8);
		API_polar::template xo <    8>(s,      944+    0,   944+    8,                944+    0,     8);
		API_polar::template xo <   16>(s,      928+    0,   928+   16,                928+    0,    16);
		API_polar::template xo <   32>(s,      896+    0,   896+   32,                896+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,   896+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                             972+    0,     4);
		API_polar::template xo0<    4>(s,      968+    4,                             968+    0,     4);
		API_polar::template xo0<    8>(s,      960+    8,                             960+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,   960+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                             976+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,   976+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                             980+    0,     4);
		API_polar::template xo <    4>(s,      976+    0,   976+    4,                976+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,   976+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                             984+    0,     8);
		API_polar::template xo <    8>(s,      976+    0,   976+    8,                976+    0,     8);
		API_polar::template xo <   16>(s,      960+    0,   960+   16,                960+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,   960+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                             992+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,   992+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                             996+    0,     4);
		API_polar::template xo <    4>(s,      992+    0,   992+    4,                992+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,   992+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            1000+    0,     8);
		API_polar::template xo <    8>(s,      992+    0,   992+    8,                992+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,   992+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            1008+    0,    16);
		API_polar::template xo <   16>(s,      992+    0,   992+   16,                992+    0,    16);
		API_polar::template xo <   32>(s,      960+    0,   960+   32,                960+    0,    32);
		API_polar::template xo <   64>(s,      896+    0,   896+   64,                896+    0,    64);
		API_polar::template xo <  128>(s,      768+    0,   768+  128,                768+    0,   128);
		API_polar::template xo <  256>(s,      512+    0,   512+  256,                512+    0,   256);
		API_polar::template xo <  512>(s,        0+    0,     0+  512,                  0+    0,   512);
		API_polar::template g  < 1024>(s, l, 61440+    0, 61440+ 1024,     0+    0, 61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template g0 <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template g0 <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                            1216+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32,  1216+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                            1248+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16,  1248+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            1264+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  1264+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                            1274+    0,     2);
		API_polar::template xo0<    2>(s,     1272+    2,                            1272+    0,     2);
		API_polar::template g  <    4>(s, l, 65520+    0, 65520+    4,  1272+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                            1276+    0,     4);
		API_polar::template xo <    4>(s,     1272+    0,  1272+    4,               1272+    0,     4);
		API_polar::template xo <    8>(s,     1264+    0,  1264+    8,               1264+    0,     8);
		API_polar::template xo <   16>(s,     1248+    0,  1248+   16,               1248+    0,    16);
		API_polar::template xo <   32>(s,     1216+    0,  1216+   32,               1216+    0,    32);
		API_polar::template xo0<   64>(s,     1152+   64,                            1152+    0,    64);
		API_polar::template xo0<  128>(s,     1024+  128,                            1024+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256,  1024+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template rep<   64>(s, l, 65408+    0,                            1280+    0,    64);
		API_polar::template gr <   64>(s, l, 65280+    0, 65280+   64,  1280+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                            1344+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32,  1344+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            1388+    0,     4);
		API_polar::template xo0<    4>(s,     1384+    4,                            1384+    0,     4);
		API_polar::template xo0<    8>(s,     1376+    8,                            1376+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  1376+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            1392+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  1392+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            1396+    0,     4);
		API_polar::template xo <    4>(s,     1392+    0,  1392+    4,               1392+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  1392+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            1400+    0,     8);
		API_polar::template xo <    8>(s,     1392+    0,  1392+    8,               1392+    0,     8);
		API_polar::template xo <   16>(s,     1376+    0,  1376+   16,               1376+    0,    16);
		API_polar::template xo <   32>(s,     1344+    0,  1344+   32,               1344+    0,    32);
		API_polar::template xo <   64>(s,     1280+    0,  1280+   64,               1280+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128,  1280+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            1432+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  1432+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            1436+    0,     4);
		API_polar::template xo <    4>(s,     1432+    0,  1432+    4,               1432+    0,     4);
		API_polar::template xo0<    8>(s,     1424+    8,                            1424+    0,     8);
		API_polar::template xo0<   16>(s,     1408+   16,                            1408+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  1408+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            1440+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  1440+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            1448+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  1448+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            1452+    0,     4);
		API_polar::template xo <    4>(s,     1448+    0,  1448+    4,               1448+    0,     4);
		API_polar::template xo <    8>(s,     1440+    0,  1440+    8,               1440+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  1440+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            1456+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  1456+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            1460+    0,     4);
		API_polar::template xo <    4>(s,     1456+    0,  1456+    4,               1456+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  1456+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            1464+    0,     8);
		API_polar::template xo <    8>(s,     1456+    0,  1456+    8,               1456+    0,     8);
		API_polar::template xo <   16>(s,     1440+    0,  1440+   16,               1440+    0,    16);
		API_polar::template xo <   32>(s,     1408+    0,  1408+   32,               1408+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  1408+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            1472+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  1472+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            1480+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  1480+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            1484+    0,     4);
		API_polar::template xo <    4>(s,     1480+    0,  1480+    4,               1480+    0,     4);
		API_polar::template xo <    8>(s,     1472+    0,  1472+    8,               1472+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  1472+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                            1490+    0,     2);
		API_polar::template xo0<    2>(s,     1488+    2,                            1488+    0,     2);
		API_polar::template g  <    4>(s, l, 65520+    0, 65520+    4,  1488+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                            1492+    0,     4);
		API_polar::template xo <    4>(s,     1488+    0,  1488+    4,               1488+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  1488+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                            1496+    0,     8);
		API_polar::template xo <    8>(s,     1488+    0,  1488+    8,               1488+    0,     8);
		API_polar::template xo <   16>(s,     1472+    0,  1472+   16,               1472+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  1472+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                            1504+    0,    32);
		API_polar::template xo <   32>(s,     1472+    0,  1472+   32,               1472+    0,    32);
		API_polar::template xo <   64>(s,     1408+    0,  1408+   64,               1408+    0,    64);
		API_polar::template xo <  128>(s,     1280+    0,  1280+  128,               1280+    0,   128);
		API_polar::template xo <  256>(s,     1024+    0,  1024+  256,               1024+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512,  1024+    0, 63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template g0 <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            1596+    0,     4);
		API_polar::template xo0<    4>(s,     1592+    4,                            1592+    0,     4);
		API_polar::template xo0<    8>(s,     1584+    8,                            1584+    0,     8);
		API_polar::template xo0<   16>(s,     1568+   16,                            1568+    0,    16);
		API_polar::template xo0<   32>(s,     1536+   32,                            1536+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  1536+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            1616+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  1616+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            1624+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  1624+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            1628+    0,     4);
		API_polar::template xo <    4>(s,     1624+    0,  1624+    4,               1624+    0,     4);
		API_polar::template xo <    8>(s,     1616+    0,  1616+    8,               1616+    0,     8);
		API_polar::template xo0<   16>(s,     1600+   16,                            1600+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  1600+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            1632+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  1632+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            1640+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  1640+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            1644+    0,     4);
		API_polar::template xo <    4>(s,     1640+    0,  1640+    4,               1640+    0,     4);
		API_polar::template xo <    8>(s,     1632+    0,  1632+    8,               1632+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  1632+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            1648+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  1648+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                            1652+    0,     4);
		API_polar::template xo <    4>(s,     1648+    0,  1648+    4,               1648+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  1648+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                            1656+    0,     8);
		API_polar::template xo <    8>(s,     1648+    0,  1648+    8,               1648+    0,     8);
		API_polar::template xo <   16>(s,     1632+    0,  1632+   16,               1632+    0,    16);
		API_polar::template xo <   32>(s,     1600+    0,  1600+   32,               1600+    0,    32);
		API_polar::template xo <   64>(s,     1536+    0,  1536+   64,               1536+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128,  1536+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                            1664+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16,  1664+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            1680+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  1680+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            1688+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  1688+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            1692+    0,     4);
		API_polar::template xo <    4>(s,     1688+    0,  1688+    4,               1688+    0,     4);
		API_polar::template xo <    8>(s,     1680+    0,  1680+    8,               1680+    0,     8);
		API_polar::template xo <   16>(s,     1664+    0,  1664+   16,               1664+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  1664+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            1696+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  1696+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                            1706+    0,     2);
		API_polar::template xo0<    2>(s,     1704+    2,                            1704+    0,     2);
		API_polar::template g  <    4>(s, l, 65520+    0, 65520+    4,  1704+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                            1708+    0,     4);
		API_polar::template xo <    4>(s,     1704+    0,  1704+    4,               1704+    0,     4);
		API_polar::template xo <    8>(s,     1696+    0,  1696+    8,               1696+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  1696+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            1712+    0,    16);
		API_polar::template xo <   16>(s,     1696+    0,  1696+   16,               1696+    0,    16);
		API_polar::template xo <   32>(s,     1664+    0,  1664+   32,               1664+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  1664+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            1732+    0,     4);
		API_polar::template xo0<    4>(s,     1728+    4,                            1728+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  1728+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            1736+    0,     8);
		API_polar::template xo <    8>(s,     1728+    0,  1728+    8,               1728+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  1728+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            1744+    0,    16);
		API_polar::template xo <   16>(s,     1728+    0,  1728+   16,               1728+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  1728+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                            1760+    0,    32);
		API_polar::template xo <   32>(s,     1728+    0,  1728+   32,               1728+    0,    32);
		API_polar::template xo <   64>(s,     1664+    0,  1664+   64,               1664+    0,    64);
		API_polar::template xo <  128>(s,     1536+    0,  1536+  128,               1536+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256,  1536+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                            1792+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16,  1792+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                            1814+    0,     2);
		API_polar::template xo0<    2>(s,     1812+    2,                            1812+    0,     2);
		API_polar::template xo0<    4>(s,     1808+    4,                            1808+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  1808+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            1816+    0,     8);
		API_polar::template xo <    8>(s,     1808+    0,  1808+    8,               1808+    0,     8);
		API_polar::template xo <   16>(s,     1792+    0,  1792+   16,               1792+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  1792+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            1824+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  1824+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            1828+    0,     4);
		API_polar::template xo <    4>(s,     1824+    0,  1824+    4,               1824+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  1824+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            1832+    0,     8);
		API_polar::template xo <    8>(s,     1824+    0,  1824+    8,               1824+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  1824+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            1840+    0,    16);
		API_polar::template xo <   16>(s,     1824+    0,  1824+   16,               1824+    0,    16);
		API_polar::template xo <   32>(s,     1792+    0,  1792+   32,               1792+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  1792+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            1856+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  1856+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            1860+    0,     4);
		API_polar::template xo <    4>(s,     1856+    0,  1856+    4,               1856+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  1856+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            1864+    0,     8);
		API_polar::template xo <    8>(s,     1856+    0,  1856+    8,               1856+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  1856+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            1872+    0,    16);
		API_polar::template xo <   16>(s,     1856+    0,  1856+   16,               1856+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  1856+    0, 65408+   64,    32);
		API_polar::template h  <   32>(s, l, 65472+    0,                            1888+    0,    32);
		API_polar::template xo <   32>(s,     1856+    0,  1856+   32,               1856+    0,    32);
		API_polar::template xo <   64>(s,     1792+    0,  1792+   64,               1792+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128,  1792+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            1920+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  1920+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            1924+    0,     4);
		API_polar::template xo <    4>(s,     1920+    0,  1920+    4,               1920+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  1920+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                            1928+    0,     8);
		API_polar::template xo <    8>(s,     1920+    0,  1920+    8,               1920+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  1920+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                            1936+    0,    16);
		API_polar::template xo <   16>(s,     1920+    0,  1920+   16,               1920+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  1920+    0, 65408+   64,    32);
		API_polar::template h  <   32>(s, l, 65472+    0,                            1952+    0,    32);
		API_polar::template xo <   32>(s,     1920+    0,  1920+   32,               1920+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  1920+    0, 65280+  128,    64);
		API_polar::template h  <   64>(s, l, 65408+    0,                            1984+    0,    64);
		API_polar::template xo <   64>(s,     1920+    0,  1920+   64,               1920+    0,    64);
		API_polar::template xo <  128>(s,     1792+    0,  1792+  128,               1792+    0,   128);
		API_polar::template xo <  256>(s,     1536+    0,  1536+  256,               1536+    0,   256);
		API_polar::template xo <  512>(s,     1024+    0,  1024+  512,               1024+    0,   512);
		API_polar::template xo < 1024>(s,        0+    0,     0+ 1024,                  0+    0,  1024);
		API_polar::template g  < 2048>(s, l, 57344+    0, 57344+ 2048,     0+    0, 57344+ 4096,  2048);
		API_polar::template f  < 1024>(   l, 61440+    0, 61440+ 1024,              61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template rep<  128>(s, l, 65280+    0,                            2048+    0,   128);
		API_polar::template gr <  128>(s, l, 65024+    0, 65024+  128,  2048+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template rep<   64>(s, l, 65408+    0,                            2176+    0,    64);
		API_polar::template gr <   64>(s, l, 65280+    0, 65280+   64,  2176+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            2268+    0,     4);
		API_polar::template xo0<    4>(s,     2264+    4,                            2264+    0,     4);
		API_polar::template xo0<    8>(s,     2256+    8,                            2256+    0,     8);
		API_polar::template xo0<   16>(s,     2240+   16,                            2240+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  2240+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            2272+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  2272+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            2280+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  2280+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            2284+    0,     4);
		API_polar::template xo <    4>(s,     2280+    0,  2280+    4,               2280+    0,     4);
		API_polar::template xo <    8>(s,     2272+    0,  2272+    8,               2272+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  2272+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            2288+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  2288+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            2292+    0,     4);
		API_polar::template xo <    4>(s,     2288+    0,  2288+    4,               2288+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  2288+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            2296+    0,     8);
		API_polar::template xo <    8>(s,     2288+    0,  2288+    8,               2288+    0,     8);
		API_polar::template xo <   16>(s,     2272+    0,  2272+   16,               2272+    0,    16);
		API_polar::template xo <   32>(s,     2240+    0,  2240+   32,               2240+    0,    32);
		API_polar::template xo <   64>(s,     2176+    0,  2176+   64,               2176+    0,    64);
		API_polar::template xo <  128>(s,     2048+    0,  2048+  128,               2048+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256,  2048+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template g0 <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            2360+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  2360+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            2364+    0,     4);
		API_polar::template xo <    4>(s,     2360+    0,  2360+    4,               2360+    0,     4);
		API_polar::template xo0<    8>(s,     2352+    8,                            2352+    0,     8);
		API_polar::template xo0<   16>(s,     2336+   16,                            2336+    0,    16);
		API_polar::template xo0<   32>(s,     2304+   32,                            2304+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  2304+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                            2368+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16,  2368+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            2384+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  2384+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            2392+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  2392+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            2396+    0,     4);
		API_polar::template xo <    4>(s,     2392+    0,  2392+    4,               2392+    0,     4);
		API_polar::template xo <    8>(s,     2384+    0,  2384+    8,               2384+    0,     8);
		API_polar::template xo <   16>(s,     2368+    0,  2368+   16,               2368+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  2368+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            2400+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  2400+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            2408+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  2408+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                            2412+    0,     4);
		API_polar::template xo <    4>(s,     2408+    0,  2408+    4,               2408+    0,     4);
		API_polar::template xo <    8>(s,     2400+    0,  2400+    8,               2400+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  2400+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            2416+    0,    16);
		API_polar::template xo <   16>(s,     2400+    0,  2400+   16,               2400+    0,    16);
		API_polar::template xo <   32>(s,     2368+    0,  2368+   32,               2368+    0,    32);
		API_polar::template xo <   64>(s,     2304+    0,  2304+   64,               2304+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128,  2304+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                            2432+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16,  2432+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            2448+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  2448+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                            2458+    0,     2);
		API_polar::template xo0<    2>(s,     2456+    2,                            2456+    0,     2);
		API_polar::template g  <    4>(s, l, 65520+    0, 65520+    4,  2456+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                            2460+    0,     4);
		API_polar::template xo <    4>(s,     2456+    0,  2456+    4,               2456+    0,     4);
		API_polar::template xo <    8>(s,     2448+    0,  2448+    8,               2448+    0,     8);
		API_polar::template xo <   16>(s,     2432+    0,  2432+   16,               2432+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  2432+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            2468+    0,     4);
		API_polar::template xo0<    4>(s,     2464+    4,                            2464+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  2464+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            2472+    0,     8);
		API_polar::template xo <    8>(s,     2464+    0,  2464+    8,               2464+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  2464+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            2480+    0,    16);
		API_polar::template xo <   16>(s,     2464+    0,  2464+   16,               2464+    0,    16);
		API_polar::template xo <   32>(s,     2432+    0,  2432+   32,               2432+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  2432+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            2496+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  2496+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            2500+    0,     4);
		API_polar::template xo <    4>(s,     2496+    0,  2496+    4,               2496+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  2496+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            2504+    0,     8);
		API_polar::template xo <    8>(s,     2496+    0,  2496+    8,               2496+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  2496+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            2512+    0,    16);
		API_polar::template xo <   16>(s,     2496+    0,  2496+   16,               2496+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  2496+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                            2528+    0,    32);
		API_polar::template xo <   32>(s,     2496+    0,  2496+   32,               2496+    0,    32);
		API_polar::template xo <   64>(s,     2432+    0,  2432+   64,               2432+    0,    64);
		API_polar::template xo <  128>(s,     2304+    0,  2304+  128,               2304+    0,   128);
		API_polar::template xo <  256>(s,     2048+    0,  2048+  256,               2048+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512,  2048+    0, 63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template g0 <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                            2592+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16,  2592+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            2608+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  2608+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            2616+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  2616+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                            2620+    0,     4);
		API_polar::template xo <    4>(s,     2616+    0,  2616+    4,               2616+    0,     4);
		API_polar::template xo <    8>(s,     2608+    0,  2608+    8,               2608+    0,     8);
		API_polar::template xo <   16>(s,     2592+    0,  2592+   16,               2592+    0,    16);
		API_polar::template xo0<   32>(s,     2560+   32,                            2560+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  2560+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                            2624+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16,  2624+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                            2646+    0,     2);
		API_polar::template xo0<    2>(s,     2644+    2,                            2644+    0,     2);
		API_polar::template xo0<    4>(s,     2640+    4,                            2640+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  2640+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            2648+    0,     8);
		API_polar::template xo <    8>(s,     2640+    0,  2640+    8,               2640+    0,     8);
		API_polar::template xo <   16>(s,     2624+    0,  2624+   16,               2624+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  2624+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            2656+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  2656+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            2660+    0,     4);
		API_polar::template xo <    4>(s,     2656+    0,  2656+    4,               2656+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  2656+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            2664+    0,     8);
		API_polar::template xo <    8>(s,     2656+    0,  2656+    8,               2656+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  2656+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            2672+    0,    16);
		API_polar::template xo <   16>(s,     2656+    0,  2656+   16,               2656+    0,    16);
		API_polar::template xo <   32>(s,     2624+    0,  2624+   32,               2624+    0,    32);
		API_polar::template xo <   64>(s,     2560+    0,  2560+   64,               2560+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128,  2560+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            2700+    0,     4);
		API_polar::template xo0<    4>(s,     2696+    4,                            2696+    0,     4);
		API_polar::template xo0<    8>(s,     2688+    8,                            2688+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  2688+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            2704+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  2704+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            2708+    0,     4);
		API_polar::template xo <    4>(s,     2704+    0,  2704+    4,               2704+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  2704+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            2712+    0,     8);
		API_polar::template xo <    8>(s,     2704+    0,  2704+    8,               2704+    0,     8);
		API_polar::template xo <   16>(s,     2688+    0,  2688+   16,               2688+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  2688+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            2720+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  2720+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            2724+    0,     4);
		API_polar::template xo <    4>(s,     2720+    0,  2720+    4,               2720+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  2720+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            2728+    0,     8);
		API_polar::template xo <    8>(s,     2720+    0,  2720+    8,               2720+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  2720+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            2736+    0,    16);
		API_polar::template xo <   16>(s,     2720+    0,  2720+   16,               2720+    0,    16);
		API_polar::template xo <   32>(s,     2688+    0,  2688+   32,               2688+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  2688+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            2752+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  2752+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            2756+    0,     4);
		API_polar::template xo <    4>(s,     2752+    0,  2752+    4,               2752+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  2752+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                            2760+    0,     8);
		API_polar::template xo <    8>(s,     2752+    0,  2752+    8,               2752+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  2752+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                            2768+    0,    16);
		API_polar::template xo <   16>(s,     2752+    0,  2752+   16,               2752+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  2752+    0, 65408+   64,    32);
		API_polar::template h  <   32>(s, l, 65472+    0,                            2784+    0,    32);
		API_polar::template xo <   32>(s,     2752+    0,  2752+   32,               2752+    0,    32);
		API_polar::template xo <   64>(s,     2688+    0,  2688+   64,               2688+    0,    64);
		API_polar::template xo <  128>(s,     2560+    0,  2560+  128,               2560+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256,  2560+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            2816+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  2816+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            2824+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  2824+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            2828+    0,     4);
		API_polar::template xo <    4>(s,     2824+    0,  2824+    4,               2824+    0,     4);
		API_polar::template xo <    8>(s,     2816+    0,  2816+    8,               2816+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  2816+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            2832+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  2832+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            2836+    0,     4);
		API_polar::template xo <    4>(s,     2832+    0,  2832+    4,               2832+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  2832+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                            2840+    0,     8);
		API_polar::template xo <    8>(s,     2832+    0,  2832+    8,               2832+    0,     8);
		API_polar::template xo <   16>(s,     2816+    0,  2816+   16,               2816+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  2816+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            2848+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  2848+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                            2852+    0,     4);
		API_polar::template xo <    4>(s,     2848+    0,  2848+    4,               2848+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  2848+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                            2856+    0,     8);
		API_polar::template xo <    8>(s,     2848+    0,  2848+    8,               2848+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  2848+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                            2864+    0,    16);
		API_polar::template xo <   16>(s,     2848+    0,  2848+   16,               2848+    0,    16);
		API_polar::template xo <   32>(s,     2816+    0,  2816+   32,               2816+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  2816+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                            2880+    0,    64);
		API_polar::template xo <   64>(s,     2816+    0,  2816+   64,               2816+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128,  2816+    0, 65024+  256,   128);
		API_polar::template spc<  128>(s, l, 65280+    0,                            2944+    0,   128);
		API_polar::template xo <  128>(s,     2816+    0,  2816+  128,               2816+    0,   128);
		API_polar::template xo <  256>(s,     2560+    0,  2560+  256,               2560+    0,   256);
		API_polar::template xo <  512>(s,     2048+    0,  2048+  512,               2048+    0,   512);
		API_polar::template g  < 1024>(s, l, 61440+    0, 61440+ 1024,  2048+    0, 61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                            3072+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32,  3072+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            3116+    0,     4);
		API_polar::template xo0<    4>(s,     3112+    4,                            3112+    0,     4);
		API_polar::template xo0<    8>(s,     3104+    8,                            3104+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  3104+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            3120+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  3120+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            3124+    0,     4);
		API_polar::template xo <    4>(s,     3120+    0,  3120+    4,               3120+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  3120+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            3128+    0,     8);
		API_polar::template xo <    8>(s,     3120+    0,  3120+    8,               3120+    0,     8);
		API_polar::template xo <   16>(s,     3104+    0,  3104+   16,               3104+    0,    16);
		API_polar::template xo <   32>(s,     3072+    0,  3072+   32,               3072+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  3072+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            3136+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  3136+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            3144+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  3144+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            3148+    0,     4);
		API_polar::template xo <    4>(s,     3144+    0,  3144+    4,               3144+    0,     4);
		API_polar::template xo <    8>(s,     3136+    0,  3136+    8,               3136+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  3136+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            3152+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  3152+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            3156+    0,     4);
		API_polar::template xo <    4>(s,     3152+    0,  3152+    4,               3152+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  3152+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            3160+    0,     8);
		API_polar::template xo <    8>(s,     3152+    0,  3152+    8,               3152+    0,     8);
		API_polar::template xo <   16>(s,     3136+    0,  3136+   16,               3136+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  3136+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            3168+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  3168+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            3172+    0,     4);
		API_polar::template xo <    4>(s,     3168+    0,  3168+    4,               3168+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  3168+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                            3176+    0,     8);
		API_polar::template xo <    8>(s,     3168+    0,  3168+    8,               3168+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  3168+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                            3184+    0,    16);
		API_polar::template xo <   16>(s,     3168+    0,  3168+   16,               3168+    0,    16);
		API_polar::template xo <   32>(s,     3136+    0,  3136+   32,               3136+    0,    32);
		API_polar::template xo <   64>(s,     3072+    0,  3072+   64,               3072+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128,  3072+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            3200+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  3200+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            3208+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  3208+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            3212+    0,     4);
		API_polar::template xo <    4>(s,     3208+    0,  3208+    4,               3208+    0,     4);
		API_polar::template xo <    8>(s,     3200+    0,  3200+    8,               3200+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  3200+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            3216+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  3216+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                            3220+    0,     4);
		API_polar::template xo <    4>(s,     3216+    0,  3216+    4,               3216+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  3216+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                            3224+    0,     8);
		API_polar::template xo <    8>(s,     3216+    0,  3216+    8,               3216+    0,     8);
		API_polar::template xo <   16>(s,     3200+    0,  3200+   16,               3200+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  3200+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                            3232+    0,    32);
		API_polar::template xo <   32>(s,     3200+    0,  3200+   32,               3200+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  3200+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                            3264+    0,    64);
		API_polar::template xo <   64>(s,     3200+    0,  3200+   64,               3200+    0,    64);
		API_polar::template xo <  128>(s,     3072+    0,  3072+  128,               3072+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256,  3072+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            3328+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  3328+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                            3338+    0,     2);
		API_polar::template xo0<    2>(s,     3336+    2,                            3336+    0,     2);
		API_polar::template g  <    4>(s, l, 65520+    0, 65520+    4,  3336+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                            3340+    0,     4);
		API_polar::template xo <    4>(s,     3336+    0,  3336+    4,               3336+    0,     4);
		API_polar::template xo <    8>(s,     3328+    0,  3328+    8,               3328+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  3328+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            3344+    0,    16);
		API_polar::template xo <   16>(s,     3328+    0,  3328+   16,               3328+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  3328+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                            3360+    0,    32);
		API_polar::template xo <   32>(s,     3328+    0,  3328+   32,               3328+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  3328+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                            3392+    0,    64);
		API_polar::template xo <   64>(s,     3328+    0,  3328+   64,               3328+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128,  3328+    0, 65024+  256,   128);
		API_polar::template spc<  128>(s, l, 65280+    0,                            3456+    0,   128);
		API_polar::template xo <  128>(s,     3328+    0,  3328+  128,               3328+    0,   128);
		API_polar::template xo <  256>(s,     3072+    0,  3072+  256,               3072+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512,  3072+    0, 63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            3584+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  3584+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            3588+    0,     4);
		API_polar::template xo <    4>(s,     3584+    0,  3584+    4,               3584+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  3584+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            3592+    0,     8);
		API_polar::template xo <    8>(s,     3584+    0,  3584+    8,               3584+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  3584+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            3600+    0,    16);
		API_polar::template xo <   16>(s,     3584+    0,  3584+   16,               3584+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  3584+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                            3616+    0,    32);
		API_polar::template xo <   32>(s,     3584+    0,  3584+   32,               3584+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  3584+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                            3648+    0,    64);
		API_polar::template xo <   64>(s,     3584+    0,  3584+   64,               3584+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128,  3584+    0, 65024+  256,   128);
		API_polar::template h  <  128>(s, l, 65280+    0,                            3712+    0,   128);
		API_polar::template xo <  128>(s,     3584+    0,  3584+  128,               3584+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256,  3584+    0, 64512+  512,   256);
		API_polar::template h  <  256>(s, l, 65024+    0,                            3840+    0,   256);
		API_polar::template xo <  256>(s,     3584+    0,  3584+  256,               3584+    0,   256);
		API_polar::template xo <  512>(s,     3072+    0,  3072+  512,               3072+    0,   512);
		API_polar::template xo < 1024>(s,     2048+    0,  2048+ 1024,               2048+    0,  1024);
		API_polar::template xo < 2048>(s,        0+    0,     0+ 2048,                  0+    0,  2048);
		API_polar::template g  < 4096>(s, l, 49152+    0, 49152+ 4096,     0+    0, 49152+ 8192,  4096);
		API_polar::template f  < 2048>(   l, 57344+    0, 57344+ 2048,              57344+ 4096,  2048);
		API_polar::template f  < 1024>(   l, 61440+    0, 61440+ 1024,              61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template g0 <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template g0 <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            4216+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  4216+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            4220+    0,     4);
		API_polar::template xo <    4>(s,     4216+    0,  4216+    4,               4216+    0,     4);
		API_polar::template xo0<    8>(s,     4208+    8,                            4208+    0,     8);
		API_polar::template xo0<   16>(s,     4192+   16,                            4192+    0,    16);
		API_polar::template xo0<   32>(s,     4160+   32,                            4160+    0,    32);
		API_polar::template xo0<   64>(s,     4096+   64,                            4096+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128,  4096+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template g0 <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                            4256+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16,  4256+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            4272+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  4272+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            4280+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  4280+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            4284+    0,     4);
		API_polar::template xo <    4>(s,     4280+    0,  4280+    4,               4280+    0,     4);
		API_polar::template xo <    8>(s,     4272+    0,  4272+    8,               4272+    0,     8);
		API_polar::template xo <   16>(s,     4256+    0,  4256+   16,               4256+    0,    16);
		API_polar::template xo0<   32>(s,     4224+   32,                            4224+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  4224+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                            4288+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16,  4288+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            4304+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  4304+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            4312+    0,     8);
		API_polar::template xo <    8>(s,     4304+    0,  4304+    8,               4304+    0,     8);
		API_polar::template xo <   16>(s,     4288+    0,  4288+   16,               4288+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  4288+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            4324+    0,     4);
		API_polar::template xo0<    4>(s,     4320+    4,                            4320+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  4320+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            4328+    0,     8);
		API_polar::template xo <    8>(s,     4320+    0,  4320+    8,               4320+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  4320+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            4336+    0,    16);
		API_polar::template xo <   16>(s,     4320+    0,  4320+   16,               4320+    0,    16);
		API_polar::template xo <   32>(s,     4288+    0,  4288+   32,               4288+    0,    32);
		API_polar::template xo <   64>(s,     4224+    0,  4224+   64,               4224+    0,    64);
		API_polar::template xo <  128>(s,     4096+    0,  4096+  128,               4096+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256,  4096+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                            4352+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32,  4352+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                            4384+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16,  4384+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            4404+    0,     4);
		API_polar::template xo0<    4>(s,     4400+    4,                            4400+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  4400+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            4408+    0,     8);
		API_polar::template xo <    8>(s,     4400+    0,  4400+    8,               4400+    0,     8);
		API_polar::template xo <   16>(s,     4384+    0,  4384+   16,               4384+    0,    16);
		API_polar::template xo <   32>(s,     4352+    0,  4352+   32,               4352+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  4352+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            4428+    0,     4);
		API_polar::template xo0<    4>(s,     4424+    4,                            4424+    0,     4);
		API_polar::template xo0<    8>(s,     4416+    8,                            4416+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  4416+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            4432+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  4432+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            4436+    0,     4);
		API_polar::template xo <    4>(s,     4432+    0,  4432+    4,               4432+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  4432+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            4440+    0,     8);
		API_polar::template xo <    8>(s,     4432+    0,  4432+    8,               4432+    0,     8);
		API_polar::template xo <   16>(s,     4416+    0,  4416+   16,               4416+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  4416+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            4448+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  4448+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            4452+    0,     4);
		API_polar::template xo <    4>(s,     4448+    0,  4448+    4,               4448+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  4448+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            4456+    0,     8);
		API_polar::template xo <    8>(s,     4448+    0,  4448+    8,               4448+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  4448+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            4464+    0,    16);
		API_polar::template xo <   16>(s,     4448+    0,  4448+   16,               4448+    0,    16);
		API_polar::template xo <   32>(s,     4416+    0,  4416+   32,               4416+    0,    32);
		API_polar::template xo <   64>(s,     4352+    0,  4352+   64,               4352+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128,  4352+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            4480+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  4480+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            4488+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  4488+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            4492+    0,     4);
		API_polar::template xo <    4>(s,     4488+    0,  4488+    4,               4488+    0,     4);
		API_polar::template xo <    8>(s,     4480+    0,  4480+    8,               4480+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  4480+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            4496+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  4496+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            4500+    0,     4);
		API_polar::template xo <    4>(s,     4496+    0,  4496+    4,               4496+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  4496+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            4504+    0,     8);
		API_polar::template xo <    8>(s,     4496+    0,  4496+    8,               4496+    0,     8);
		API_polar::template xo <   16>(s,     4480+    0,  4480+   16,               4480+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  4480+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            4512+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  4512+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                            4516+    0,     4);
		API_polar::template xo <    4>(s,     4512+    0,  4512+    4,               4512+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  4512+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                            4520+    0,     8);
		API_polar::template xo <    8>(s,     4512+    0,  4512+    8,               4512+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  4512+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                            4528+    0,    16);
		API_polar::template xo <   16>(s,     4512+    0,  4512+   16,               4512+    0,    16);
		API_polar::template xo <   32>(s,     4480+    0,  4480+   32,               4480+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  4480+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                            4544+    0,    64);
		API_polar::template xo <   64>(s,     4480+    0,  4480+   64,               4480+    0,    64);
		API_polar::template xo <  128>(s,     4352+    0,  4352+  128,               4352+    0,   128);
		API_polar::template xo <  256>(s,     4096+    0,  4096+  256,               4096+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512,  4096+    0, 63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            4636+    0,     4);
		API_polar::template xo0<    4>(s,     4632+    4,                            4632+    0,     4);
		API_polar::template xo0<    8>(s,     4624+    8,                            4624+    0,     8);
		API_polar::template xo0<   16>(s,     4608+   16,                            4608+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  4608+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            4648+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  4648+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            4652+    0,     4);
		API_polar::template xo <    4>(s,     4648+    0,  4648+    4,               4648+    0,     4);
		API_polar::template xo0<    8>(s,     4640+    8,                            4640+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  4640+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            4656+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  4656+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            4660+    0,     4);
		API_polar::template xo <    4>(s,     4656+    0,  4656+    4,               4656+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  4656+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            4664+    0,     8);
		API_polar::template xo <    8>(s,     4656+    0,  4656+    8,               4656+    0,     8);
		API_polar::template xo <   16>(s,     4640+    0,  4640+   16,               4640+    0,    16);
		API_polar::template xo <   32>(s,     4608+    0,  4608+   32,               4608+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  4608+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            4672+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  4672+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            4680+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  4680+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            4684+    0,     4);
		API_polar::template xo <    4>(s,     4680+    0,  4680+    4,               4680+    0,     4);
		API_polar::template xo <    8>(s,     4672+    0,  4672+    8,               4672+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  4672+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            4688+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  4688+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                            4692+    0,     4);
		API_polar::template xo <    4>(s,     4688+    0,  4688+    4,               4688+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  4688+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                            4696+    0,     8);
		API_polar::template xo <    8>(s,     4688+    0,  4688+    8,               4688+    0,     8);
		API_polar::template xo <   16>(s,     4672+    0,  4672+   16,               4672+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  4672+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                            4706+    0,     2);
		API_polar::template xo0<    2>(s,     4704+    2,                            4704+    0,     2);
		API_polar::template g  <    4>(s, l, 65520+    0, 65520+    4,  4704+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                            4708+    0,     4);
		API_polar::template xo <    4>(s,     4704+    0,  4704+    4,               4704+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  4704+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                            4712+    0,     8);
		API_polar::template xo <    8>(s,     4704+    0,  4704+    8,               4704+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  4704+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                            4720+    0,    16);
		API_polar::template xo <   16>(s,     4704+    0,  4704+   16,               4704+    0,    16);
		API_polar::template xo <   32>(s,     4672+    0,  4672+   32,               4672+    0,    32);
		API_polar::template xo <   64>(s,     4608+    0,  4608+   64,               4608+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128,  4608+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            4736+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  4736+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                            4746+    0,     2);
		API_polar::template xo0<    2>(s,     4744+    2,                            4744+    0,     2);
		API_polar::template g  <    4>(s, l, 65520+    0, 65520+    4,  4744+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                            4748+    0,     4);
		API_polar::template xo <    4>(s,     4744+    0,  4744+    4,               4744+    0,     4);
		API_polar::template xo <    8>(s,     4736+    0,  4736+    8,               4736+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  4736+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            4752+    0,    16);
		API_polar::template xo <   16>(s,     4736+    0,  4736+   16,               4736+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  4736+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                            4768+    0,    32);
		API_polar::template xo <   32>(s,     4736+    0,  4736+   32,               4736+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  4736+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                            4800+    0,    64);
		API_polar::template xo <   64>(s,     4736+    0,  4736+   64,               4736+    0,    64);
		API_polar::template xo <  128>(s,     4608+    0,  4608+  128,               4608+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256,  4608+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            4868+    0,     4);
		API_polar::template xo0<    4>(s,     4864+    4,                            4864+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  4864+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            4872+    0,     8);
		API_polar::template xo <    8>(s,     4864+    0,  4864+    8,               4864+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  4864+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            4880+    0,    16);
		API_polar::template xo <   16>(s,     4864+    0,  4864+   16,               4864+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  4864+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                            4896+    0,    32);
		API_polar::template xo <   32>(s,     4864+    0,  4864+   32,               4864+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  4864+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                            4928+    0,    64);
		API_polar::template xo <   64>(s,     4864+    0,  4864+   64,               4864+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128,  4864+    0, 65024+  256,   128);
		API_polar::template spc<  128>(s, l, 65280+    0,                            4992+    0,   128);
		API_polar::template xo <  128>(s,     4864+    0,  4864+  128,               4864+    0,   128);
		API_polar::template xo <  256>(s,     4608+    0,  4608+  256,               4608+    0,   256);
		API_polar::template xo <  512>(s,     4096+    0,  4096+  512,               4096+    0,   512);
		API_polar::template g  < 1024>(s, l, 61440+    0, 61440+ 1024,  4096+    0, 61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                            5120+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16,  5120+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            5136+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  5136+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            5144+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  5144+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            5148+    0,     4);
		API_polar::template xo <    4>(s,     5144+    0,  5144+    4,               5144+    0,     4);
		API_polar::template xo <    8>(s,     5136+    0,  5136+    8,               5136+    0,     8);
		API_polar::template xo <   16>(s,     5120+    0,  5120+   16,               5120+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  5120+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            5152+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  5152+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            5160+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  5160+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                            5164+    0,     4);
		API_polar::template xo <    4>(s,     5160+    0,  5160+    4,               5160+    0,     4);
		API_polar::template xo <    8>(s,     5152+    0,  5152+    8,               5152+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  5152+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            5168+    0,    16);
		API_polar::template xo <   16>(s,     5152+    0,  5152+   16,               5152+    0,    16);
		API_polar::template xo <   32>(s,     5120+    0,  5120+   32,               5120+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  5120+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                            5190+    0,     2);
		API_polar::template xo0<    2>(s,     5188+    2,                            5188+    0,     2);
		API_polar::template xo0<    4>(s,     5184+    4,                            5184+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  5184+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            5192+    0,     8);
		API_polar::template xo <    8>(s,     5184+    0,  5184+    8,               5184+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  5184+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            5200+    0,    16);
		API_polar::template xo <   16>(s,     5184+    0,  5184+   16,               5184+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  5184+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                            5216+    0,    32);
		API_polar::template xo <   32>(s,     5184+    0,  5184+   32,               5184+    0,    32);
		API_polar::template xo <   64>(s,     5120+    0,  5120+   64,               5120+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128,  5120+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            5248+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  5248+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            5252+    0,     4);
		API_polar::template xo <    4>(s,     5248+    0,  5248+    4,               5248+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  5248+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            5256+    0,     8);
		API_polar::template xo <    8>(s,     5248+    0,  5248+    8,               5248+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  5248+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            5264+    0,    16);
		API_polar::template xo <   16>(s,     5248+    0,  5248+   16,               5248+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  5248+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                            5280+    0,    32);
		API_polar::template xo <   32>(s,     5248+    0,  5248+   32,               5248+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  5248+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                            5312+    0,    64);
		API_polar::template xo <   64>(s,     5248+    0,  5248+   64,               5248+    0,    64);
		API_polar::template xo <  128>(s,     5120+    0,  5120+  128,               5120+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256,  5120+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            5376+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  5376+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            5380+    0,     4);
		API_polar::template xo <    4>(s,     5376+    0,  5376+    4,               5376+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  5376+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            5384+    0,     8);
		API_polar::template xo <    8>(s,     5376+    0,  5376+    8,               5376+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  5376+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            5392+    0,    16);
		API_polar::template xo <   16>(s,     5376+    0,  5376+   16,               5376+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  5376+    0, 65408+   64,    32);
		API_polar::template h  <   32>(s, l, 65472+    0,                            5408+    0,    32);
		API_polar::template xo <   32>(s,     5376+    0,  5376+   32,               5376+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  5376+    0, 65280+  128,    64);
		API_polar::template h  <   64>(s, l, 65408+    0,                            5440+    0,    64);
		API_polar::template xo <   64>(s,     5376+    0,  5376+   64,               5376+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128,  5376+    0, 65024+  256,   128);
		API_polar::template h  <  128>(s, l, 65280+    0,                            5504+    0,   128);
		API_polar::template xo <  128>(s,     5376+    0,  5376+  128,               5376+    0,   128);
		API_polar::template xo <  256>(s,     5120+    0,  5120+  256,               5120+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512,  5120+    0, 63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            5632+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  5632+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            5636+    0,     4);
		API_polar::template xo <    4>(s,     5632+    0,  5632+    4,               5632+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  5632+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                            5640+    0,     8);
		API_polar::template xo <    8>(s,     5632+    0,  5632+    8,               5632+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  5632+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                            5648+    0,    16);
		API_polar::template xo <   16>(s,     5632+    0,  5632+   16,               5632+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  5632+    0, 65408+   64,    32);
		API_polar::template h  <   32>(s, l, 65472+    0,                            5664+    0,    32);
		API_polar::template xo <   32>(s,     5632+    0,  5632+   32,               5632+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  5632+    0, 65280+  128,    64);
		API_polar::template h  <   64>(s, l, 65408+    0,                            5696+    0,    64);
		API_polar::template xo <   64>(s,     5632+    0,  5632+   64,               5632+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128,  5632+    0, 65024+  256,   128);
		API_polar::template h  <  128>(s, l, 65280+    0,                            5760+    0,   128);
		API_polar::template xo <  128>(s,     5632+    0,  5632+  128,               5632+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256,  5632+    0, 64512+  512,   256);
		API_polar::template h  <  256>(s, l, 65024+    0,                            5888+    0,   256);
		API_polar::template xo <  256>(s,     5632+    0,  5632+  256,               5632+    0,   256);
		API_polar::template xo <  512>(s,     5120+    0,  5120+  512,               5120+    0,   512);
		API_polar::template xo < 1024>(s,     4096+    0,  4096+ 1024,               4096+    0,  1024);
		API_polar::template g  < 2048>(s, l, 57344+    0, 57344+ 2048,  4096+    0, 57344+ 4096,  2048);
		API_polar::template f  < 1024>(   l, 61440+    0, 61440+ 1024,              61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                            6144+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16,  6144+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                            6166+    0,     2);
		API_polar::template xo0<    2>(s,     6164+    2,                            6164+    0,     2);
		API_polar::template xo0<    4>(s,     6160+    4,                            6160+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  6160+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            6168+    0,     8);
		API_polar::template xo <    8>(s,     6160+    0,  6160+    8,               6160+    0,     8);
		API_polar::template xo <   16>(s,     6144+    0,  6144+   16,               6144+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  6144+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            6176+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  6176+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            6180+    0,     4);
		API_polar::template xo <    4>(s,     6176+    0,  6176+    4,               6176+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  6176+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            6184+    0,     8);
		API_polar::template xo <    8>(s,     6176+    0,  6176+    8,               6176+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  6176+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            6192+    0,    16);
		API_polar::template xo <   16>(s,     6176+    0,  6176+   16,               6176+    0,    16);
		API_polar::template xo <   32>(s,     6144+    0,  6144+   32,               6144+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  6144+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            6208+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  6208+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            6212+    0,     4);
		API_polar::template xo <    4>(s,     6208+    0,  6208+    4,               6208+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  6208+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            6216+    0,     8);
		API_polar::template xo <    8>(s,     6208+    0,  6208+    8,               6208+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  6208+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            6224+    0,    16);
		API_polar::template xo <   16>(s,     6208+    0,  6208+   16,               6208+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  6208+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                            6240+    0,    32);
		API_polar::template xo <   32>(s,     6208+    0,  6208+   32,               6208+    0,    32);
		API_polar::template xo <   64>(s,     6144+    0,  6144+   64,               6144+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128,  6144+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            6272+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  6272+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            6276+    0,     4);
		API_polar::template xo <    4>(s,     6272+    0,  6272+    4,               6272+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  6272+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            6280+    0,     8);
		API_polar::template xo <    8>(s,     6272+    0,  6272+    8,               6272+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  6272+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                            6288+    0,    16);
		API_polar::template xo <   16>(s,     6272+    0,  6272+   16,               6272+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  6272+    0, 65408+   64,    32);
		API_polar::template h  <   32>(s, l, 65472+    0,                            6304+    0,    32);
		API_polar::template xo <   32>(s,     6272+    0,  6272+   32,               6272+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  6272+    0, 65280+  128,    64);
		API_polar::template h  <   64>(s, l, 65408+    0,                            6336+    0,    64);
		API_polar::template xo <   64>(s,     6272+    0,  6272+   64,               6272+    0,    64);
		API_polar::template xo <  128>(s,     6144+    0,  6144+  128,               6144+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256,  6144+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            6400+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  6400+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                            6404+    0,     4);
		API_polar::template xo <    4>(s,     6400+    0,  6400+    4,               6400+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  6400+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                            6408+    0,     8);
		API_polar::template xo <    8>(s,     6400+    0,  6400+    8,               6400+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  6400+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                            6416+    0,    16);
		API_polar::template xo <   16>(s,     6400+    0,  6400+   16,               6400+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  6400+    0, 65408+   64,    32);
		API_polar::template h  <   32>(s, l, 65472+    0,                            6432+    0,    32);
		API_polar::template xo <   32>(s,     6400+    0,  6400+   32,               6400+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  6400+    0, 65280+  128,    64);
		API_polar::template h  <   64>(s, l, 65408+    0,                            6464+    0,    64);
		API_polar::template xo <   64>(s,     6400+    0,  6400+   64,               6400+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128,  6400+    0, 65024+  256,   128);
		API_polar::template h  <  128>(s, l, 65280+    0,                            6528+    0,   128);
		API_polar::template xo <  128>(s,     6400+    0,  6400+  128,               6400+    0,   128);
		API_polar::template xo <  256>(s,     6144+    0,  6144+  256,               6144+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512,  6144+    0, 63488+ 1024,   512);
		API_polar::template spc<  512>(s, l, 64512+    0,                            6656+    0,   512);
		API_polar::template xo <  512>(s,     6144+    0,  6144+  512,               6144+    0,   512);
		API_polar::template g  < 1024>(s, l, 61440+    0, 61440+ 1024,  6144+    0, 61440+ 2048,  1024);
		API_polar::template spc< 1024>(s, l, 63488+    0,                            7168+    0,  1024);
		API_polar::template xo < 1024>(s,     6144+    0,  6144+ 1024,               6144+    0,  1024);
		API_polar::template xo < 2048>(s,     4096+    0,  4096+ 2048,               4096+    0,  2048);
		API_polar::template xo < 4096>(s,        0+    0,     0+ 4096,                  0+    0,  4096);
		API_polar::template g  < 8192>(s, l, 32768+    0, 32768+ 8192,     0+    0, 32768+16384,  8192);
		API_polar::template f  < 4096>(   l, 49152+    0, 49152+ 4096,              49152+ 8192,  4096);
		API_polar::template f  < 2048>(   l, 57344+    0, 57344+ 2048,              57344+ 4096,  2048);
		API_polar::template f  < 1024>(   l, 61440+    0, 61440+ 1024,              61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template rep<   64>(s, l, 65408+    0,                            8192+    0,    64);
		API_polar::template gr <   64>(s, l, 65280+    0, 65280+   64,  8192+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                            8256+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32,  8256+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                            8302+    0,     2);
		API_polar::template xo0<    2>(s,     8300+    2,                            8300+    0,     2);
		API_polar::template xo0<    4>(s,     8296+    4,                            8296+    0,     4);
		API_polar::template xo0<    8>(s,     8288+    8,                            8288+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  8288+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            8308+    0,     4);
		API_polar::template xo0<    4>(s,     8304+    4,                            8304+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  8304+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            8312+    0,     8);
		API_polar::template xo <    8>(s,     8304+    0,  8304+    8,               8304+    0,     8);
		API_polar::template xo <   16>(s,     8288+    0,  8288+   16,               8288+    0,    16);
		API_polar::template xo <   32>(s,     8256+    0,  8256+   32,               8256+    0,    32);
		API_polar::template xo <   64>(s,     8192+    0,  8192+   64,               8192+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128,  8192+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            8348+    0,     4);
		API_polar::template xo0<    4>(s,     8344+    4,                            8344+    0,     4);
		API_polar::template xo0<    8>(s,     8336+    8,                            8336+    0,     8);
		API_polar::template xo0<   16>(s,     8320+   16,                            8320+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  8320+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            8360+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  8360+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            8364+    0,     4);
		API_polar::template xo <    4>(s,     8360+    0,  8360+    4,               8360+    0,     4);
		API_polar::template xo0<    8>(s,     8352+    8,                            8352+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  8352+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            8368+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  8368+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            8372+    0,     4);
		API_polar::template xo <    4>(s,     8368+    0,  8368+    4,               8368+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  8368+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            8376+    0,     8);
		API_polar::template xo <    8>(s,     8368+    0,  8368+    8,               8368+    0,     8);
		API_polar::template xo <   16>(s,     8352+    0,  8352+   16,               8352+    0,    16);
		API_polar::template xo <   32>(s,     8320+    0,  8320+   32,               8320+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  8320+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            8384+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  8384+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            8392+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  8392+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            8396+    0,     4);
		API_polar::template xo <    4>(s,     8392+    0,  8392+    4,               8392+    0,     4);
		API_polar::template xo <    8>(s,     8384+    0,  8384+    8,               8384+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  8384+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            8400+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  8400+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            8404+    0,     4);
		API_polar::template xo <    4>(s,     8400+    0,  8400+    4,               8400+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  8400+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                            8408+    0,     8);
		API_polar::template xo <    8>(s,     8400+    0,  8400+    8,               8400+    0,     8);
		API_polar::template xo <   16>(s,     8384+    0,  8384+   16,               8384+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  8384+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                            8418+    0,     2);
		API_polar::template xo0<    2>(s,     8416+    2,                            8416+    0,     2);
		API_polar::template g  <    4>(s, l, 65520+    0, 65520+    4,  8416+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                            8420+    0,     4);
		API_polar::template xo <    4>(s,     8416+    0,  8416+    4,               8416+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  8416+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                            8424+    0,     8);
		API_polar::template xo <    8>(s,     8416+    0,  8416+    8,               8416+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  8416+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                            8432+    0,    16);
		API_polar::template xo <   16>(s,     8416+    0,  8416+   16,               8416+    0,    16);
		API_polar::template xo <   32>(s,     8384+    0,  8384+   32,               8384+    0,    32);
		API_polar::template xo <   64>(s,     8320+    0,  8320+   64,               8320+    0,    64);
		API_polar::template xo <  128>(s,     8192+    0,  8192+  128,               8192+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256,  8192+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            8464+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  8464+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            8472+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  8472+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            8476+    0,     4);
		API_polar::template xo <    4>(s,     8472+    0,  8472+    4,               8472+    0,     4);
		API_polar::template xo <    8>(s,     8464+    0,  8464+    8,               8464+    0,     8);
		API_polar::template xo0<   16>(s,     8448+   16,                            8448+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  8448+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            8480+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  8480+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            8488+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  8488+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            8492+    0,     4);
		API_polar::template xo <    4>(s,     8488+    0,  8488+    4,               8488+    0,     4);
		API_polar::template xo <    8>(s,     8480+    0,  8480+    8,               8480+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  8480+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            8496+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  8496+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                            8500+    0,     4);
		API_polar::template xo <    4>(s,     8496+    0,  8496+    4,               8496+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  8496+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                            8504+    0,     8);
		API_polar::template xo <    8>(s,     8496+    0,  8496+    8,               8496+    0,     8);
		API_polar::template xo <   16>(s,     8480+    0,  8480+   16,               8480+    0,    16);
		API_polar::template xo <   32>(s,     8448+    0,  8448+   32,               8448+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  8448+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            8512+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  8512+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                            8522+    0,     2);
		API_polar::template xo0<    2>(s,     8520+    2,                            8520+    0,     2);
		API_polar::template g  <    4>(s, l, 65520+    0, 65520+    4,  8520+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                            8524+    0,     4);
		API_polar::template xo <    4>(s,     8520+    0,  8520+    4,               8520+    0,     4);
		API_polar::template xo <    8>(s,     8512+    0,  8512+    8,               8512+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  8512+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            8528+    0,    16);
		API_polar::template xo <   16>(s,     8512+    0,  8512+   16,               8512+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  8512+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                            8544+    0,    32);
		API_polar::template xo <   32>(s,     8512+    0,  8512+   32,               8512+    0,    32);
		API_polar::template xo <   64>(s,     8448+    0,  8448+   64,               8448+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128,  8448+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            8580+    0,     4);
		API_polar::template xo0<    4>(s,     8576+    4,                            8576+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  8576+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            8584+    0,     8);
		API_polar::template xo <    8>(s,     8576+    0,  8576+    8,               8576+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  8576+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            8592+    0,    16);
		API_polar::template xo <   16>(s,     8576+    0,  8576+   16,               8576+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  8576+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                            8608+    0,    32);
		API_polar::template xo <   32>(s,     8576+    0,  8576+   32,               8576+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  8576+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                            8640+    0,    64);
		API_polar::template xo <   64>(s,     8576+    0,  8576+   64,               8576+    0,    64);
		API_polar::template xo <  128>(s,     8448+    0,  8448+  128,               8448+    0,   128);
		API_polar::template xo <  256>(s,     8192+    0,  8192+  256,               8192+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512,  8192+    0, 63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                            8704+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16,  8704+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            8720+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  8720+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                            8730+    0,     2);
		API_polar::template xo0<    2>(s,     8728+    2,                            8728+    0,     2);
		API_polar::template g  <    4>(s, l, 65520+    0, 65520+    4,  8728+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                            8732+    0,     4);
		API_polar::template xo <    4>(s,     8728+    0,  8728+    4,               8728+    0,     4);
		API_polar::template xo <    8>(s,     8720+    0,  8720+    8,               8720+    0,     8);
		API_polar::template xo <   16>(s,     8704+    0,  8704+   16,               8704+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  8704+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                            8742+    0,     2);
		API_polar::template xo0<    2>(s,     8740+    2,                            8740+    0,     2);
		API_polar::template xo0<    4>(s,     8736+    4,                            8736+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  8736+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            8744+    0,     8);
		API_polar::template xo <    8>(s,     8736+    0,  8736+    8,               8736+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  8736+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            8752+    0,    16);
		API_polar::template xo <   16>(s,     8736+    0,  8736+   16,               8736+    0,    16);
		API_polar::template xo <   32>(s,     8704+    0,  8704+   32,               8704+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  8704+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            8768+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  8768+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            8772+    0,     4);
		API_polar::template xo <    4>(s,     8768+    0,  8768+    4,               8768+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  8768+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            8776+    0,     8);
		API_polar::template xo <    8>(s,     8768+    0,  8768+    8,               8768+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  8768+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            8784+    0,    16);
		API_polar::template xo <   16>(s,     8768+    0,  8768+   16,               8768+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  8768+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                            8800+    0,    32);
		API_polar::template xo <   32>(s,     8768+    0,  8768+   32,               8768+    0,    32);
		API_polar::template xo <   64>(s,     8704+    0,  8704+   64,               8704+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128,  8704+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            8832+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  8832+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            8836+    0,     4);
		API_polar::template xo <    4>(s,     8832+    0,  8832+    4,               8832+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  8832+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            8840+    0,     8);
		API_polar::template xo <    8>(s,     8832+    0,  8832+    8,               8832+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  8832+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            8848+    0,    16);
		API_polar::template xo <   16>(s,     8832+    0,  8832+   16,               8832+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  8832+    0, 65408+   64,    32);
		API_polar::template h  <   32>(s, l, 65472+    0,                            8864+    0,    32);
		API_polar::template xo <   32>(s,     8832+    0,  8832+   32,               8832+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  8832+    0, 65280+  128,    64);
		API_polar::template h  <   64>(s, l, 65408+    0,                            8896+    0,    64);
		API_polar::template xo <   64>(s,     8832+    0,  8832+   64,               8832+    0,    64);
		API_polar::template xo <  128>(s,     8704+    0,  8704+  128,               8704+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256,  8704+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            8960+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  8960+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            8964+    0,     4);
		API_polar::template xo <    4>(s,     8960+    0,  8960+    4,               8960+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  8960+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                            8968+    0,     8);
		API_polar::template xo <    8>(s,     8960+    0,  8960+    8,               8960+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  8960+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                            8976+    0,    16);
		API_polar::template xo <   16>(s,     8960+    0,  8960+   16,               8960+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  8960+    0, 65408+   64,    32);
		API_polar::template h  <   32>(s, l, 65472+    0,                            8992+    0,    32);
		API_polar::template xo <   32>(s,     8960+    0,  8960+   32,               8960+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  8960+    0, 65280+  128,    64);
		API_polar::template h  <   64>(s, l, 65408+    0,                            9024+    0,    64);
		API_polar::template xo <   64>(s,     8960+    0,  8960+   64,               8960+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128,  8960+    0, 65024+  256,   128);
		API_polar::template h  <  128>(s, l, 65280+    0,                            9088+    0,   128);
		API_polar::template xo <  128>(s,     8960+    0,  8960+  128,               8960+    0,   128);
		API_polar::template xo <  256>(s,     8704+    0,  8704+  256,               8704+    0,   256);
		API_polar::template xo <  512>(s,     8192+    0,  8192+  512,               8192+    0,   512);
		API_polar::template g  < 1024>(s, l, 61440+    0, 61440+ 1024,  8192+    0, 61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                            9230+    0,     2);
		API_polar::template xo0<    2>(s,     9228+    2,                            9228+    0,     2);
		API_polar::template xo0<    4>(s,     9224+    4,                            9224+    0,     4);
		API_polar::template xo0<    8>(s,     9216+    8,                            9216+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  9216+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            9232+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  9232+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            9236+    0,     4);
		API_polar::template xo <    4>(s,     9232+    0,  9232+    4,               9232+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  9232+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            9240+    0,     8);
		API_polar::template xo <    8>(s,     9232+    0,  9232+    8,               9232+    0,     8);
		API_polar::template xo <   16>(s,     9216+    0,  9216+   16,               9216+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  9216+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            9248+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  9248+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            9252+    0,     4);
		API_polar::template xo <    4>(s,     9248+    0,  9248+    4,               9248+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  9248+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            9256+    0,     8);
		API_polar::template xo <    8>(s,     9248+    0,  9248+    8,               9248+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  9248+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            9264+    0,    16);
		API_polar::template xo <   16>(s,     9248+    0,  9248+   16,               9248+    0,    16);
		API_polar::template xo <   32>(s,     9216+    0,  9216+   32,               9216+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  9216+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            9280+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  9280+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            9284+    0,     4);
		API_polar::template xo <    4>(s,     9280+    0,  9280+    4,               9280+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  9280+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            9288+    0,     8);
		API_polar::template xo <    8>(s,     9280+    0,  9280+    8,               9280+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  9280+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                            9296+    0,    16);
		API_polar::template xo <   16>(s,     9280+    0,  9280+   16,               9280+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  9280+    0, 65408+   64,    32);
		API_polar::template h  <   32>(s, l, 65472+    0,                            9312+    0,    32);
		API_polar::template xo <   32>(s,     9280+    0,  9280+   32,               9280+    0,    32);
		API_polar::template xo <   64>(s,     9216+    0,  9216+   64,               9216+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128,  9216+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            9344+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  9344+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                            9348+    0,     4);
		API_polar::template xo <    4>(s,     9344+    0,  9344+    4,               9344+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  9344+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                            9352+    0,     8);
		API_polar::template xo <    8>(s,     9344+    0,  9344+    8,               9344+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  9344+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                            9360+    0,    16);
		API_polar::template xo <   16>(s,     9344+    0,  9344+   16,               9344+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  9344+    0, 65408+   64,    32);
		API_polar::template h  <   32>(s, l, 65472+    0,                            9376+    0,    32);
		API_polar::template xo <   32>(s,     9344+    0,  9344+   32,               9344+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  9344+    0, 65280+  128,    64);
		API_polar::template h  <   64>(s, l, 65408+    0,                            9408+    0,    64);
		API_polar::template xo <   64>(s,     9344+    0,  9344+   64,               9344+    0,    64);
		API_polar::template xo <  128>(s,     9216+    0,  9216+  128,               9216+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256,  9216+    0, 64512+  512,   256);
		API_polar::template spc<  256>(s, l, 65024+    0,                            9472+    0,   256);
		API_polar::template xo <  256>(s,     9216+    0,  9216+  256,               9216+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512,  9216+    0, 63488+ 1024,   512);
		API_polar::template spc<  512>(s, l, 64512+    0,                            9728+    0,   512);
		API_polar::template xo <  512>(s,     9216+    0,  9216+  512,               9216+    0,   512);
		API_polar::template xo < 1024>(s,     8192+    0,  8192+ 1024,               8192+    0,  1024);
		API_polar::template g  < 2048>(s, l, 57344+    0, 57344+ 2048,  8192+    0, 57344+ 4096,  2048);
		API_polar::template f  < 1024>(   l, 61440+    0, 61440+ 1024,              61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           10240+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 10240+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           10248+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 10248+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           10252+    0,     4);
		API_polar::template xo <    4>(s,    10248+    0, 10248+    4,              10248+    0,     4);
		API_polar::template xo <    8>(s,    10240+    0, 10240+    8,              10240+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 10240+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           10256+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 10256+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           10260+    0,     4);
		API_polar::template xo <    4>(s,    10256+    0, 10256+    4,              10256+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 10256+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           10264+    0,     8);
		API_polar::template xo <    8>(s,    10256+    0, 10256+    8,              10256+    0,     8);
		API_polar::template xo <   16>(s,    10240+    0, 10240+   16,              10240+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 10240+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           10272+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 10272+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           10276+    0,     4);
		API_polar::template xo <    4>(s,    10272+    0, 10272+    4,              10272+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 10272+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                           10280+    0,     8);
		API_polar::template xo <    8>(s,    10272+    0, 10272+    8,              10272+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 10272+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                           10288+    0,    16);
		API_polar::template xo <   16>(s,    10272+    0, 10272+   16,              10272+    0,    16);
		API_polar::template xo <   32>(s,    10240+    0, 10240+   32,              10240+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 10240+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                           10306+    0,     2);
		API_polar::template xo0<    2>(s,    10304+    2,                           10304+    0,     2);
		API_polar::template g  <    4>(s, l, 65520+    0, 65520+    4, 10304+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           10308+    0,     4);
		API_polar::template xo <    4>(s,    10304+    0, 10304+    4,              10304+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 10304+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                           10312+    0,     8);
		API_polar::template xo <    8>(s,    10304+    0, 10304+    8,              10304+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 10304+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                           10320+    0,    16);
		API_polar::template xo <   16>(s,    10304+    0, 10304+   16,              10304+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 10304+    0, 65408+   64,    32);
		API_polar::template h  <   32>(s, l, 65472+    0,                           10336+    0,    32);
		API_polar::template xo <   32>(s,    10304+    0, 10304+   32,              10304+    0,    32);
		API_polar::template xo <   64>(s,    10240+    0, 10240+   64,              10240+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 10240+    0, 65024+  256,   128);
		API_polar::template spc<  128>(s, l, 65280+    0,                           10368+    0,   128);
		API_polar::template xo <  128>(s,    10240+    0, 10240+  128,              10240+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 10240+    0, 64512+  512,   256);
		API_polar::template spc<  256>(s, l, 65024+    0,                           10496+    0,   256);
		API_polar::template xo <  256>(s,    10240+    0, 10240+  256,              10240+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512, 10240+    0, 63488+ 1024,   512);
		API_polar::template spc<  512>(s, l, 64512+    0,                           10752+    0,   512);
		API_polar::template xo <  512>(s,    10240+    0, 10240+  512,              10240+    0,   512);
		API_polar::template g  < 1024>(s, l, 61440+    0, 61440+ 1024, 10240+    0, 61440+ 2048,  1024);
		API_polar::template spc< 1024>(s, l, 63488+    0,                           11264+    0,  1024);
		API_polar::template xo < 1024>(s,    10240+    0, 10240+ 1024,              10240+    0,  1024);
		API_polar::template xo < 2048>(s,     8192+    0,  8192+ 2048,               8192+    0,  2048);
		API_polar::template g  < 4096>(s, l, 49152+    0, 49152+ 4096,  8192+    0, 49152+ 8192,  4096);
		API_polar::template f  < 2048>(   l, 57344+    0, 57344+ 2048,              57344+ 4096,  2048);
		API_polar::template f  < 1024>(   l, 61440+    0, 61440+ 1024,              61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           12288+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 12288+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           12296+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 12296+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           12300+    0,     4);
		API_polar::template xo <    4>(s,    12296+    0, 12296+    4,              12296+    0,     4);
		API_polar::template xo <    8>(s,    12288+    0, 12288+    8,              12288+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 12288+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                           12306+    0,     2);
		API_polar::template xo0<    2>(s,    12304+    2,                           12304+    0,     2);
		API_polar::template g  <    4>(s, l, 65520+    0, 65520+    4, 12304+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           12308+    0,     4);
		API_polar::template xo <    4>(s,    12304+    0, 12304+    4,              12304+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 12304+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                           12312+    0,     8);
		API_polar::template xo <    8>(s,    12304+    0, 12304+    8,              12304+    0,     8);
		API_polar::template xo <   16>(s,    12288+    0, 12288+   16,              12288+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 12288+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           12320+    0,    32);
		API_polar::template xo <   32>(s,    12288+    0, 12288+   32,              12288+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 12288+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           12352+    0,    64);
		API_polar::template xo <   64>(s,    12288+    0, 12288+   64,              12288+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 12288+    0, 65024+  256,   128);
		API_polar::template spc<  128>(s, l, 65280+    0,                           12416+    0,   128);
		API_polar::template xo <  128>(s,    12288+    0, 12288+  128,              12288+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 12288+    0, 64512+  512,   256);
		API_polar::template spc<  256>(s, l, 65024+    0,                           12544+    0,   256);
		API_polar::template xo <  256>(s,    12288+    0, 12288+  256,              12288+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512, 12288+    0, 63488+ 1024,   512);
		API_polar::template spc<  512>(s, l, 64512+    0,                           12800+    0,   512);
		API_polar::template xo <  512>(s,    12288+    0, 12288+  512,              12288+    0,   512);
		API_polar::template g  < 1024>(s, l, 61440+    0, 61440+ 1024, 12288+    0, 61440+ 2048,  1024);
		API_polar::template h  < 1024>(s, l, 63488+    0,                           13312+    0,  1024);
		API_polar::template xo < 1024>(s,    12288+    0, 12288+ 1024,              12288+    0,  1024);
		API_polar::template g  < 2048>(s, l, 57344+    0, 57344+ 2048, 12288+    0, 57344+ 4096,  2048);
		API_polar::template h  < 2048>(s, l, 61440+    0,                           14336+    0,  2048);
		API_polar::template xo < 2048>(s,    12288+    0, 12288+ 2048,              12288+    0,  2048);
		API_polar::template xo < 4096>(s,     8192+    0,  8192+ 4096,               8192+    0,  4096);
		API_polar::template xo < 8192>(s,        0+    0,     0+ 8192,                  0+    0,  8192);
		API_polar::template g  <16384>(s, l,     0+    0,     0+16384,     0+    0,     0+32768, 16384);
		API_polar::template f  < 8192>(   l, 32768+    0, 32768+ 8192,              32768+16384,  8192);
		API_polar::template f  < 4096>(   l, 49152+    0, 49152+ 4096,              49152+ 8192,  4096);
		API_polar::template f  < 2048>(   l, 57344+    0, 57344+ 2048,              57344+ 4096,  2048);
		API_polar::template f  < 1024>(   l, 61440+    0, 61440+ 1024,              61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template g0 <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           16440+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 16440+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           16444+    0,     4);
		API_polar::template xo <    4>(s,    16440+    0, 16440+    4,              16440+    0,     4);
		API_polar::template xo0<    8>(s,    16432+    8,                           16432+    0,     8);
		API_polar::template xo0<   16>(s,    16416+   16,                           16416+    0,    16);
		API_polar::template xo0<   32>(s,    16384+   32,                           16384+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 16384+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           16448+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 16448+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           16464+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 16464+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           16472+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 16472+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           16476+    0,     4);
		API_polar::template xo <    4>(s,    16472+    0, 16472+    4,              16472+    0,     4);
		API_polar::template xo <    8>(s,    16464+    0, 16464+    8,              16464+    0,     8);
		API_polar::template xo <   16>(s,    16448+    0, 16448+   16,              16448+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 16448+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           16480+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 16480+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           16488+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 16488+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           16492+    0,     4);
		API_polar::template xo <    4>(s,    16488+    0, 16488+    4,              16488+    0,     4);
		API_polar::template xo <    8>(s,    16480+    0, 16480+    8,              16480+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 16480+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           16496+    0,    16);
		API_polar::template xo <   16>(s,    16480+    0, 16480+   16,              16480+    0,    16);
		API_polar::template xo <   32>(s,    16448+    0, 16448+   32,              16448+    0,    32);
		API_polar::template xo <   64>(s,    16384+    0, 16384+   64,              16384+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 16384+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           16512+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 16512+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           16528+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 16528+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                           16538+    0,     2);
		API_polar::template xo0<    2>(s,    16536+    2,                           16536+    0,     2);
		API_polar::template g  <    4>(s, l, 65520+    0, 65520+    4, 16536+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           16540+    0,     4);
		API_polar::template xo <    4>(s,    16536+    0, 16536+    4,              16536+    0,     4);
		API_polar::template xo <    8>(s,    16528+    0, 16528+    8,              16528+    0,     8);
		API_polar::template xo <   16>(s,    16512+    0, 16512+   16,              16512+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 16512+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           16548+    0,     4);
		API_polar::template xo0<    4>(s,    16544+    4,                           16544+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 16544+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           16552+    0,     8);
		API_polar::template xo <    8>(s,    16544+    0, 16544+    8,              16544+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 16544+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           16560+    0,    16);
		API_polar::template xo <   16>(s,    16544+    0, 16544+   16,              16544+    0,    16);
		API_polar::template xo <   32>(s,    16512+    0, 16512+   32,              16512+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 16512+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           16576+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 16576+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           16580+    0,     4);
		API_polar::template xo <    4>(s,    16576+    0, 16576+    4,              16576+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 16576+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           16584+    0,     8);
		API_polar::template xo <    8>(s,    16576+    0, 16576+    8,              16576+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 16576+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           16592+    0,    16);
		API_polar::template xo <   16>(s,    16576+    0, 16576+   16,              16576+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 16576+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           16608+    0,    32);
		API_polar::template xo <   32>(s,    16576+    0, 16576+   32,              16576+    0,    32);
		API_polar::template xo <   64>(s,    16512+    0, 16512+   64,              16512+    0,    64);
		API_polar::template xo <  128>(s,    16384+    0, 16384+  128,              16384+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 16384+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                           16654+    0,     2);
		API_polar::template xo0<    2>(s,    16652+    2,                           16652+    0,     2);
		API_polar::template xo0<    4>(s,    16648+    4,                           16648+    0,     4);
		API_polar::template xo0<    8>(s,    16640+    8,                           16640+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 16640+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           16656+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 16656+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           16660+    0,     4);
		API_polar::template xo <    4>(s,    16656+    0, 16656+    4,              16656+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 16656+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           16664+    0,     8);
		API_polar::template xo <    8>(s,    16656+    0, 16656+    8,              16656+    0,     8);
		API_polar::template xo <   16>(s,    16640+    0, 16640+   16,              16640+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 16640+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           16672+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 16672+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           16676+    0,     4);
		API_polar::template xo <    4>(s,    16672+    0, 16672+    4,              16672+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 16672+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           16680+    0,     8);
		API_polar::template xo <    8>(s,    16672+    0, 16672+    8,              16672+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 16672+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           16688+    0,    16);
		API_polar::template xo <   16>(s,    16672+    0, 16672+   16,              16672+    0,    16);
		API_polar::template xo <   32>(s,    16640+    0, 16640+   32,              16640+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 16640+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           16704+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 16704+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           16708+    0,     4);
		API_polar::template xo <    4>(s,    16704+    0, 16704+    4,              16704+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 16704+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           16712+    0,     8);
		API_polar::template xo <    8>(s,    16704+    0, 16704+    8,              16704+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 16704+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                           16720+    0,    16);
		API_polar::template xo <   16>(s,    16704+    0, 16704+   16,              16704+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 16704+    0, 65408+   64,    32);
		API_polar::template h  <   32>(s, l, 65472+    0,                           16736+    0,    32);
		API_polar::template xo <   32>(s,    16704+    0, 16704+   32,              16704+    0,    32);
		API_polar::template xo <   64>(s,    16640+    0, 16640+   64,              16640+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 16640+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           16768+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 16768+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           16772+    0,     4);
		API_polar::template xo <    4>(s,    16768+    0, 16768+    4,              16768+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 16768+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                           16776+    0,     8);
		API_polar::template xo <    8>(s,    16768+    0, 16768+    8,              16768+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 16768+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                           16784+    0,    16);
		API_polar::template xo <   16>(s,    16768+    0, 16768+   16,              16768+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 16768+    0, 65408+   64,    32);
		API_polar::template h  <   32>(s, l, 65472+    0,                           16800+    0,    32);
		API_polar::template xo <   32>(s,    16768+    0, 16768+   32,              16768+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 16768+    0, 65280+  128,    64);
		API_polar::template h  <   64>(s, l, 65408+    0,                           16832+    0,    64);
		API_polar::template xo <   64>(s,    16768+    0, 16768+   64,              16768+    0,    64);
		API_polar::template xo <  128>(s,    16640+    0, 16640+  128,              16640+    0,   128);
		API_polar::template xo <  256>(s,    16384+    0, 16384+  256,              16384+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512, 16384+    0, 63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           16896+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 16896+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           16904+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 16904+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           16908+    0,     4);
		API_polar::template xo <    4>(s,    16904+    0, 16904+    4,              16904+    0,     4);
		API_polar::template xo <    8>(s,    16896+    0, 16896+    8,              16896+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 16896+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           16912+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 16912+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           16916+    0,     4);
		API_polar::template xo <    4>(s,    16912+    0, 16912+    4,              16912+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 16912+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           16920+    0,     8);
		API_polar::template xo <    8>(s,    16912+    0, 16912+    8,              16912+    0,     8);
		API_polar::template xo <   16>(s,    16896+    0, 16896+   16,              16896+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 16896+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           16928+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 16928+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           16932+    0,     4);
		API_polar::template xo <    4>(s,    16928+    0, 16928+    4,              16928+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 16928+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                           16936+    0,     8);
		API_polar::template xo <    8>(s,    16928+    0, 16928+    8,              16928+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 16928+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                           16944+    0,    16);
		API_polar::template xo <   16>(s,    16928+    0, 16928+   16,              16928+    0,    16);
		API_polar::template xo <   32>(s,    16896+    0, 16896+   32,              16896+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 16896+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                           16962+    0,     2);
		API_polar::template xo0<    2>(s,    16960+    2,                           16960+    0,     2);
		API_polar::template g  <    4>(s, l, 65520+    0, 65520+    4, 16960+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           16964+    0,     4);
		API_polar::template xo <    4>(s,    16960+    0, 16960+    4,              16960+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 16960+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                           16968+    0,     8);
		API_polar::template xo <    8>(s,    16960+    0, 16960+    8,              16960+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 16960+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                           16976+    0,    16);
		API_polar::template xo <   16>(s,    16960+    0, 16960+   16,              16960+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 16960+    0, 65408+   64,    32);
		API_polar::template h  <   32>(s, l, 65472+    0,                           16992+    0,    32);
		API_polar::template xo <   32>(s,    16960+    0, 16960+   32,              16960+    0,    32);
		API_polar::template xo <   64>(s,    16896+    0, 16896+   64,              16896+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 16896+    0, 65024+  256,   128);
		API_polar::template spc<  128>(s, l, 65280+    0,                           17024+    0,   128);
		API_polar::template xo <  128>(s,    16896+    0, 16896+  128,              16896+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 16896+    0, 64512+  512,   256);
		API_polar::template spc<  256>(s, l, 65024+    0,                           17152+    0,   256);
		API_polar::template xo <  256>(s,    16896+    0, 16896+  256,              16896+    0,   256);
		API_polar::template xo <  512>(s,    16384+    0, 16384+  512,              16384+    0,   512);
		API_polar::template g  < 1024>(s, l, 61440+    0, 61440+ 1024, 16384+    0, 61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           17408+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 17408+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           17416+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 17416+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           17420+    0,     4);
		API_polar::template xo <    4>(s,    17416+    0, 17416+    4,              17416+    0,     4);
		API_polar::template xo <    8>(s,    17408+    0, 17408+    8,              17408+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 17408+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           17424+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 17424+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           17428+    0,     4);
		API_polar::template xo <    4>(s,    17424+    0, 17424+    4,              17424+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 17424+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                           17432+    0,     8);
		API_polar::template xo <    8>(s,    17424+    0, 17424+    8,              17424+    0,     8);
		API_polar::template xo <   16>(s,    17408+    0, 17408+   16,              17408+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 17408+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           17440+    0,    32);
		API_polar::template xo <   32>(s,    17408+    0, 17408+   32,              17408+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 17408+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           17472+    0,    64);
		API_polar::template xo <   64>(s,    17408+    0, 17408+   64,              17408+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 17408+    0, 65024+  256,   128);
		API_polar::template spc<  128>(s, l, 65280+    0,                           17536+    0,   128);
		API_polar::template xo <  128>(s,    17408+    0, 17408+  128,              17408+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 17408+    0, 64512+  512,   256);
		API_polar::template spc<  256>(s, l, 65024+    0,                           17664+    0,   256);
		API_polar::template xo <  256>(s,    17408+    0, 17408+  256,              17408+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512, 17408+    0, 63488+ 1024,   512);
		API_polar::template spc<  512>(s, l, 64512+    0,                           17920+    0,   512);
		API_polar::template xo <  512>(s,    17408+    0, 17408+  512,              17408+    0,   512);
		API_polar::template xo < 1024>(s,    16384+    0, 16384+ 1024,              16384+    0,  1024);
		API_polar::template g  < 2048>(s, l, 57344+    0, 57344+ 2048, 16384+    0, 57344+ 4096,  2048);
		API_polar::template f  < 1024>(   l, 61440+    0, 61440+ 1024,              61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           18432+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 18432+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           18440+    0,     8);
		API_polar::template xo <    8>(s,    18432+    0, 18432+    8,              18432+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 18432+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           18448+    0,    16);
		API_polar::template xo <   16>(s,    18432+    0, 18432+   16,              18432+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 18432+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           18464+    0,    32);
		API_polar::template xo <   32>(s,    18432+    0, 18432+   32,              18432+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 18432+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           18496+    0,    64);
		API_polar::template xo <   64>(s,    18432+    0, 18432+   64,              18432+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 18432+    0, 65024+  256,   128);
		API_polar::template spc<  128>(s, l, 65280+    0,                           18560+    0,   128);
		API_polar::template xo <  128>(s,    18432+    0, 18432+  128,              18432+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 18432+    0, 64512+  512,   256);
		API_polar::template spc<  256>(s, l, 65024+    0,                           18688+    0,   256);
		API_polar::template xo <  256>(s,    18432+    0, 18432+  256,              18432+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512, 18432+    0, 63488+ 1024,   512);
		API_polar::template h  <  512>(s, l, 64512+    0,                           18944+    0,   512);
		API_polar::template xo <  512>(s,    18432+    0, 18432+  512,              18432+    0,   512);
		API_polar::template g  < 1024>(s, l, 61440+    0, 61440+ 1024, 18432+    0, 61440+ 2048,  1024);
		API_polar::template h  < 1024>(s, l, 63488+    0,                           19456+    0,  1024);
		API_polar::template xo < 1024>(s,    18432+    0, 18432+ 1024,              18432+    0,  1024);
		API_polar::template xo < 2048>(s,    16384+    0, 16384+ 2048,              16384+    0,  2048);
		API_polar::template g  < 4096>(s, l, 49152+    0, 49152+ 4096, 16384+    0, 49152+ 8192,  4096);
		API_polar::template f  < 2048>(   l, 57344+    0, 57344+ 2048,              57344+ 4096,  2048);
		API_polar::template f  < 1024>(   l, 61440+    0, 61440+ 1024,              61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           20480+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 20480+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           20484+    0,     4);
		API_polar::template xo <    4>(s,    20480+    0, 20480+    4,              20480+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 20480+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           20488+    0,     8);
		API_polar::template xo <    8>(s,    20480+    0, 20480+    8,              20480+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 20480+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           20496+    0,    16);
		API_polar::template xo <   16>(s,    20480+    0, 20480+   16,              20480+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 20480+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           20512+    0,    32);
		API_polar::template xo <   32>(s,    20480+    0, 20480+   32,              20480+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 20480+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           20544+    0,    64);
		API_polar::template xo <   64>(s,    20480+    0, 20480+   64,              20480+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 20480+    0, 65024+  256,   128);
		API_polar::template h  <  128>(s, l, 65280+    0,                           20608+    0,   128);
		API_polar::template xo <  128>(s,    20480+    0, 20480+  128,              20480+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 20480+    0, 64512+  512,   256);
		API_polar::template h  <  256>(s, l, 65024+    0,                           20736+    0,   256);
		API_polar::template xo <  256>(s,    20480+    0, 20480+  256,              20480+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512, 20480+    0, 63488+ 1024,   512);
		API_polar::template h  <  512>(s, l, 64512+    0,                           20992+    0,   512);
		API_polar::template xo <  512>(s,    20480+    0, 20480+  512,              20480+    0,   512);
		API_polar::template g  < 1024>(s, l, 61440+    0, 61440+ 1024, 20480+    0, 61440+ 2048,  1024);
		API_polar::template h  < 1024>(s, l, 63488+    0,                           21504+    0,  1024);
		API_polar::template xo < 1024>(s,    20480+    0, 20480+ 1024,              20480+    0,  1024);
		API_polar::template g  < 2048>(s, l, 57344+    0, 57344+ 2048, 20480+    0, 57344+ 4096,  2048);
		API_polar::template h  < 2048>(s, l, 61440+    0,                           22528+    0,  2048);
		API_polar::template xo < 2048>(s,    20480+    0, 20480+ 2048,              20480+    0,  2048);
		API_polar::template xo < 4096>(s,    16384+    0, 16384+ 4096,              16384+    0,  4096);
		API_polar::template g  < 8192>(s, l, 32768+    0, 32768+ 8192, 16384+    0, 32768+16384,  8192);
		API_polar::template f  < 4096>(   l, 49152+    0, 49152+ 4096,              49152+ 8192,  4096);
		API_polar::template f  < 2048>(   l, 57344+    0, 57344+ 2048,              57344+ 4096,  2048);
		API_polar::template f  < 1024>(   l, 61440+    0, 61440+ 1024,              61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           24576+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 24576+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           24580+    0,     4);
		API_polar::template xo <    4>(s,    24576+    0, 24576+    4,              24576+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 24576+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           24584+    0,     8);
		API_polar::template xo <    8>(s,    24576+    0, 24576+    8,              24576+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 24576+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           24592+    0,    16);
		API_polar::template xo <   16>(s,    24576+    0, 24576+   16,              24576+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 24576+    0, 65408+   64,    32);
		API_polar::template h  <   32>(s, l, 65472+    0,                           24608+    0,    32);
		API_polar::template xo <   32>(s,    24576+    0, 24576+   32,              24576+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 24576+    0, 65280+  128,    64);
		API_polar::template h  <   64>(s, l, 65408+    0,                           24640+    0,    64);
		API_polar::template xo <   64>(s,    24576+    0, 24576+   64,              24576+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 24576+    0, 65024+  256,   128);
		API_polar::template h  <  128>(s, l, 65280+    0,                           24704+    0,   128);
		API_polar::template xo <  128>(s,    24576+    0, 24576+  128,              24576+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 24576+    0, 64512+  512,   256);
		API_polar::template h  <  256>(s, l, 65024+    0,                           24832+    0,   256);
		API_polar::template xo <  256>(s,    24576+    0, 24576+  256,              24576+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512, 24576+    0, 63488+ 1024,   512);
		API_polar::template h  <  512>(s, l, 64512+    0,                           25088+    0,   512);
		API_polar::template xo <  512>(s,    24576+    0, 24576+  512,              24576+    0,   512);
		API_polar::template g  < 1024>(s, l, 61440+    0, 61440+ 1024, 24576+    0, 61440+ 2048,  1024);
		API_polar::template h  < 1024>(s, l, 63488+    0,                           25600+    0,  1024);
		API_polar::template xo < 1024>(s,    24576+    0, 24576+ 1024,              24576+    0,  1024);
		API_polar::template g  < 2048>(s, l, 57344+    0, 57344+ 2048, 24576+    0, 57344+ 4096,  2048);
		API_polar::template h  < 2048>(s, l, 61440+    0,                           26624+    0,  2048);
		API_polar::template xo < 2048>(s,    24576+    0, 24576+ 2048,              24576+    0,  2048);
		API_polar::template g  < 4096>(s, l, 49152+    0, 49152+ 4096, 24576+    0, 49152+ 8192,  4096);
		API_polar::template h  < 4096>(s, l, 57344+    0,                           28672+    0,  4096);
		API_polar::template xo < 4096>(s,    24576+    0, 24576+ 4096,              24576+    0,  4096);
		API_polar::template xo < 8192>(s,    16384+    0, 16384+ 8192,              16384+    0,  8192);
		API_polar::template xo <16384>(s,        0+    0,     0+16384,                  0+    0, 16384);
	}
};
}
}
#endif
