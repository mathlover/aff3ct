#ifndef DECODER_POLAR_SC_FAST_SYS_N32768_K22938_SNR25_HPP_
#define DECODER_POLAR_SC_FAST_SYS_N32768_K22938_SNR25_HPP_

#include <cassert>

#include "../Decoder_polar_SC_fast_sys.hpp"

namespace aff3ct
{
namespace module
{
static const char Frozen_bits_32768_22938_25[32768] = {
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};

template <typename B, typename R, class API_polar>
class Decoder_polar_SC_fast_sys_N32768_K22938_SNR25 : public Decoder_polar_SC_fast_sys<B, R, API_polar>
{
public:
	Decoder_polar_SC_fast_sys_N32768_K22938_SNR25(const int& K, const int& N, const mipp::vector<B>& frozen_bits, const int n_frames = 1)
	: Decoder_polar_SC_fast_sys<B, R, API_polar>(K, N, frozen_bits, n_frames)
	{
		assert(N == 32768);
		assert(K == 22938);
		
		auto i = 0;
		while (i < 32768 && Frozen_bits_32768_22938_25[i] == frozen_bits[i]) i++;
		assert(i == 32768);
	}

	virtual ~Decoder_polar_SC_fast_sys_N32768_K22938_SNR25()
	{
	}

	void decode()
	{
		auto &l = this->l;
		auto &s = this->s;

		API_polar::template f  <16384>(   l,     0+    0,     0+16384,                  0+32768, 16384);
		API_polar::template f  < 8192>(   l, 32768+    0, 32768+ 8192,              32768+16384,  8192);
		API_polar::template f  < 4096>(   l, 49152+    0, 49152+ 4096,              49152+ 8192,  4096);
		API_polar::template f  < 2048>(   l, 57344+    0, 57344+ 2048,              57344+ 4096,  2048);
		API_polar::template g0 < 1024>(   l, 61440+    0, 61440+ 1024,              61440+ 2048,  1024);
		API_polar::template g0 <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template g0 <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template g0 <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template rep<   64>(s, l, 65408+    0,                            1920+    0,    64);
		API_polar::template gr <   64>(s, l, 65280+    0, 65280+   64,  1920+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                            1984+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32,  1984+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                            2030+    0,     2);
		API_polar::template xo0<    2>(s,     2028+    2,                            2028+    0,     2);
		API_polar::template xo0<    4>(s,     2024+    4,                            2024+    0,     4);
		API_polar::template xo0<    8>(s,     2016+    8,                            2016+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  2016+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            2032+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  2032+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            2036+    0,     4);
		API_polar::template xo <    4>(s,     2032+    0,  2032+    4,               2032+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  2032+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            2040+    0,     8);
		API_polar::template xo <    8>(s,     2032+    0,  2032+    8,               2032+    0,     8);
		API_polar::template xo <   16>(s,     2016+    0,  2016+   16,               2016+    0,    16);
		API_polar::template xo <   32>(s,     1984+    0,  1984+   32,               1984+    0,    32);
		API_polar::template xo <   64>(s,     1920+    0,  1920+   64,               1920+    0,    64);
		API_polar::template xo0<  128>(s,     1792+  128,                            1792+    0,   128);
		API_polar::template xo0<  256>(s,     1536+  256,                            1536+    0,   256);
		API_polar::template xo0<  512>(s,     1024+  512,                            1024+    0,   512);
		API_polar::template xo0< 1024>(s,        0+ 1024,                               0+    0,  1024);
		API_polar::template g  < 2048>(s, l, 57344+    0, 57344+ 2048,     0+    0, 57344+ 4096,  2048);
		API_polar::template f  < 1024>(   l, 61440+    0, 61440+ 1024,              61440+ 2048,  1024);
		API_polar::template g0 <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template rep<  256>(s, l, 65024+    0,                            2560+    0,   256);
		API_polar::template gr <  256>(s, l, 64512+    0, 64512+  256,  2560+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template rep<  128>(s, l, 65280+    0,                            2816+    0,   128);
		API_polar::template gr <  128>(s, l, 65024+    0, 65024+  128,  2816+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template g0 <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            3000+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  3000+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            3004+    0,     4);
		API_polar::template xo <    4>(s,     3000+    0,  3000+    4,               3000+    0,     4);
		API_polar::template xo0<    8>(s,     2992+    8,                            2992+    0,     8);
		API_polar::template xo0<   16>(s,     2976+   16,                            2976+    0,    16);
		API_polar::template xo0<   32>(s,     2944+   32,                            2944+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  2944+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            3024+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  3024+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            3032+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  3032+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            3036+    0,     4);
		API_polar::template xo <    4>(s,     3032+    0,  3032+    4,               3032+    0,     4);
		API_polar::template xo <    8>(s,     3024+    0,  3024+    8,               3024+    0,     8);
		API_polar::template xo0<   16>(s,     3008+   16,                            3008+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  3008+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            3040+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  3040+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            3048+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  3048+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            3052+    0,     4);
		API_polar::template xo <    4>(s,     3048+    0,  3048+    4,               3048+    0,     4);
		API_polar::template xo <    8>(s,     3040+    0,  3040+    8,               3040+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  3040+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            3056+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  3056+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                            3060+    0,     4);
		API_polar::template xo <    4>(s,     3056+    0,  3056+    4,               3056+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  3056+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                            3064+    0,     8);
		API_polar::template xo <    8>(s,     3056+    0,  3056+    8,               3056+    0,     8);
		API_polar::template xo <   16>(s,     3040+    0,  3040+   16,               3040+    0,    16);
		API_polar::template xo <   32>(s,     3008+    0,  3008+   32,               3008+    0,    32);
		API_polar::template xo <   64>(s,     2944+    0,  2944+   64,               2944+    0,    64);
		API_polar::template xo <  128>(s,     2816+    0,  2816+  128,               2816+    0,   128);
		API_polar::template xo <  256>(s,     2560+    0,  2560+  256,               2560+    0,   256);
		API_polar::template xo0<  512>(s,     2048+  512,                            2048+    0,   512);
		API_polar::template g  < 1024>(s, l, 61440+    0, 61440+ 1024,  2048+    0, 61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template g0 <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template g0 <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template g0 <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                            3326+    0,     2);
		API_polar::template xo0<    2>(s,     3324+    2,                            3324+    0,     2);
		API_polar::template xo0<    4>(s,     3320+    4,                            3320+    0,     4);
		API_polar::template xo0<    8>(s,     3312+    8,                            3312+    0,     8);
		API_polar::template xo0<   16>(s,     3296+   16,                            3296+    0,    16);
		API_polar::template xo0<   32>(s,     3264+   32,                            3264+    0,    32);
		API_polar::template xo0<   64>(s,     3200+   64,                            3200+    0,    64);
		API_polar::template xo0<  128>(s,     3072+  128,                            3072+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256,  3072+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template g0 <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template g0 <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            3440+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  3440+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            3448+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  3448+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            3452+    0,     4);
		API_polar::template xo <    4>(s,     3448+    0,  3448+    4,               3448+    0,     4);
		API_polar::template xo <    8>(s,     3440+    0,  3440+    8,               3440+    0,     8);
		API_polar::template xo0<   16>(s,     3424+   16,                            3424+    0,    16);
		API_polar::template xo0<   32>(s,     3392+   32,                            3392+    0,    32);
		API_polar::template xo0<   64>(s,     3328+   64,                            3328+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128,  3328+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                            3456+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32,  3456+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                            3488+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16,  3488+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            3504+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  3504+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            3512+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  3512+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            3516+    0,     4);
		API_polar::template xo <    4>(s,     3512+    0,  3512+    4,               3512+    0,     4);
		API_polar::template xo <    8>(s,     3504+    0,  3504+    8,               3504+    0,     8);
		API_polar::template xo <   16>(s,     3488+    0,  3488+   16,               3488+    0,    16);
		API_polar::template xo <   32>(s,     3456+    0,  3456+   32,               3456+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  3456+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                            3520+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16,  3520+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                            3542+    0,     2);
		API_polar::template xo0<    2>(s,     3540+    2,                            3540+    0,     2);
		API_polar::template xo0<    4>(s,     3536+    4,                            3536+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  3536+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            3544+    0,     8);
		API_polar::template xo <    8>(s,     3536+    0,  3536+    8,               3536+    0,     8);
		API_polar::template xo <   16>(s,     3520+    0,  3520+   16,               3520+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  3520+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            3552+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  3552+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            3556+    0,     4);
		API_polar::template xo <    4>(s,     3552+    0,  3552+    4,               3552+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  3552+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            3560+    0,     8);
		API_polar::template xo <    8>(s,     3552+    0,  3552+    8,               3552+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  3552+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            3568+    0,    16);
		API_polar::template xo <   16>(s,     3552+    0,  3552+   16,               3552+    0,    16);
		API_polar::template xo <   32>(s,     3520+    0,  3520+   32,               3520+    0,    32);
		API_polar::template xo <   64>(s,     3456+    0,  3456+   64,               3456+    0,    64);
		API_polar::template xo <  128>(s,     3328+    0,  3328+  128,               3328+    0,   128);
		API_polar::template xo <  256>(s,     3072+    0,  3072+  256,               3072+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512,  3072+    0, 63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template g0 <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                            3648+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32,  3648+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                            3680+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16,  3680+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            3696+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  3696+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            3704+    0,     8);
		API_polar::template xo <    8>(s,     3696+    0,  3696+    8,               3696+    0,     8);
		API_polar::template xo <   16>(s,     3680+    0,  3680+   16,               3680+    0,    16);
		API_polar::template xo <   32>(s,     3648+    0,  3648+   32,               3648+    0,    32);
		API_polar::template xo0<   64>(s,     3584+   64,                            3584+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128,  3584+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                            3712+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32,  3712+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            3756+    0,     4);
		API_polar::template xo0<    4>(s,     3752+    4,                            3752+    0,     4);
		API_polar::template xo0<    8>(s,     3744+    8,                            3744+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  3744+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            3760+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  3760+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            3764+    0,     4);
		API_polar::template xo <    4>(s,     3760+    0,  3760+    4,               3760+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  3760+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            3768+    0,     8);
		API_polar::template xo <    8>(s,     3760+    0,  3760+    8,               3760+    0,     8);
		API_polar::template xo <   16>(s,     3744+    0,  3744+   16,               3744+    0,    16);
		API_polar::template xo <   32>(s,     3712+    0,  3712+   32,               3712+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  3712+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            3776+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  3776+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            3784+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  3784+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            3788+    0,     4);
		API_polar::template xo <    4>(s,     3784+    0,  3784+    4,               3784+    0,     4);
		API_polar::template xo <    8>(s,     3776+    0,  3776+    8,               3776+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  3776+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            3792+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  3792+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            3796+    0,     4);
		API_polar::template xo <    4>(s,     3792+    0,  3792+    4,               3792+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  3792+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            3800+    0,     8);
		API_polar::template xo <    8>(s,     3792+    0,  3792+    8,               3792+    0,     8);
		API_polar::template xo <   16>(s,     3776+    0,  3776+   16,               3776+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  3776+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            3808+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  3808+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            3812+    0,     4);
		API_polar::template xo <    4>(s,     3808+    0,  3808+    4,               3808+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  3808+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            3816+    0,     8);
		API_polar::template xo <    8>(s,     3808+    0,  3808+    8,               3808+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  3808+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                            3824+    0,    16);
		API_polar::template xo <   16>(s,     3808+    0,  3808+   16,               3808+    0,    16);
		API_polar::template xo <   32>(s,     3776+    0,  3776+   32,               3776+    0,    32);
		API_polar::template xo <   64>(s,     3712+    0,  3712+   64,               3712+    0,    64);
		API_polar::template xo <  128>(s,     3584+    0,  3584+  128,               3584+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256,  3584+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            3864+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  3864+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            3868+    0,     4);
		API_polar::template xo <    4>(s,     3864+    0,  3864+    4,               3864+    0,     4);
		API_polar::template xo0<    8>(s,     3856+    8,                            3856+    0,     8);
		API_polar::template xo0<   16>(s,     3840+   16,                            3840+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  3840+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            3872+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  3872+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            3880+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  3880+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            3884+    0,     4);
		API_polar::template xo <    4>(s,     3880+    0,  3880+    4,               3880+    0,     4);
		API_polar::template xo <    8>(s,     3872+    0,  3872+    8,               3872+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  3872+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            3888+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  3888+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            3892+    0,     4);
		API_polar::template xo <    4>(s,     3888+    0,  3888+    4,               3888+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  3888+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            3896+    0,     8);
		API_polar::template xo <    8>(s,     3888+    0,  3888+    8,               3888+    0,     8);
		API_polar::template xo <   16>(s,     3872+    0,  3872+   16,               3872+    0,    16);
		API_polar::template xo <   32>(s,     3840+    0,  3840+   32,               3840+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  3840+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            3904+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  3904+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            3912+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  3912+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            3916+    0,     4);
		API_polar::template xo <    4>(s,     3912+    0,  3912+    4,               3912+    0,     4);
		API_polar::template xo <    8>(s,     3904+    0,  3904+    8,               3904+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  3904+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            3920+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  3920+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                            3924+    0,     4);
		API_polar::template xo <    4>(s,     3920+    0,  3920+    4,               3920+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  3920+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                            3928+    0,     8);
		API_polar::template xo <    8>(s,     3920+    0,  3920+    8,               3920+    0,     8);
		API_polar::template xo <   16>(s,     3904+    0,  3904+   16,               3904+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  3904+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                            3936+    0,    32);
		API_polar::template xo <   32>(s,     3904+    0,  3904+   32,               3904+    0,    32);
		API_polar::template xo <   64>(s,     3840+    0,  3840+   64,               3840+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128,  3840+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            3968+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  3968+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                            3978+    0,     2);
		API_polar::template xo0<    2>(s,     3976+    2,                            3976+    0,     2);
		API_polar::template g  <    4>(s, l, 65520+    0, 65520+    4,  3976+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                            3980+    0,     4);
		API_polar::template xo <    4>(s,     3976+    0,  3976+    4,               3976+    0,     4);
		API_polar::template xo <    8>(s,     3968+    0,  3968+    8,               3968+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  3968+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            3984+    0,    16);
		API_polar::template xo <   16>(s,     3968+    0,  3968+   16,               3968+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  3968+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                            4000+    0,    32);
		API_polar::template xo <   32>(s,     3968+    0,  3968+   32,               3968+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  3968+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                            4032+    0,    64);
		API_polar::template xo <   64>(s,     3968+    0,  3968+   64,               3968+    0,    64);
		API_polar::template xo <  128>(s,     3840+    0,  3840+  128,               3840+    0,   128);
		API_polar::template xo <  256>(s,     3584+    0,  3584+  256,               3584+    0,   256);
		API_polar::template xo <  512>(s,     3072+    0,  3072+  512,               3072+    0,   512);
		API_polar::template xo < 1024>(s,     2048+    0,  2048+ 1024,               2048+    0,  1024);
		API_polar::template xo < 2048>(s,        0+    0,     0+ 2048,                  0+    0,  2048);
		API_polar::template g  < 4096>(s, l, 49152+    0, 49152+ 4096,     0+    0, 49152+ 8192,  4096);
		API_polar::template f  < 2048>(   l, 57344+    0, 57344+ 2048,              57344+ 4096,  2048);
		API_polar::template f  < 1024>(   l, 61440+    0, 61440+ 1024,              61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template rep<  512>(s, l, 64512+    0,                            4096+    0,   512);
		API_polar::template gr <  512>(s, l, 63488+    0, 63488+  512,  4096+    0, 63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template g0 <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template g0 <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template g0 <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            4856+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  4856+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            4860+    0,     4);
		API_polar::template xo <    4>(s,     4856+    0,  4856+    4,               4856+    0,     4);
		API_polar::template xo0<    8>(s,     4848+    8,                            4848+    0,     8);
		API_polar::template xo0<   16>(s,     4832+   16,                            4832+    0,    16);
		API_polar::template xo0<   32>(s,     4800+   32,                            4800+    0,    32);
		API_polar::template xo0<   64>(s,     4736+   64,                            4736+    0,    64);
		API_polar::template xo0<  128>(s,     4608+  128,                            4608+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256,  4608+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template g0 <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template g0 <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                            4960+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16,  4960+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            4976+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  4976+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            4984+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  4984+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            4988+    0,     4);
		API_polar::template xo <    4>(s,     4984+    0,  4984+    4,               4984+    0,     4);
		API_polar::template xo <    8>(s,     4976+    0,  4976+    8,               4976+    0,     8);
		API_polar::template xo <   16>(s,     4960+    0,  4960+   16,               4960+    0,    16);
		API_polar::template xo0<   32>(s,     4928+   32,                            4928+    0,    32);
		API_polar::template xo0<   64>(s,     4864+   64,                            4864+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128,  4864+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                            4992+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32,  4992+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                            5024+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16,  5024+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                            5046+    0,     2);
		API_polar::template xo0<    2>(s,     5044+    2,                            5044+    0,     2);
		API_polar::template xo0<    4>(s,     5040+    4,                            5040+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  5040+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            5048+    0,     8);
		API_polar::template xo <    8>(s,     5040+    0,  5040+    8,               5040+    0,     8);
		API_polar::template xo <   16>(s,     5024+    0,  5024+   16,               5024+    0,    16);
		API_polar::template xo <   32>(s,     4992+    0,  4992+   32,               4992+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  4992+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            5068+    0,     4);
		API_polar::template xo0<    4>(s,     5064+    4,                            5064+    0,     4);
		API_polar::template xo0<    8>(s,     5056+    8,                            5056+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  5056+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            5072+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  5072+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            5076+    0,     4);
		API_polar::template xo <    4>(s,     5072+    0,  5072+    4,               5072+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  5072+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            5080+    0,     8);
		API_polar::template xo <    8>(s,     5072+    0,  5072+    8,               5072+    0,     8);
		API_polar::template xo <   16>(s,     5056+    0,  5056+   16,               5056+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  5056+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            5088+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  5088+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            5092+    0,     4);
		API_polar::template xo <    4>(s,     5088+    0,  5088+    4,               5088+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  5088+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            5096+    0,     8);
		API_polar::template xo <    8>(s,     5088+    0,  5088+    8,               5088+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  5088+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            5104+    0,    16);
		API_polar::template xo <   16>(s,     5088+    0,  5088+   16,               5088+    0,    16);
		API_polar::template xo <   32>(s,     5056+    0,  5056+   32,               5056+    0,    32);
		API_polar::template xo <   64>(s,     4992+    0,  4992+   64,               4992+    0,    64);
		API_polar::template xo <  128>(s,     4864+    0,  4864+  128,               4864+    0,   128);
		API_polar::template xo <  256>(s,     4608+    0,  4608+  256,               4608+    0,   256);
		API_polar::template xo <  512>(s,     4096+    0,  4096+  512,               4096+    0,   512);
		API_polar::template g  < 1024>(s, l, 61440+    0, 61440+ 1024,  4096+    0, 61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template g0 <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template g0 <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                            5312+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32,  5312+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                            5344+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16,  5344+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            5360+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  5360+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                            5370+    0,     2);
		API_polar::template xo0<    2>(s,     5368+    2,                            5368+    0,     2);
		API_polar::template g  <    4>(s, l, 65520+    0, 65520+    4,  5368+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                            5372+    0,     4);
		API_polar::template xo <    4>(s,     5368+    0,  5368+    4,               5368+    0,     4);
		API_polar::template xo <    8>(s,     5360+    0,  5360+    8,               5360+    0,     8);
		API_polar::template xo <   16>(s,     5344+    0,  5344+   16,               5344+    0,    16);
		API_polar::template xo <   32>(s,     5312+    0,  5312+   32,               5312+    0,    32);
		API_polar::template xo0<   64>(s,     5248+   64,                            5248+    0,    64);
		API_polar::template xo0<  128>(s,     5120+  128,                            5120+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256,  5120+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template rep<   64>(s, l, 65408+    0,                            5376+    0,    64);
		API_polar::template gr <   64>(s, l, 65280+    0, 65280+   64,  5376+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                            5440+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32,  5440+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            5484+    0,     4);
		API_polar::template xo0<    4>(s,     5480+    4,                            5480+    0,     4);
		API_polar::template xo0<    8>(s,     5472+    8,                            5472+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  5472+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            5488+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  5488+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            5492+    0,     4);
		API_polar::template xo <    4>(s,     5488+    0,  5488+    4,               5488+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  5488+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            5496+    0,     8);
		API_polar::template xo <    8>(s,     5488+    0,  5488+    8,               5488+    0,     8);
		API_polar::template xo <   16>(s,     5472+    0,  5472+   16,               5472+    0,    16);
		API_polar::template xo <   32>(s,     5440+    0,  5440+   32,               5440+    0,    32);
		API_polar::template xo <   64>(s,     5376+    0,  5376+   64,               5376+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128,  5376+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            5528+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  5528+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            5532+    0,     4);
		API_polar::template xo <    4>(s,     5528+    0,  5528+    4,               5528+    0,     4);
		API_polar::template xo0<    8>(s,     5520+    8,                            5520+    0,     8);
		API_polar::template xo0<   16>(s,     5504+   16,                            5504+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  5504+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            5536+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  5536+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            5544+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  5544+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            5548+    0,     4);
		API_polar::template xo <    4>(s,     5544+    0,  5544+    4,               5544+    0,     4);
		API_polar::template xo <    8>(s,     5536+    0,  5536+    8,               5536+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  5536+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            5552+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  5552+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            5556+    0,     4);
		API_polar::template xo <    4>(s,     5552+    0,  5552+    4,               5552+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  5552+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            5560+    0,     8);
		API_polar::template xo <    8>(s,     5552+    0,  5552+    8,               5552+    0,     8);
		API_polar::template xo <   16>(s,     5536+    0,  5536+   16,               5536+    0,    16);
		API_polar::template xo <   32>(s,     5504+    0,  5504+   32,               5504+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  5504+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            5568+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  5568+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            5576+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  5576+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            5580+    0,     4);
		API_polar::template xo <    4>(s,     5576+    0,  5576+    4,               5576+    0,     4);
		API_polar::template xo <    8>(s,     5568+    0,  5568+    8,               5568+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  5568+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            5584+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  5584+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                            5588+    0,     4);
		API_polar::template xo <    4>(s,     5584+    0,  5584+    4,               5584+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  5584+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                            5592+    0,     8);
		API_polar::template xo <    8>(s,     5584+    0,  5584+    8,               5584+    0,     8);
		API_polar::template xo <   16>(s,     5568+    0,  5568+   16,               5568+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  5568+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                            5600+    0,    32);
		API_polar::template xo <   32>(s,     5568+    0,  5568+   32,               5568+    0,    32);
		API_polar::template xo <   64>(s,     5504+    0,  5504+   64,               5504+    0,    64);
		API_polar::template xo <  128>(s,     5376+    0,  5376+  128,               5376+    0,   128);
		API_polar::template xo <  256>(s,     5120+    0,  5120+  256,               5120+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512,  5120+    0, 63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template g0 <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            5692+    0,     4);
		API_polar::template xo0<    4>(s,     5688+    4,                            5688+    0,     4);
		API_polar::template xo0<    8>(s,     5680+    8,                            5680+    0,     8);
		API_polar::template xo0<   16>(s,     5664+   16,                            5664+    0,    16);
		API_polar::template xo0<   32>(s,     5632+   32,                            5632+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  5632+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            5712+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  5712+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            5720+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  5720+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            5724+    0,     4);
		API_polar::template xo <    4>(s,     5720+    0,  5720+    4,               5720+    0,     4);
		API_polar::template xo <    8>(s,     5712+    0,  5712+    8,               5712+    0,     8);
		API_polar::template xo0<   16>(s,     5696+   16,                            5696+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  5696+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            5728+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  5728+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            5736+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  5736+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            5740+    0,     4);
		API_polar::template xo <    4>(s,     5736+    0,  5736+    4,               5736+    0,     4);
		API_polar::template xo <    8>(s,     5728+    0,  5728+    8,               5728+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  5728+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            5744+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  5744+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            5748+    0,     4);
		API_polar::template xo <    4>(s,     5744+    0,  5744+    4,               5744+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  5744+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                            5752+    0,     8);
		API_polar::template xo <    8>(s,     5744+    0,  5744+    8,               5744+    0,     8);
		API_polar::template xo <   16>(s,     5728+    0,  5728+   16,               5728+    0,    16);
		API_polar::template xo <   32>(s,     5696+    0,  5696+   32,               5696+    0,    32);
		API_polar::template xo <   64>(s,     5632+    0,  5632+   64,               5632+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128,  5632+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                            5760+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16,  5760+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            5776+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  5776+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            5784+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  5784+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            5788+    0,     4);
		API_polar::template xo <    4>(s,     5784+    0,  5784+    4,               5784+    0,     4);
		API_polar::template xo <    8>(s,     5776+    0,  5776+    8,               5776+    0,     8);
		API_polar::template xo <   16>(s,     5760+    0,  5760+   16,               5760+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  5760+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            5792+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  5792+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                            5802+    0,     2);
		API_polar::template xo0<    2>(s,     5800+    2,                            5800+    0,     2);
		API_polar::template g  <    4>(s, l, 65520+    0, 65520+    4,  5800+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                            5804+    0,     4);
		API_polar::template xo <    4>(s,     5800+    0,  5800+    4,               5800+    0,     4);
		API_polar::template xo <    8>(s,     5792+    0,  5792+    8,               5792+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  5792+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            5808+    0,    16);
		API_polar::template xo <   16>(s,     5792+    0,  5792+   16,               5792+    0,    16);
		API_polar::template xo <   32>(s,     5760+    0,  5760+   32,               5760+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  5760+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            5828+    0,     4);
		API_polar::template xo0<    4>(s,     5824+    4,                            5824+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  5824+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            5832+    0,     8);
		API_polar::template xo <    8>(s,     5824+    0,  5824+    8,               5824+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  5824+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            5840+    0,    16);
		API_polar::template xo <   16>(s,     5824+    0,  5824+   16,               5824+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  5824+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                            5856+    0,    32);
		API_polar::template xo <   32>(s,     5824+    0,  5824+   32,               5824+    0,    32);
		API_polar::template xo <   64>(s,     5760+    0,  5760+   64,               5760+    0,    64);
		API_polar::template xo <  128>(s,     5632+    0,  5632+  128,               5632+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256,  5632+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                            5888+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16,  5888+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                            5910+    0,     2);
		API_polar::template xo0<    2>(s,     5908+    2,                            5908+    0,     2);
		API_polar::template xo0<    4>(s,     5904+    4,                            5904+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  5904+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            5912+    0,     8);
		API_polar::template xo <    8>(s,     5904+    0,  5904+    8,               5904+    0,     8);
		API_polar::template xo <   16>(s,     5888+    0,  5888+   16,               5888+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  5888+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            5920+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  5920+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            5924+    0,     4);
		API_polar::template xo <    4>(s,     5920+    0,  5920+    4,               5920+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  5920+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            5928+    0,     8);
		API_polar::template xo <    8>(s,     5920+    0,  5920+    8,               5920+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  5920+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            5936+    0,    16);
		API_polar::template xo <   16>(s,     5920+    0,  5920+   16,               5920+    0,    16);
		API_polar::template xo <   32>(s,     5888+    0,  5888+   32,               5888+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  5888+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            5952+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  5952+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            5956+    0,     4);
		API_polar::template xo <    4>(s,     5952+    0,  5952+    4,               5952+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  5952+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            5960+    0,     8);
		API_polar::template xo <    8>(s,     5952+    0,  5952+    8,               5952+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  5952+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            5968+    0,    16);
		API_polar::template xo <   16>(s,     5952+    0,  5952+   16,               5952+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  5952+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                            5984+    0,    32);
		API_polar::template xo <   32>(s,     5952+    0,  5952+   32,               5952+    0,    32);
		API_polar::template xo <   64>(s,     5888+    0,  5888+   64,               5888+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128,  5888+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            6016+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  6016+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            6020+    0,     4);
		API_polar::template xo <    4>(s,     6016+    0,  6016+    4,               6016+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  6016+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            6024+    0,     8);
		API_polar::template xo <    8>(s,     6016+    0,  6016+    8,               6016+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  6016+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            6032+    0,    16);
		API_polar::template xo <   16>(s,     6016+    0,  6016+   16,               6016+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  6016+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                            6048+    0,    32);
		API_polar::template xo <   32>(s,     6016+    0,  6016+   32,               6016+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  6016+    0, 65280+  128,    64);
		API_polar::template h  <   64>(s, l, 65408+    0,                            6080+    0,    64);
		API_polar::template xo <   64>(s,     6016+    0,  6016+   64,               6016+    0,    64);
		API_polar::template xo <  128>(s,     5888+    0,  5888+  128,               5888+    0,   128);
		API_polar::template xo <  256>(s,     5632+    0,  5632+  256,               5632+    0,   256);
		API_polar::template xo <  512>(s,     5120+    0,  5120+  512,               5120+    0,   512);
		API_polar::template xo < 1024>(s,     4096+    0,  4096+ 1024,               4096+    0,  1024);
		API_polar::template g  < 2048>(s, l, 57344+    0, 57344+ 2048,  4096+    0, 57344+ 4096,  2048);
		API_polar::template f  < 1024>(   l, 61440+    0, 61440+ 1024,              61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template rep<  128>(s, l, 65280+    0,                            6144+    0,   128);
		API_polar::template gr <  128>(s, l, 65024+    0, 65024+  128,  6144+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template rep<   64>(s, l, 65408+    0,                            6272+    0,    64);
		API_polar::template gr <   64>(s, l, 65280+    0, 65280+   64,  6272+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            6360+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  6360+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            6364+    0,     4);
		API_polar::template xo <    4>(s,     6360+    0,  6360+    4,               6360+    0,     4);
		API_polar::template xo0<    8>(s,     6352+    8,                            6352+    0,     8);
		API_polar::template xo0<   16>(s,     6336+   16,                            6336+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  6336+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            6368+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  6368+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            6376+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  6376+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            6380+    0,     4);
		API_polar::template xo <    4>(s,     6376+    0,  6376+    4,               6376+    0,     4);
		API_polar::template xo <    8>(s,     6368+    0,  6368+    8,               6368+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  6368+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            6384+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  6384+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            6388+    0,     4);
		API_polar::template xo <    4>(s,     6384+    0,  6384+    4,               6384+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  6384+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            6392+    0,     8);
		API_polar::template xo <    8>(s,     6384+    0,  6384+    8,               6384+    0,     8);
		API_polar::template xo <   16>(s,     6368+    0,  6368+   16,               6368+    0,    16);
		API_polar::template xo <   32>(s,     6336+    0,  6336+   32,               6336+    0,    32);
		API_polar::template xo <   64>(s,     6272+    0,  6272+   64,               6272+    0,    64);
		API_polar::template xo <  128>(s,     6144+    0,  6144+  128,               6144+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256,  6144+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template g0 <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            6448+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  6448+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            6456+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  6456+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            6460+    0,     4);
		API_polar::template xo <    4>(s,     6456+    0,  6456+    4,               6456+    0,     4);
		API_polar::template xo <    8>(s,     6448+    0,  6448+    8,               6448+    0,     8);
		API_polar::template xo0<   16>(s,     6432+   16,                            6432+    0,    16);
		API_polar::template xo0<   32>(s,     6400+   32,                            6400+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  6400+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                            6464+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16,  6464+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            6480+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  6480+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            6488+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  6488+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            6492+    0,     4);
		API_polar::template xo <    4>(s,     6488+    0,  6488+    4,               6488+    0,     4);
		API_polar::template xo <    8>(s,     6480+    0,  6480+    8,               6480+    0,     8);
		API_polar::template xo <   16>(s,     6464+    0,  6464+   16,               6464+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  6464+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            6496+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  6496+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            6504+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  6504+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                            6508+    0,     4);
		API_polar::template xo <    4>(s,     6504+    0,  6504+    4,               6504+    0,     4);
		API_polar::template xo <    8>(s,     6496+    0,  6496+    8,               6496+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  6496+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            6512+    0,    16);
		API_polar::template xo <   16>(s,     6496+    0,  6496+   16,               6496+    0,    16);
		API_polar::template xo <   32>(s,     6464+    0,  6464+   32,               6464+    0,    32);
		API_polar::template xo <   64>(s,     6400+    0,  6400+   64,               6400+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128,  6400+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                            6528+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16,  6528+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            6544+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  6544+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                            6554+    0,     2);
		API_polar::template xo0<    2>(s,     6552+    2,                            6552+    0,     2);
		API_polar::template g  <    4>(s, l, 65520+    0, 65520+    4,  6552+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                            6556+    0,     4);
		API_polar::template xo <    4>(s,     6552+    0,  6552+    4,               6552+    0,     4);
		API_polar::template xo <    8>(s,     6544+    0,  6544+    8,               6544+    0,     8);
		API_polar::template xo <   16>(s,     6528+    0,  6528+   16,               6528+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  6528+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            6564+    0,     4);
		API_polar::template xo0<    4>(s,     6560+    4,                            6560+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  6560+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            6568+    0,     8);
		API_polar::template xo <    8>(s,     6560+    0,  6560+    8,               6560+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  6560+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            6576+    0,    16);
		API_polar::template xo <   16>(s,     6560+    0,  6560+   16,               6560+    0,    16);
		API_polar::template xo <   32>(s,     6528+    0,  6528+   32,               6528+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  6528+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            6592+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  6592+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            6596+    0,     4);
		API_polar::template xo <    4>(s,     6592+    0,  6592+    4,               6592+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  6592+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            6600+    0,     8);
		API_polar::template xo <    8>(s,     6592+    0,  6592+    8,               6592+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  6592+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            6608+    0,    16);
		API_polar::template xo <   16>(s,     6592+    0,  6592+   16,               6592+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  6592+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                            6624+    0,    32);
		API_polar::template xo <   32>(s,     6592+    0,  6592+   32,               6592+    0,    32);
		API_polar::template xo <   64>(s,     6528+    0,  6528+   64,               6528+    0,    64);
		API_polar::template xo <  128>(s,     6400+    0,  6400+  128,               6400+    0,   128);
		API_polar::template xo <  256>(s,     6144+    0,  6144+  256,               6144+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512,  6144+    0, 63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                            6656+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32,  6656+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                            6688+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16,  6688+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            6704+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  6704+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            6712+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  6712+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            6716+    0,     4);
		API_polar::template xo <    4>(s,     6712+    0,  6712+    4,               6712+    0,     4);
		API_polar::template xo <    8>(s,     6704+    0,  6704+    8,               6704+    0,     8);
		API_polar::template xo <   16>(s,     6688+    0,  6688+   16,               6688+    0,    16);
		API_polar::template xo <   32>(s,     6656+    0,  6656+   32,               6656+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  6656+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                            6720+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16,  6720+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                            6742+    0,     2);
		API_polar::template xo0<    2>(s,     6740+    2,                            6740+    0,     2);
		API_polar::template xo0<    4>(s,     6736+    4,                            6736+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  6736+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            6744+    0,     8);
		API_polar::template xo <    8>(s,     6736+    0,  6736+    8,               6736+    0,     8);
		API_polar::template xo <   16>(s,     6720+    0,  6720+   16,               6720+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  6720+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            6752+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  6752+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            6756+    0,     4);
		API_polar::template xo <    4>(s,     6752+    0,  6752+    4,               6752+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  6752+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            6760+    0,     8);
		API_polar::template xo <    8>(s,     6752+    0,  6752+    8,               6752+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  6752+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            6768+    0,    16);
		API_polar::template xo <   16>(s,     6752+    0,  6752+   16,               6752+    0,    16);
		API_polar::template xo <   32>(s,     6720+    0,  6720+   32,               6720+    0,    32);
		API_polar::template xo <   64>(s,     6656+    0,  6656+   64,               6656+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128,  6656+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            6792+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  6792+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            6796+    0,     4);
		API_polar::template xo <    4>(s,     6792+    0,  6792+    4,               6792+    0,     4);
		API_polar::template xo0<    8>(s,     6784+    8,                            6784+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  6784+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            6800+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  6800+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            6804+    0,     4);
		API_polar::template xo <    4>(s,     6800+    0,  6800+    4,               6800+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  6800+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            6808+    0,     8);
		API_polar::template xo <    8>(s,     6800+    0,  6800+    8,               6800+    0,     8);
		API_polar::template xo <   16>(s,     6784+    0,  6784+   16,               6784+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  6784+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            6816+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  6816+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            6820+    0,     4);
		API_polar::template xo <    4>(s,     6816+    0,  6816+    4,               6816+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  6816+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            6824+    0,     8);
		API_polar::template xo <    8>(s,     6816+    0,  6816+    8,               6816+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  6816+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            6832+    0,    16);
		API_polar::template xo <   16>(s,     6816+    0,  6816+   16,               6816+    0,    16);
		API_polar::template xo <   32>(s,     6784+    0,  6784+   32,               6784+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  6784+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            6848+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  6848+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            6852+    0,     4);
		API_polar::template xo <    4>(s,     6848+    0,  6848+    4,               6848+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  6848+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            6856+    0,     8);
		API_polar::template xo <    8>(s,     6848+    0,  6848+    8,               6848+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  6848+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            6864+    0,    16);
		API_polar::template xo <   16>(s,     6848+    0,  6848+   16,               6848+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  6848+    0, 65408+   64,    32);
		API_polar::template h  <   32>(s, l, 65472+    0,                            6880+    0,    32);
		API_polar::template xo <   32>(s,     6848+    0,  6848+   32,               6848+    0,    32);
		API_polar::template xo <   64>(s,     6784+    0,  6784+   64,               6784+    0,    64);
		API_polar::template xo <  128>(s,     6656+    0,  6656+  128,               6656+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256,  6656+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            6912+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  6912+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            6920+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  6920+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            6924+    0,     4);
		API_polar::template xo <    4>(s,     6920+    0,  6920+    4,               6920+    0,     4);
		API_polar::template xo <    8>(s,     6912+    0,  6912+    8,               6912+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  6912+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            6928+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  6928+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            6932+    0,     4);
		API_polar::template xo <    4>(s,     6928+    0,  6928+    4,               6928+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  6928+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            6936+    0,     8);
		API_polar::template xo <    8>(s,     6928+    0,  6928+    8,               6928+    0,     8);
		API_polar::template xo <   16>(s,     6912+    0,  6912+   16,               6912+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  6912+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            6944+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  6944+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            6948+    0,     4);
		API_polar::template xo <    4>(s,     6944+    0,  6944+    4,               6944+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  6944+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                            6952+    0,     8);
		API_polar::template xo <    8>(s,     6944+    0,  6944+    8,               6944+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  6944+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                            6960+    0,    16);
		API_polar::template xo <   16>(s,     6944+    0,  6944+   16,               6944+    0,    16);
		API_polar::template xo <   32>(s,     6912+    0,  6912+   32,               6912+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  6912+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            6976+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  6976+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                            6980+    0,     4);
		API_polar::template xo <    4>(s,     6976+    0,  6976+    4,               6976+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  6976+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                            6984+    0,     8);
		API_polar::template xo <    8>(s,     6976+    0,  6976+    8,               6976+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  6976+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                            6992+    0,    16);
		API_polar::template xo <   16>(s,     6976+    0,  6976+   16,               6976+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  6976+    0, 65408+   64,    32);
		API_polar::template h  <   32>(s, l, 65472+    0,                            7008+    0,    32);
		API_polar::template xo <   32>(s,     6976+    0,  6976+   32,               6976+    0,    32);
		API_polar::template xo <   64>(s,     6912+    0,  6912+   64,               6912+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128,  6912+    0, 65024+  256,   128);
		API_polar::template spc<  128>(s, l, 65280+    0,                            7040+    0,   128);
		API_polar::template xo <  128>(s,     6912+    0,  6912+  128,               6912+    0,   128);
		API_polar::template xo <  256>(s,     6656+    0,  6656+  256,               6656+    0,   256);
		API_polar::template xo <  512>(s,     6144+    0,  6144+  512,               6144+    0,   512);
		API_polar::template g  < 1024>(s, l, 61440+    0, 61440+ 1024,  6144+    0, 61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                            7168+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32,  7168+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            7212+    0,     4);
		API_polar::template xo0<    4>(s,     7208+    4,                            7208+    0,     4);
		API_polar::template xo0<    8>(s,     7200+    8,                            7200+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  7200+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            7216+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  7216+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            7220+    0,     4);
		API_polar::template xo <    4>(s,     7216+    0,  7216+    4,               7216+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  7216+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            7224+    0,     8);
		API_polar::template xo <    8>(s,     7216+    0,  7216+    8,               7216+    0,     8);
		API_polar::template xo <   16>(s,     7200+    0,  7200+   16,               7200+    0,    16);
		API_polar::template xo <   32>(s,     7168+    0,  7168+   32,               7168+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  7168+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            7232+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  7232+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            7240+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  7240+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            7244+    0,     4);
		API_polar::template xo <    4>(s,     7240+    0,  7240+    4,               7240+    0,     4);
		API_polar::template xo <    8>(s,     7232+    0,  7232+    8,               7232+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  7232+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            7248+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  7248+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            7252+    0,     4);
		API_polar::template xo <    4>(s,     7248+    0,  7248+    4,               7248+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  7248+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            7256+    0,     8);
		API_polar::template xo <    8>(s,     7248+    0,  7248+    8,               7248+    0,     8);
		API_polar::template xo <   16>(s,     7232+    0,  7232+   16,               7232+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  7232+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            7264+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  7264+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            7268+    0,     4);
		API_polar::template xo <    4>(s,     7264+    0,  7264+    4,               7264+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  7264+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            7272+    0,     8);
		API_polar::template xo <    8>(s,     7264+    0,  7264+    8,               7264+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  7264+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                            7280+    0,    16);
		API_polar::template xo <   16>(s,     7264+    0,  7264+   16,               7264+    0,    16);
		API_polar::template xo <   32>(s,     7232+    0,  7232+   32,               7232+    0,    32);
		API_polar::template xo <   64>(s,     7168+    0,  7168+   64,               7168+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128,  7168+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            7296+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  7296+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            7304+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  7304+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            7308+    0,     4);
		API_polar::template xo <    4>(s,     7304+    0,  7304+    4,               7304+    0,     4);
		API_polar::template xo <    8>(s,     7296+    0,  7296+    8,               7296+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  7296+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            7312+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  7312+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            7316+    0,     4);
		API_polar::template xo <    4>(s,     7312+    0,  7312+    4,               7312+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  7312+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                            7320+    0,     8);
		API_polar::template xo <    8>(s,     7312+    0,  7312+    8,               7312+    0,     8);
		API_polar::template xo <   16>(s,     7296+    0,  7296+   16,               7296+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  7296+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            7328+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  7328+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                            7332+    0,     4);
		API_polar::template xo <    4>(s,     7328+    0,  7328+    4,               7328+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  7328+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                            7336+    0,     8);
		API_polar::template xo <    8>(s,     7328+    0,  7328+    8,               7328+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  7328+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                            7344+    0,    16);
		API_polar::template xo <   16>(s,     7328+    0,  7328+   16,               7328+    0,    16);
		API_polar::template xo <   32>(s,     7296+    0,  7296+   32,               7296+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  7296+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                            7360+    0,    64);
		API_polar::template xo <   64>(s,     7296+    0,  7296+   64,               7296+    0,    64);
		API_polar::template xo <  128>(s,     7168+    0,  7168+  128,               7168+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256,  7168+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            7424+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  7424+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            7432+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  7432+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                            7436+    0,     4);
		API_polar::template xo <    4>(s,     7432+    0,  7432+    4,               7432+    0,     4);
		API_polar::template xo <    8>(s,     7424+    0,  7424+    8,               7424+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  7424+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            7440+    0,    16);
		API_polar::template xo <   16>(s,     7424+    0,  7424+   16,               7424+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  7424+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                            7456+    0,    32);
		API_polar::template xo <   32>(s,     7424+    0,  7424+   32,               7424+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  7424+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                            7488+    0,    64);
		API_polar::template xo <   64>(s,     7424+    0,  7424+   64,               7424+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128,  7424+    0, 65024+  256,   128);
		API_polar::template spc<  128>(s, l, 65280+    0,                            7552+    0,   128);
		API_polar::template xo <  128>(s,     7424+    0,  7424+  128,               7424+    0,   128);
		API_polar::template xo <  256>(s,     7168+    0,  7168+  256,               7168+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512,  7168+    0, 63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            7684+    0,     4);
		API_polar::template xo0<    4>(s,     7680+    4,                            7680+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  7680+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            7688+    0,     8);
		API_polar::template xo <    8>(s,     7680+    0,  7680+    8,               7680+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  7680+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            7696+    0,    16);
		API_polar::template xo <   16>(s,     7680+    0,  7680+   16,               7680+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  7680+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                            7712+    0,    32);
		API_polar::template xo <   32>(s,     7680+    0,  7680+   32,               7680+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  7680+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                            7744+    0,    64);
		API_polar::template xo <   64>(s,     7680+    0,  7680+   64,               7680+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128,  7680+    0, 65024+  256,   128);
		API_polar::template spc<  128>(s, l, 65280+    0,                            7808+    0,   128);
		API_polar::template xo <  128>(s,     7680+    0,  7680+  128,               7680+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256,  7680+    0, 64512+  512,   256);
		API_polar::template spc<  256>(s, l, 65024+    0,                            7936+    0,   256);
		API_polar::template xo <  256>(s,     7680+    0,  7680+  256,               7680+    0,   256);
		API_polar::template xo <  512>(s,     7168+    0,  7168+  512,               7168+    0,   512);
		API_polar::template xo < 1024>(s,     6144+    0,  6144+ 1024,               6144+    0,  1024);
		API_polar::template xo < 2048>(s,     4096+    0,  4096+ 2048,               4096+    0,  2048);
		API_polar::template xo < 4096>(s,        0+    0,     0+ 4096,                  0+    0,  4096);
		API_polar::template g  < 8192>(s, l, 32768+    0, 32768+ 8192,     0+    0, 32768+16384,  8192);
		API_polar::template f  < 4096>(   l, 49152+    0, 49152+ 4096,              49152+ 8192,  4096);
		API_polar::template f  < 2048>(   l, 57344+    0, 57344+ 2048,              57344+ 4096,  2048);
		API_polar::template f  < 1024>(   l, 61440+    0, 61440+ 1024,              61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template g0 <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template g0 <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template g0 <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                            8640+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32,  8640+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                            8672+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16,  8672+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            8688+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  8688+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            8696+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  8696+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                            8700+    0,     4);
		API_polar::template xo <    4>(s,     8696+    0,  8696+    4,               8696+    0,     4);
		API_polar::template xo <    8>(s,     8688+    0,  8688+    8,               8688+    0,     8);
		API_polar::template xo <   16>(s,     8672+    0,  8672+   16,               8672+    0,    16);
		API_polar::template xo <   32>(s,     8640+    0,  8640+   32,               8640+    0,    32);
		API_polar::template xo0<   64>(s,     8576+   64,                            8576+    0,    64);
		API_polar::template xo0<  128>(s,     8448+  128,                            8448+    0,   128);
		API_polar::template xo0<  256>(s,     8192+  256,                            8192+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512,  8192+    0, 63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template g0 <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template rep<   64>(s, l, 65408+    0,                            8832+    0,    64);
		API_polar::template gr <   64>(s, l, 65280+    0, 65280+   64,  8832+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                            8896+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32,  8896+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            8940+    0,     4);
		API_polar::template xo0<    4>(s,     8936+    4,                            8936+    0,     4);
		API_polar::template xo0<    8>(s,     8928+    8,                            8928+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  8928+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            8944+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  8944+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            8948+    0,     4);
		API_polar::template xo <    4>(s,     8944+    0,  8944+    4,               8944+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  8944+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            8952+    0,     8);
		API_polar::template xo <    8>(s,     8944+    0,  8944+    8,               8944+    0,     8);
		API_polar::template xo <   16>(s,     8928+    0,  8928+   16,               8928+    0,    16);
		API_polar::template xo <   32>(s,     8896+    0,  8896+   32,               8896+    0,    32);
		API_polar::template xo <   64>(s,     8832+    0,  8832+   64,               8832+    0,    64);
		API_polar::template xo0<  128>(s,     8704+  128,                            8704+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256,  8704+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template g0 <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                            9022+    0,     2);
		API_polar::template xo0<    2>(s,     9020+    2,                            9020+    0,     2);
		API_polar::template xo0<    4>(s,     9016+    4,                            9016+    0,     4);
		API_polar::template xo0<    8>(s,     9008+    8,                            9008+    0,     8);
		API_polar::template xo0<   16>(s,     8992+   16,                            8992+    0,    16);
		API_polar::template xo0<   32>(s,     8960+   32,                            8960+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  8960+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            9040+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  9040+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            9048+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  9048+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            9052+    0,     4);
		API_polar::template xo <    4>(s,     9048+    0,  9048+    4,               9048+    0,     4);
		API_polar::template xo <    8>(s,     9040+    0,  9040+    8,               9040+    0,     8);
		API_polar::template xo0<   16>(s,     9024+   16,                            9024+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  9024+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            9056+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  9056+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            9064+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  9064+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            9068+    0,     4);
		API_polar::template xo <    4>(s,     9064+    0,  9064+    4,               9064+    0,     4);
		API_polar::template xo <    8>(s,     9056+    0,  9056+    8,               9056+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  9056+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            9072+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  9072+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            9076+    0,     4);
		API_polar::template xo <    4>(s,     9072+    0,  9072+    4,               9072+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  9072+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            9080+    0,     8);
		API_polar::template xo <    8>(s,     9072+    0,  9072+    8,               9072+    0,     8);
		API_polar::template xo <   16>(s,     9056+    0,  9056+   16,               9056+    0,    16);
		API_polar::template xo <   32>(s,     9024+    0,  9024+   32,               9024+    0,    32);
		API_polar::template xo <   64>(s,     8960+    0,  8960+   64,               8960+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128,  8960+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                            9088+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16,  9088+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            9104+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  9104+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            9112+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  9112+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            9116+    0,     4);
		API_polar::template xo <    4>(s,     9112+    0,  9112+    4,               9112+    0,     4);
		API_polar::template xo <    8>(s,     9104+    0,  9104+    8,               9104+    0,     8);
		API_polar::template xo <   16>(s,     9088+    0,  9088+   16,               9088+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  9088+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            9120+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  9120+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            9128+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  9128+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                            9132+    0,     4);
		API_polar::template xo <    4>(s,     9128+    0,  9128+    4,               9128+    0,     4);
		API_polar::template xo <    8>(s,     9120+    0,  9120+    8,               9120+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  9120+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            9136+    0,    16);
		API_polar::template xo <   16>(s,     9120+    0,  9120+   16,               9120+    0,    16);
		API_polar::template xo <   32>(s,     9088+    0,  9088+   32,               9088+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  9088+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                            9158+    0,     2);
		API_polar::template xo0<    2>(s,     9156+    2,                            9156+    0,     2);
		API_polar::template xo0<    4>(s,     9152+    4,                            9152+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  9152+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            9160+    0,     8);
		API_polar::template xo <    8>(s,     9152+    0,  9152+    8,               9152+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  9152+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            9168+    0,    16);
		API_polar::template xo <   16>(s,     9152+    0,  9152+   16,               9152+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  9152+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                            9184+    0,    32);
		API_polar::template xo <   32>(s,     9152+    0,  9152+   32,               9152+    0,    32);
		API_polar::template xo <   64>(s,     9088+    0,  9088+   64,               9088+    0,    64);
		API_polar::template xo <  128>(s,     8960+    0,  8960+  128,               8960+    0,   128);
		API_polar::template xo <  256>(s,     8704+    0,  8704+  256,               8704+    0,   256);
		API_polar::template xo <  512>(s,     8192+    0,  8192+  512,               8192+    0,   512);
		API_polar::template g  < 1024>(s, l, 61440+    0, 61440+ 1024,  8192+    0, 61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template rep<  128>(s, l, 65280+    0,                            9216+    0,   128);
		API_polar::template gr <  128>(s, l, 65024+    0, 65024+  128,  9216+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template g0 <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            9400+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  9400+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            9404+    0,     4);
		API_polar::template xo <    4>(s,     9400+    0,  9400+    4,               9400+    0,     4);
		API_polar::template xo0<    8>(s,     9392+    8,                            9392+    0,     8);
		API_polar::template xo0<   16>(s,     9376+   16,                            9376+    0,    16);
		API_polar::template xo0<   32>(s,     9344+   32,                            9344+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  9344+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                            9408+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16,  9408+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            9424+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  9424+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            9432+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  9432+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            9436+    0,     4);
		API_polar::template xo <    4>(s,     9432+    0,  9432+    4,               9432+    0,     4);
		API_polar::template xo <    8>(s,     9424+    0,  9424+    8,               9424+    0,     8);
		API_polar::template xo <   16>(s,     9408+    0,  9408+   16,               9408+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  9408+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            9440+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  9440+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            9448+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  9448+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            9452+    0,     4);
		API_polar::template xo <    4>(s,     9448+    0,  9448+    4,               9448+    0,     4);
		API_polar::template xo <    8>(s,     9440+    0,  9440+    8,               9440+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  9440+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            9456+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  9456+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                            9460+    0,     4);
		API_polar::template xo <    4>(s,     9456+    0,  9456+    4,               9456+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  9456+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                            9464+    0,     8);
		API_polar::template xo <    8>(s,     9456+    0,  9456+    8,               9456+    0,     8);
		API_polar::template xo <   16>(s,     9440+    0,  9440+   16,               9440+    0,    16);
		API_polar::template xo <   32>(s,     9408+    0,  9408+   32,               9408+    0,    32);
		API_polar::template xo <   64>(s,     9344+    0,  9344+   64,               9344+    0,    64);
		API_polar::template xo <  128>(s,     9216+    0,  9216+  128,               9216+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256,  9216+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template g0 <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                            9504+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16,  9504+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            9520+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  9520+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            9528+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  9528+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            9532+    0,     4);
		API_polar::template xo <    4>(s,     9528+    0,  9528+    4,               9528+    0,     4);
		API_polar::template xo <    8>(s,     9520+    0,  9520+    8,               9520+    0,     8);
		API_polar::template xo <   16>(s,     9504+    0,  9504+   16,               9504+    0,    16);
		API_polar::template xo0<   32>(s,     9472+   32,                            9472+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  9472+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                            9536+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16,  9536+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            9552+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  9552+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                            9562+    0,     2);
		API_polar::template xo0<    2>(s,     9560+    2,                            9560+    0,     2);
		API_polar::template g  <    4>(s, l, 65520+    0, 65520+    4,  9560+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                            9564+    0,     4);
		API_polar::template xo <    4>(s,     9560+    0,  9560+    4,               9560+    0,     4);
		API_polar::template xo <    8>(s,     9552+    0,  9552+    8,               9552+    0,     8);
		API_polar::template xo <   16>(s,     9536+    0,  9536+   16,               9536+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  9536+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            9572+    0,     4);
		API_polar::template xo0<    4>(s,     9568+    4,                            9568+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  9568+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            9576+    0,     8);
		API_polar::template xo <    8>(s,     9568+    0,  9568+    8,               9568+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  9568+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            9584+    0,    16);
		API_polar::template xo <   16>(s,     9568+    0,  9568+   16,               9568+    0,    16);
		API_polar::template xo <   32>(s,     9536+    0,  9536+   32,               9536+    0,    32);
		API_polar::template xo <   64>(s,     9472+    0,  9472+   64,               9472+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128,  9472+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                            9614+    0,     2);
		API_polar::template xo0<    2>(s,     9612+    2,                            9612+    0,     2);
		API_polar::template xo0<    4>(s,     9608+    4,                            9608+    0,     4);
		API_polar::template xo0<    8>(s,     9600+    8,                            9600+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  9600+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            9616+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  9616+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            9620+    0,     4);
		API_polar::template xo <    4>(s,     9616+    0,  9616+    4,               9616+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  9616+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            9624+    0,     8);
		API_polar::template xo <    8>(s,     9616+    0,  9616+    8,               9616+    0,     8);
		API_polar::template xo <   16>(s,     9600+    0,  9600+   16,               9600+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  9600+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            9632+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  9632+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            9636+    0,     4);
		API_polar::template xo <    4>(s,     9632+    0,  9632+    4,               9632+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  9632+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            9640+    0,     8);
		API_polar::template xo <    8>(s,     9632+    0,  9632+    8,               9632+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  9632+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            9648+    0,    16);
		API_polar::template xo <   16>(s,     9632+    0,  9632+   16,               9632+    0,    16);
		API_polar::template xo <   32>(s,     9600+    0,  9600+   32,               9600+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  9600+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            9664+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  9664+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            9668+    0,     4);
		API_polar::template xo <    4>(s,     9664+    0,  9664+    4,               9664+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  9664+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            9672+    0,     8);
		API_polar::template xo <    8>(s,     9664+    0,  9664+    8,               9664+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  9664+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            9680+    0,    16);
		API_polar::template xo <   16>(s,     9664+    0,  9664+   16,               9664+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  9664+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                            9696+    0,    32);
		API_polar::template xo <   32>(s,     9664+    0,  9664+   32,               9664+    0,    32);
		API_polar::template xo <   64>(s,     9600+    0,  9600+   64,               9600+    0,    64);
		API_polar::template xo <  128>(s,     9472+    0,  9472+  128,               9472+    0,   128);
		API_polar::template xo <  256>(s,     9216+    0,  9216+  256,               9216+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512,  9216+    0, 63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                            9728+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32,  9728+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                            9760+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16,  9760+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            9780+    0,     4);
		API_polar::template xo0<    4>(s,     9776+    4,                            9776+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  9776+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            9784+    0,     8);
		API_polar::template xo <    8>(s,     9776+    0,  9776+    8,               9776+    0,     8);
		API_polar::template xo <   16>(s,     9760+    0,  9760+   16,               9760+    0,    16);
		API_polar::template xo <   32>(s,     9728+    0,  9728+   32,               9728+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  9728+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            9800+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  9800+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            9804+    0,     4);
		API_polar::template xo <    4>(s,     9800+    0,  9800+    4,               9800+    0,     4);
		API_polar::template xo0<    8>(s,     9792+    8,                            9792+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  9792+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            9808+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  9808+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            9812+    0,     4);
		API_polar::template xo <    4>(s,     9808+    0,  9808+    4,               9808+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  9808+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            9816+    0,     8);
		API_polar::template xo <    8>(s,     9808+    0,  9808+    8,               9808+    0,     8);
		API_polar::template xo <   16>(s,     9792+    0,  9792+   16,               9792+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  9792+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            9824+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  9824+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            9828+    0,     4);
		API_polar::template xo <    4>(s,     9824+    0,  9824+    4,               9824+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  9824+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            9832+    0,     8);
		API_polar::template xo <    8>(s,     9824+    0,  9824+    8,               9824+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  9824+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                            9840+    0,    16);
		API_polar::template xo <   16>(s,     9824+    0,  9824+   16,               9824+    0,    16);
		API_polar::template xo <   32>(s,     9792+    0,  9792+   32,               9792+    0,    32);
		API_polar::template xo <   64>(s,     9728+    0,  9728+   64,               9728+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128,  9728+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            9856+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  9856+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            9864+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  9864+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            9868+    0,     4);
		API_polar::template xo <    4>(s,     9864+    0,  9864+    4,               9864+    0,     4);
		API_polar::template xo <    8>(s,     9856+    0,  9856+    8,               9856+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  9856+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            9872+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  9872+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            9876+    0,     4);
		API_polar::template xo <    4>(s,     9872+    0,  9872+    4,               9872+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  9872+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            9880+    0,     8);
		API_polar::template xo <    8>(s,     9872+    0,  9872+    8,               9872+    0,     8);
		API_polar::template xo <   16>(s,     9856+    0,  9856+   16,               9856+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  9856+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            9888+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  9888+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            9892+    0,     4);
		API_polar::template xo <    4>(s,     9888+    0,  9888+    4,               9888+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  9888+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            9896+    0,     8);
		API_polar::template xo <    8>(s,     9888+    0,  9888+    8,               9888+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  9888+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                            9904+    0,    16);
		API_polar::template xo <   16>(s,     9888+    0,  9888+   16,               9888+    0,    16);
		API_polar::template xo <   32>(s,     9856+    0,  9856+   32,               9856+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  9856+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            9920+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  9920+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                            9924+    0,     4);
		API_polar::template xo <    4>(s,     9920+    0,  9920+    4,               9920+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  9920+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                            9928+    0,     8);
		API_polar::template xo <    8>(s,     9920+    0,  9920+    8,               9920+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  9920+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                            9936+    0,    16);
		API_polar::template xo <   16>(s,     9920+    0,  9920+   16,               9920+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  9920+    0, 65408+   64,    32);
		API_polar::template h  <   32>(s, l, 65472+    0,                            9952+    0,    32);
		API_polar::template xo <   32>(s,     9920+    0,  9920+   32,               9920+    0,    32);
		API_polar::template xo <   64>(s,     9856+    0,  9856+   64,               9856+    0,    64);
		API_polar::template xo <  128>(s,     9728+    0,  9728+  128,               9728+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256,  9728+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            9984+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  9984+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            9992+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  9992+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            9996+    0,     4);
		API_polar::template xo <    4>(s,     9992+    0,  9992+    4,               9992+    0,     4);
		API_polar::template xo <    8>(s,     9984+    0,  9984+    8,               9984+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  9984+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           10000+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 10000+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           10004+    0,     4);
		API_polar::template xo <    4>(s,    10000+    0, 10000+    4,              10000+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 10000+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                           10008+    0,     8);
		API_polar::template xo <    8>(s,    10000+    0, 10000+    8,              10000+    0,     8);
		API_polar::template xo <   16>(s,     9984+    0,  9984+   16,               9984+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  9984+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           10016+    0,    32);
		API_polar::template xo <   32>(s,     9984+    0,  9984+   32,               9984+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64,  9984+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           10048+    0,    64);
		API_polar::template xo <   64>(s,     9984+    0,  9984+   64,               9984+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128,  9984+    0, 65024+  256,   128);
		API_polar::template spc<  128>(s, l, 65280+    0,                           10112+    0,   128);
		API_polar::template xo <  128>(s,     9984+    0,  9984+  128,               9984+    0,   128);
		API_polar::template xo <  256>(s,     9728+    0,  9728+  256,               9728+    0,   256);
		API_polar::template xo <  512>(s,     9216+    0,  9216+  512,               9216+    0,   512);
		API_polar::template xo < 1024>(s,     8192+    0,  8192+ 1024,               8192+    0,  1024);
		API_polar::template g  < 2048>(s, l, 57344+    0, 57344+ 2048,  8192+    0, 57344+ 4096,  2048);
		API_polar::template f  < 1024>(   l, 61440+    0, 61440+ 1024,              61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template g0 <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template g0 <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           10336+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 10336+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           10352+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 10352+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           10360+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 10360+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           10364+    0,     4);
		API_polar::template xo <    4>(s,    10360+    0, 10360+    4,              10360+    0,     4);
		API_polar::template xo <    8>(s,    10352+    0, 10352+    8,              10352+    0,     8);
		API_polar::template xo <   16>(s,    10336+    0, 10336+   16,              10336+    0,    16);
		API_polar::template xo0<   32>(s,    10304+   32,                           10304+    0,    32);
		API_polar::template xo0<   64>(s,    10240+   64,                           10240+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 10240+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                           10368+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32, 10368+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           10400+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 10400+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           10416+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 10416+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                           10426+    0,     2);
		API_polar::template xo0<    2>(s,    10424+    2,                           10424+    0,     2);
		API_polar::template g  <    4>(s, l, 65520+    0, 65520+    4, 10424+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           10428+    0,     4);
		API_polar::template xo <    4>(s,    10424+    0, 10424+    4,              10424+    0,     4);
		API_polar::template xo <    8>(s,    10416+    0, 10416+    8,              10416+    0,     8);
		API_polar::template xo <   16>(s,    10400+    0, 10400+   16,              10400+    0,    16);
		API_polar::template xo <   32>(s,    10368+    0, 10368+   32,              10368+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 10368+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                           10446+    0,     2);
		API_polar::template xo0<    2>(s,    10444+    2,                           10444+    0,     2);
		API_polar::template xo0<    4>(s,    10440+    4,                           10440+    0,     4);
		API_polar::template xo0<    8>(s,    10432+    8,                           10432+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 10432+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           10452+    0,     4);
		API_polar::template xo0<    4>(s,    10448+    4,                           10448+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 10448+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           10456+    0,     8);
		API_polar::template xo <    8>(s,    10448+    0, 10448+    8,              10448+    0,     8);
		API_polar::template xo <   16>(s,    10432+    0, 10432+   16,              10432+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 10432+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           10464+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 10464+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           10468+    0,     4);
		API_polar::template xo <    4>(s,    10464+    0, 10464+    4,              10464+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 10464+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           10472+    0,     8);
		API_polar::template xo <    8>(s,    10464+    0, 10464+    8,              10464+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 10464+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           10480+    0,    16);
		API_polar::template xo <   16>(s,    10464+    0, 10464+   16,              10464+    0,    16);
		API_polar::template xo <   32>(s,    10432+    0, 10432+   32,              10432+    0,    32);
		API_polar::template xo <   64>(s,    10368+    0, 10368+   64,              10368+    0,    64);
		API_polar::template xo <  128>(s,    10240+    0, 10240+  128,              10240+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 10240+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                           10496+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32, 10496+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           10540+    0,     4);
		API_polar::template xo0<    4>(s,    10536+    4,                           10536+    0,     4);
		API_polar::template xo0<    8>(s,    10528+    8,                           10528+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 10528+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           10544+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 10544+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           10548+    0,     4);
		API_polar::template xo <    4>(s,    10544+    0, 10544+    4,              10544+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 10544+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           10552+    0,     8);
		API_polar::template xo <    8>(s,    10544+    0, 10544+    8,              10544+    0,     8);
		API_polar::template xo <   16>(s,    10528+    0, 10528+   16,              10528+    0,    16);
		API_polar::template xo <   32>(s,    10496+    0, 10496+   32,              10496+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 10496+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           10560+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 10560+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           10568+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 10568+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           10572+    0,     4);
		API_polar::template xo <    4>(s,    10568+    0, 10568+    4,              10568+    0,     4);
		API_polar::template xo <    8>(s,    10560+    0, 10560+    8,              10560+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 10560+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           10576+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 10576+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           10580+    0,     4);
		API_polar::template xo <    4>(s,    10576+    0, 10576+    4,              10576+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 10576+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           10584+    0,     8);
		API_polar::template xo <    8>(s,    10576+    0, 10576+    8,              10576+    0,     8);
		API_polar::template xo <   16>(s,    10560+    0, 10560+   16,              10560+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 10560+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           10592+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 10592+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           10596+    0,     4);
		API_polar::template xo <    4>(s,    10592+    0, 10592+    4,              10592+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 10592+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           10600+    0,     8);
		API_polar::template xo <    8>(s,    10592+    0, 10592+    8,              10592+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 10592+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                           10608+    0,    16);
		API_polar::template xo <   16>(s,    10592+    0, 10592+   16,              10592+    0,    16);
		API_polar::template xo <   32>(s,    10560+    0, 10560+   32,              10560+    0,    32);
		API_polar::template xo <   64>(s,    10496+    0, 10496+   64,              10496+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 10496+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           10624+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 10624+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           10632+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 10632+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           10636+    0,     4);
		API_polar::template xo <    4>(s,    10632+    0, 10632+    4,              10632+    0,     4);
		API_polar::template xo <    8>(s,    10624+    0, 10624+    8,              10624+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 10624+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           10640+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 10640+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           10644+    0,     4);
		API_polar::template xo <    4>(s,    10640+    0, 10640+    4,              10640+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 10640+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                           10648+    0,     8);
		API_polar::template xo <    8>(s,    10640+    0, 10640+    8,              10640+    0,     8);
		API_polar::template xo <   16>(s,    10624+    0, 10624+   16,              10624+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 10624+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                           10658+    0,     2);
		API_polar::template xo0<    2>(s,    10656+    2,                           10656+    0,     2);
		API_polar::template g  <    4>(s, l, 65520+    0, 65520+    4, 10656+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           10660+    0,     4);
		API_polar::template xo <    4>(s,    10656+    0, 10656+    4,              10656+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 10656+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                           10664+    0,     8);
		API_polar::template xo <    8>(s,    10656+    0, 10656+    8,              10656+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 10656+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                           10672+    0,    16);
		API_polar::template xo <   16>(s,    10656+    0, 10656+   16,              10656+    0,    16);
		API_polar::template xo <   32>(s,    10624+    0, 10624+   32,              10624+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 10624+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           10688+    0,    64);
		API_polar::template xo <   64>(s,    10624+    0, 10624+   64,              10624+    0,    64);
		API_polar::template xo <  128>(s,    10496+    0, 10496+  128,              10496+    0,   128);
		API_polar::template xo <  256>(s,    10240+    0, 10240+  256,              10240+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512, 10240+    0, 63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           10776+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 10776+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           10780+    0,     4);
		API_polar::template xo <    4>(s,    10776+    0, 10776+    4,              10776+    0,     4);
		API_polar::template xo0<    8>(s,    10768+    8,                           10768+    0,     8);
		API_polar::template xo0<   16>(s,    10752+   16,                           10752+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 10752+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           10784+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 10784+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           10792+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 10792+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           10796+    0,     4);
		API_polar::template xo <    4>(s,    10792+    0, 10792+    4,              10792+    0,     4);
		API_polar::template xo <    8>(s,    10784+    0, 10784+    8,              10784+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 10784+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           10800+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 10800+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           10804+    0,     4);
		API_polar::template xo <    4>(s,    10800+    0, 10800+    4,              10800+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 10800+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           10808+    0,     8);
		API_polar::template xo <    8>(s,    10800+    0, 10800+    8,              10800+    0,     8);
		API_polar::template xo <   16>(s,    10784+    0, 10784+   16,              10784+    0,    16);
		API_polar::template xo <   32>(s,    10752+    0, 10752+   32,              10752+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 10752+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           10816+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 10816+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           10824+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 10824+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           10828+    0,     4);
		API_polar::template xo <    4>(s,    10824+    0, 10824+    4,              10824+    0,     4);
		API_polar::template xo <    8>(s,    10816+    0, 10816+    8,              10816+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 10816+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           10832+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 10832+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           10836+    0,     4);
		API_polar::template xo <    4>(s,    10832+    0, 10832+    4,              10832+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 10832+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                           10840+    0,     8);
		API_polar::template xo <    8>(s,    10832+    0, 10832+    8,              10832+    0,     8);
		API_polar::template xo <   16>(s,    10816+    0, 10816+   16,              10816+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 10816+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           10848+    0,    32);
		API_polar::template xo <   32>(s,    10816+    0, 10816+   32,              10816+    0,    32);
		API_polar::template xo <   64>(s,    10752+    0, 10752+   64,              10752+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 10752+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           10880+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 10880+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           10888+    0,     8);
		API_polar::template xo <    8>(s,    10880+    0, 10880+    8,              10880+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 10880+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           10896+    0,    16);
		API_polar::template xo <   16>(s,    10880+    0, 10880+   16,              10880+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 10880+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           10912+    0,    32);
		API_polar::template xo <   32>(s,    10880+    0, 10880+   32,              10880+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 10880+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           10944+    0,    64);
		API_polar::template xo <   64>(s,    10880+    0, 10880+   64,              10880+    0,    64);
		API_polar::template xo <  128>(s,    10752+    0, 10752+  128,              10752+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 10752+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           11012+    0,     4);
		API_polar::template xo0<    4>(s,    11008+    4,                           11008+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 11008+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           11016+    0,     8);
		API_polar::template xo <    8>(s,    11008+    0, 11008+    8,              11008+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 11008+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           11024+    0,    16);
		API_polar::template xo <   16>(s,    11008+    0, 11008+   16,              11008+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 11008+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           11040+    0,    32);
		API_polar::template xo <   32>(s,    11008+    0, 11008+   32,              11008+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 11008+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           11072+    0,    64);
		API_polar::template xo <   64>(s,    11008+    0, 11008+   64,              11008+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 11008+    0, 65024+  256,   128);
		API_polar::template spc<  128>(s, l, 65280+    0,                           11136+    0,   128);
		API_polar::template xo <  128>(s,    11008+    0, 11008+  128,              11008+    0,   128);
		API_polar::template xo <  256>(s,    10752+    0, 10752+  256,              10752+    0,   256);
		API_polar::template xo <  512>(s,    10240+    0, 10240+  512,              10240+    0,   512);
		API_polar::template g  < 1024>(s, l, 61440+    0, 61440+ 1024, 10240+    0, 61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           11264+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 11264+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           11280+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 11280+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           11288+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 11288+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           11292+    0,     4);
		API_polar::template xo <    4>(s,    11288+    0, 11288+    4,              11288+    0,     4);
		API_polar::template xo <    8>(s,    11280+    0, 11280+    8,              11280+    0,     8);
		API_polar::template xo <   16>(s,    11264+    0, 11264+   16,              11264+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 11264+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           11296+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 11296+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                           11306+    0,     2);
		API_polar::template xo0<    2>(s,    11304+    2,                           11304+    0,     2);
		API_polar::template g  <    4>(s, l, 65520+    0, 65520+    4, 11304+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           11308+    0,     4);
		API_polar::template xo <    4>(s,    11304+    0, 11304+    4,              11304+    0,     4);
		API_polar::template xo <    8>(s,    11296+    0, 11296+    8,              11296+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 11296+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           11312+    0,    16);
		API_polar::template xo <   16>(s,    11296+    0, 11296+   16,              11296+    0,    16);
		API_polar::template xo <   32>(s,    11264+    0, 11264+   32,              11264+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 11264+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           11332+    0,     4);
		API_polar::template xo0<    4>(s,    11328+    4,                           11328+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 11328+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           11336+    0,     8);
		API_polar::template xo <    8>(s,    11328+    0, 11328+    8,              11328+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 11328+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           11344+    0,    16);
		API_polar::template xo <   16>(s,    11328+    0, 11328+   16,              11328+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 11328+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           11360+    0,    32);
		API_polar::template xo <   32>(s,    11328+    0, 11328+   32,              11328+    0,    32);
		API_polar::template xo <   64>(s,    11264+    0, 11264+   64,              11264+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 11264+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           11392+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 11392+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           11396+    0,     4);
		API_polar::template xo <    4>(s,    11392+    0, 11392+    4,              11392+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 11392+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           11400+    0,     8);
		API_polar::template xo <    8>(s,    11392+    0, 11392+    8,              11392+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 11392+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           11408+    0,    16);
		API_polar::template xo <   16>(s,    11392+    0, 11392+   16,              11392+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 11392+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           11424+    0,    32);
		API_polar::template xo <   32>(s,    11392+    0, 11392+   32,              11392+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 11392+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           11456+    0,    64);
		API_polar::template xo <   64>(s,    11392+    0, 11392+   64,              11392+    0,    64);
		API_polar::template xo <  128>(s,    11264+    0, 11264+  128,              11264+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 11264+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           11520+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 11520+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           11524+    0,     4);
		API_polar::template xo <    4>(s,    11520+    0, 11520+    4,              11520+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 11520+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           11528+    0,     8);
		API_polar::template xo <    8>(s,    11520+    0, 11520+    8,              11520+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 11520+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           11536+    0,    16);
		API_polar::template xo <   16>(s,    11520+    0, 11520+   16,              11520+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 11520+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           11552+    0,    32);
		API_polar::template xo <   32>(s,    11520+    0, 11520+   32,              11520+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 11520+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           11584+    0,    64);
		API_polar::template xo <   64>(s,    11520+    0, 11520+   64,              11520+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 11520+    0, 65024+  256,   128);
		API_polar::template h  <  128>(s, l, 65280+    0,                           11648+    0,   128);
		API_polar::template xo <  128>(s,    11520+    0, 11520+  128,              11520+    0,   128);
		API_polar::template xo <  256>(s,    11264+    0, 11264+  256,              11264+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512, 11264+    0, 63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           11776+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 11776+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           11780+    0,     4);
		API_polar::template xo <    4>(s,    11776+    0, 11776+    4,              11776+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 11776+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           11784+    0,     8);
		API_polar::template xo <    8>(s,    11776+    0, 11776+    8,              11776+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 11776+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           11792+    0,    16);
		API_polar::template xo <   16>(s,    11776+    0, 11776+   16,              11776+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 11776+    0, 65408+   64,    32);
		API_polar::template h  <   32>(s, l, 65472+    0,                           11808+    0,    32);
		API_polar::template xo <   32>(s,    11776+    0, 11776+   32,              11776+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 11776+    0, 65280+  128,    64);
		API_polar::template h  <   64>(s, l, 65408+    0,                           11840+    0,    64);
		API_polar::template xo <   64>(s,    11776+    0, 11776+   64,              11776+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 11776+    0, 65024+  256,   128);
		API_polar::template h  <  128>(s, l, 65280+    0,                           11904+    0,   128);
		API_polar::template xo <  128>(s,    11776+    0, 11776+  128,              11776+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 11776+    0, 64512+  512,   256);
		API_polar::template h  <  256>(s, l, 65024+    0,                           12032+    0,   256);
		API_polar::template xo <  256>(s,    11776+    0, 11776+  256,              11776+    0,   256);
		API_polar::template xo <  512>(s,    11264+    0, 11264+  512,              11264+    0,   512);
		API_polar::template xo < 1024>(s,    10240+    0, 10240+ 1024,              10240+    0,  1024);
		API_polar::template xo < 2048>(s,     8192+    0,  8192+ 2048,               8192+    0,  2048);
		API_polar::template g  < 4096>(s, l, 49152+    0, 49152+ 4096,  8192+    0, 49152+ 8192,  4096);
		API_polar::template f  < 2048>(   l, 57344+    0, 57344+ 2048,              57344+ 4096,  2048);
		API_polar::template f  < 1024>(   l, 61440+    0, 61440+ 1024,              61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template rep<   64>(s, l, 65408+    0,                           12288+    0,    64);
		API_polar::template gr <   64>(s, l, 65280+    0, 65280+   64, 12288+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                           12352+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32, 12352+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           12396+    0,     4);
		API_polar::template xo0<    4>(s,    12392+    4,                           12392+    0,     4);
		API_polar::template xo0<    8>(s,    12384+    8,                           12384+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 12384+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           12400+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 12400+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           12404+    0,     4);
		API_polar::template xo <    4>(s,    12400+    0, 12400+    4,              12400+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 12400+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           12408+    0,     8);
		API_polar::template xo <    8>(s,    12400+    0, 12400+    8,              12400+    0,     8);
		API_polar::template xo <   16>(s,    12384+    0, 12384+   16,              12384+    0,    16);
		API_polar::template xo <   32>(s,    12352+    0, 12352+   32,              12352+    0,    32);
		API_polar::template xo <   64>(s,    12288+    0, 12288+   64,              12288+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 12288+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           12440+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 12440+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           12444+    0,     4);
		API_polar::template xo <    4>(s,    12440+    0, 12440+    4,              12440+    0,     4);
		API_polar::template xo0<    8>(s,    12432+    8,                           12432+    0,     8);
		API_polar::template xo0<   16>(s,    12416+   16,                           12416+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 12416+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           12448+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 12448+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           12456+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 12456+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           12460+    0,     4);
		API_polar::template xo <    4>(s,    12456+    0, 12456+    4,              12456+    0,     4);
		API_polar::template xo <    8>(s,    12448+    0, 12448+    8,              12448+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 12448+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           12464+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 12464+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           12468+    0,     4);
		API_polar::template xo <    4>(s,    12464+    0, 12464+    4,              12464+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 12464+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           12472+    0,     8);
		API_polar::template xo <    8>(s,    12464+    0, 12464+    8,              12464+    0,     8);
		API_polar::template xo <   16>(s,    12448+    0, 12448+   16,              12448+    0,    16);
		API_polar::template xo <   32>(s,    12416+    0, 12416+   32,              12416+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 12416+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           12480+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 12480+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           12488+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 12488+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           12492+    0,     4);
		API_polar::template xo <    4>(s,    12488+    0, 12488+    4,              12488+    0,     4);
		API_polar::template xo <    8>(s,    12480+    0, 12480+    8,              12480+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 12480+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           12496+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 12496+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           12500+    0,     4);
		API_polar::template xo <    4>(s,    12496+    0, 12496+    4,              12496+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 12496+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                           12504+    0,     8);
		API_polar::template xo <    8>(s,    12496+    0, 12496+    8,              12496+    0,     8);
		API_polar::template xo <   16>(s,    12480+    0, 12480+   16,              12480+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 12480+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                           12514+    0,     2);
		API_polar::template xo0<    2>(s,    12512+    2,                           12512+    0,     2);
		API_polar::template g  <    4>(s, l, 65520+    0, 65520+    4, 12512+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           12516+    0,     4);
		API_polar::template xo <    4>(s,    12512+    0, 12512+    4,              12512+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 12512+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                           12520+    0,     8);
		API_polar::template xo <    8>(s,    12512+    0, 12512+    8,              12512+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 12512+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                           12528+    0,    16);
		API_polar::template xo <   16>(s,    12512+    0, 12512+   16,              12512+    0,    16);
		API_polar::template xo <   32>(s,    12480+    0, 12480+   32,              12480+    0,    32);
		API_polar::template xo <   64>(s,    12416+    0, 12416+   64,              12416+    0,    64);
		API_polar::template xo <  128>(s,    12288+    0, 12288+  128,              12288+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 12288+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           12544+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 12544+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           12560+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 12560+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           12568+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 12568+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           12572+    0,     4);
		API_polar::template xo <    4>(s,    12568+    0, 12568+    4,              12568+    0,     4);
		API_polar::template xo <    8>(s,    12560+    0, 12560+    8,              12560+    0,     8);
		API_polar::template xo <   16>(s,    12544+    0, 12544+   16,              12544+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 12544+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           12576+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 12576+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           12584+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 12584+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           12588+    0,     4);
		API_polar::template xo <    4>(s,    12584+    0, 12584+    4,              12584+    0,     4);
		API_polar::template xo <    8>(s,    12576+    0, 12576+    8,              12576+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 12576+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                           12594+    0,     2);
		API_polar::template xo0<    2>(s,    12592+    2,                           12592+    0,     2);
		API_polar::template g  <    4>(s, l, 65520+    0, 65520+    4, 12592+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           12596+    0,     4);
		API_polar::template xo <    4>(s,    12592+    0, 12592+    4,              12592+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 12592+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                           12600+    0,     8);
		API_polar::template xo <    8>(s,    12592+    0, 12592+    8,              12592+    0,     8);
		API_polar::template xo <   16>(s,    12576+    0, 12576+   16,              12576+    0,    16);
		API_polar::template xo <   32>(s,    12544+    0, 12544+   32,              12544+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 12544+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           12608+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 12608+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           12616+    0,     8);
		API_polar::template xo <    8>(s,    12608+    0, 12608+    8,              12608+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 12608+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           12624+    0,    16);
		API_polar::template xo <   16>(s,    12608+    0, 12608+   16,              12608+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 12608+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           12640+    0,    32);
		API_polar::template xo <   32>(s,    12608+    0, 12608+   32,              12608+    0,    32);
		API_polar::template xo <   64>(s,    12544+    0, 12544+   64,              12544+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 12544+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           12676+    0,     4);
		API_polar::template xo0<    4>(s,    12672+    4,                           12672+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 12672+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           12680+    0,     8);
		API_polar::template xo <    8>(s,    12672+    0, 12672+    8,              12672+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 12672+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           12688+    0,    16);
		API_polar::template xo <   16>(s,    12672+    0, 12672+   16,              12672+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 12672+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           12704+    0,    32);
		API_polar::template xo <   32>(s,    12672+    0, 12672+   32,              12672+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 12672+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           12736+    0,    64);
		API_polar::template xo <   64>(s,    12672+    0, 12672+   64,              12672+    0,    64);
		API_polar::template xo <  128>(s,    12544+    0, 12544+  128,              12544+    0,   128);
		API_polar::template xo <  256>(s,    12288+    0, 12288+  256,              12288+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512, 12288+    0, 63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           12800+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 12800+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           12816+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 12816+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                           12826+    0,     2);
		API_polar::template xo0<    2>(s,    12824+    2,                           12824+    0,     2);
		API_polar::template g  <    4>(s, l, 65520+    0, 65520+    4, 12824+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           12828+    0,     4);
		API_polar::template xo <    4>(s,    12824+    0, 12824+    4,              12824+    0,     4);
		API_polar::template xo <    8>(s,    12816+    0, 12816+    8,              12816+    0,     8);
		API_polar::template xo <   16>(s,    12800+    0, 12800+   16,              12800+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 12800+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           12836+    0,     4);
		API_polar::template xo0<    4>(s,    12832+    4,                           12832+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 12832+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           12840+    0,     8);
		API_polar::template xo <    8>(s,    12832+    0, 12832+    8,              12832+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 12832+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           12848+    0,    16);
		API_polar::template xo <   16>(s,    12832+    0, 12832+   16,              12832+    0,    16);
		API_polar::template xo <   32>(s,    12800+    0, 12800+   32,              12800+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 12800+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           12864+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 12864+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           12868+    0,     4);
		API_polar::template xo <    4>(s,    12864+    0, 12864+    4,              12864+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 12864+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           12872+    0,     8);
		API_polar::template xo <    8>(s,    12864+    0, 12864+    8,              12864+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 12864+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           12880+    0,    16);
		API_polar::template xo <   16>(s,    12864+    0, 12864+   16,              12864+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 12864+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           12896+    0,    32);
		API_polar::template xo <   32>(s,    12864+    0, 12864+   32,              12864+    0,    32);
		API_polar::template xo <   64>(s,    12800+    0, 12800+   64,              12800+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 12800+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           12928+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 12928+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           12932+    0,     4);
		API_polar::template xo <    4>(s,    12928+    0, 12928+    4,              12928+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 12928+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           12936+    0,     8);
		API_polar::template xo <    8>(s,    12928+    0, 12928+    8,              12928+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 12928+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           12944+    0,    16);
		API_polar::template xo <   16>(s,    12928+    0, 12928+   16,              12928+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 12928+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           12960+    0,    32);
		API_polar::template xo <   32>(s,    12928+    0, 12928+   32,              12928+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 12928+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           12992+    0,    64);
		API_polar::template xo <   64>(s,    12928+    0, 12928+   64,              12928+    0,    64);
		API_polar::template xo <  128>(s,    12800+    0, 12800+  128,              12800+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 12800+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           13056+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 13056+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           13060+    0,     4);
		API_polar::template xo <    4>(s,    13056+    0, 13056+    4,              13056+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 13056+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           13064+    0,     8);
		API_polar::template xo <    8>(s,    13056+    0, 13056+    8,              13056+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 13056+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           13072+    0,    16);
		API_polar::template xo <   16>(s,    13056+    0, 13056+   16,              13056+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 13056+    0, 65408+   64,    32);
		API_polar::template h  <   32>(s, l, 65472+    0,                           13088+    0,    32);
		API_polar::template xo <   32>(s,    13056+    0, 13056+   32,              13056+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 13056+    0, 65280+  128,    64);
		API_polar::template h  <   64>(s, l, 65408+    0,                           13120+    0,    64);
		API_polar::template xo <   64>(s,    13056+    0, 13056+   64,              13056+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 13056+    0, 65024+  256,   128);
		API_polar::template h  <  128>(s, l, 65280+    0,                           13184+    0,   128);
		API_polar::template xo <  128>(s,    13056+    0, 13056+  128,              13056+    0,   128);
		API_polar::template xo <  256>(s,    12800+    0, 12800+  256,              12800+    0,   256);
		API_polar::template xo <  512>(s,    12288+    0, 12288+  512,              12288+    0,   512);
		API_polar::template g  < 1024>(s, l, 61440+    0, 61440+ 1024, 12288+    0, 61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           13324+    0,     4);
		API_polar::template xo0<    4>(s,    13320+    4,                           13320+    0,     4);
		API_polar::template xo0<    8>(s,    13312+    8,                           13312+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 13312+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           13328+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 13328+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           13332+    0,     4);
		API_polar::template xo <    4>(s,    13328+    0, 13328+    4,              13328+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 13328+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           13336+    0,     8);
		API_polar::template xo <    8>(s,    13328+    0, 13328+    8,              13328+    0,     8);
		API_polar::template xo <   16>(s,    13312+    0, 13312+   16,              13312+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 13312+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           13344+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 13344+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           13348+    0,     4);
		API_polar::template xo <    4>(s,    13344+    0, 13344+    4,              13344+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 13344+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           13352+    0,     8);
		API_polar::template xo <    8>(s,    13344+    0, 13344+    8,              13344+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 13344+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           13360+    0,    16);
		API_polar::template xo <   16>(s,    13344+    0, 13344+   16,              13344+    0,    16);
		API_polar::template xo <   32>(s,    13312+    0, 13312+   32,              13312+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 13312+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           13376+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 13376+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           13380+    0,     4);
		API_polar::template xo <    4>(s,    13376+    0, 13376+    4,              13376+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 13376+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           13384+    0,     8);
		API_polar::template xo <    8>(s,    13376+    0, 13376+    8,              13376+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 13376+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           13392+    0,    16);
		API_polar::template xo <   16>(s,    13376+    0, 13376+   16,              13376+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 13376+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           13408+    0,    32);
		API_polar::template xo <   32>(s,    13376+    0, 13376+   32,              13376+    0,    32);
		API_polar::template xo <   64>(s,    13312+    0, 13312+   64,              13312+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 13312+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           13440+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 13440+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           13444+    0,     4);
		API_polar::template xo <    4>(s,    13440+    0, 13440+    4,              13440+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 13440+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           13448+    0,     8);
		API_polar::template xo <    8>(s,    13440+    0, 13440+    8,              13440+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 13440+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                           13456+    0,    16);
		API_polar::template xo <   16>(s,    13440+    0, 13440+   16,              13440+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 13440+    0, 65408+   64,    32);
		API_polar::template h  <   32>(s, l, 65472+    0,                           13472+    0,    32);
		API_polar::template xo <   32>(s,    13440+    0, 13440+   32,              13440+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 13440+    0, 65280+  128,    64);
		API_polar::template h  <   64>(s, l, 65408+    0,                           13504+    0,    64);
		API_polar::template xo <   64>(s,    13440+    0, 13440+   64,              13440+    0,    64);
		API_polar::template xo <  128>(s,    13312+    0, 13312+  128,              13312+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 13312+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           13568+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 13568+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           13572+    0,     4);
		API_polar::template xo <    4>(s,    13568+    0, 13568+    4,              13568+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 13568+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                           13576+    0,     8);
		API_polar::template xo <    8>(s,    13568+    0, 13568+    8,              13568+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 13568+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                           13584+    0,    16);
		API_polar::template xo <   16>(s,    13568+    0, 13568+   16,              13568+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 13568+    0, 65408+   64,    32);
		API_polar::template h  <   32>(s, l, 65472+    0,                           13600+    0,    32);
		API_polar::template xo <   32>(s,    13568+    0, 13568+   32,              13568+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 13568+    0, 65280+  128,    64);
		API_polar::template h  <   64>(s, l, 65408+    0,                           13632+    0,    64);
		API_polar::template xo <   64>(s,    13568+    0, 13568+   64,              13568+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 13568+    0, 65024+  256,   128);
		API_polar::template h  <  128>(s, l, 65280+    0,                           13696+    0,   128);
		API_polar::template xo <  128>(s,    13568+    0, 13568+  128,              13568+    0,   128);
		API_polar::template xo <  256>(s,    13312+    0, 13312+  256,              13312+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512, 13312+    0, 63488+ 1024,   512);
		API_polar::template spc<  512>(s, l, 64512+    0,                           13824+    0,   512);
		API_polar::template xo <  512>(s,    13312+    0, 13312+  512,              13312+    0,   512);
		API_polar::template xo < 1024>(s,    12288+    0, 12288+ 1024,              12288+    0,  1024);
		API_polar::template g  < 2048>(s, l, 57344+    0, 57344+ 2048, 12288+    0, 57344+ 4096,  2048);
		API_polar::template f  < 1024>(   l, 61440+    0, 61440+ 1024,              61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           14336+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 14336+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           14344+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 14344+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           14348+    0,     4);
		API_polar::template xo <    4>(s,    14344+    0, 14344+    4,              14344+    0,     4);
		API_polar::template xo <    8>(s,    14336+    0, 14336+    8,              14336+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 14336+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           14352+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 14352+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           14356+    0,     4);
		API_polar::template xo <    4>(s,    14352+    0, 14352+    4,              14352+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 14352+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           14360+    0,     8);
		API_polar::template xo <    8>(s,    14352+    0, 14352+    8,              14352+    0,     8);
		API_polar::template xo <   16>(s,    14336+    0, 14336+   16,              14336+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 14336+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           14368+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 14368+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           14372+    0,     4);
		API_polar::template xo <    4>(s,    14368+    0, 14368+    4,              14368+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 14368+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           14376+    0,     8);
		API_polar::template xo <    8>(s,    14368+    0, 14368+    8,              14368+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 14368+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                           14384+    0,    16);
		API_polar::template xo <   16>(s,    14368+    0, 14368+   16,              14368+    0,    16);
		API_polar::template xo <   32>(s,    14336+    0, 14336+   32,              14336+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 14336+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           14400+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 14400+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           14404+    0,     4);
		API_polar::template xo <    4>(s,    14400+    0, 14400+    4,              14400+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 14400+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                           14408+    0,     8);
		API_polar::template xo <    8>(s,    14400+    0, 14400+    8,              14400+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 14400+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                           14416+    0,    16);
		API_polar::template xo <   16>(s,    14400+    0, 14400+   16,              14400+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 14400+    0, 65408+   64,    32);
		API_polar::template h  <   32>(s, l, 65472+    0,                           14432+    0,    32);
		API_polar::template xo <   32>(s,    14400+    0, 14400+   32,              14400+    0,    32);
		API_polar::template xo <   64>(s,    14336+    0, 14336+   64,              14336+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 14336+    0, 65024+  256,   128);
		API_polar::template spc<  128>(s, l, 65280+    0,                           14464+    0,   128);
		API_polar::template xo <  128>(s,    14336+    0, 14336+  128,              14336+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 14336+    0, 64512+  512,   256);
		API_polar::template spc<  256>(s, l, 65024+    0,                           14592+    0,   256);
		API_polar::template xo <  256>(s,    14336+    0, 14336+  256,              14336+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512, 14336+    0, 63488+ 1024,   512);
		API_polar::template spc<  512>(s, l, 64512+    0,                           14848+    0,   512);
		API_polar::template xo <  512>(s,    14336+    0, 14336+  512,              14336+    0,   512);
		API_polar::template g  < 1024>(s, l, 61440+    0, 61440+ 1024, 14336+    0, 61440+ 2048,  1024);
		API_polar::template spc< 1024>(s, l, 63488+    0,                           15360+    0,  1024);
		API_polar::template xo < 1024>(s,    14336+    0, 14336+ 1024,              14336+    0,  1024);
		API_polar::template xo < 2048>(s,    12288+    0, 12288+ 2048,              12288+    0,  2048);
		API_polar::template xo < 4096>(s,     8192+    0,  8192+ 4096,               8192+    0,  4096);
		API_polar::template xo < 8192>(s,        0+    0,     0+ 8192,                  0+    0,  8192);
		API_polar::template g  <16384>(s, l,     0+    0,     0+16384,     0+    0,     0+32768, 16384);
		API_polar::template f  < 8192>(   l, 32768+    0, 32768+ 8192,              32768+16384,  8192);
		API_polar::template f  < 4096>(   l, 49152+    0, 49152+ 4096,              49152+ 8192,  4096);
		API_polar::template f  < 2048>(   l, 57344+    0, 57344+ 2048,              57344+ 4096,  2048);
		API_polar::template f  < 1024>(   l, 61440+    0, 61440+ 1024,              61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template rep<  256>(s, l, 65024+    0,                           16384+    0,   256);
		API_polar::template gr <  256>(s, l, 64512+    0, 64512+  256, 16384+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template rep<  128>(s, l, 65280+    0,                           16640+    0,   128);
		API_polar::template gr <  128>(s, l, 65024+    0, 65024+  128, 16640+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template g0 <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           16824+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 16824+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           16828+    0,     4);
		API_polar::template xo <    4>(s,    16824+    0, 16824+    4,              16824+    0,     4);
		API_polar::template xo0<    8>(s,    16816+    8,                           16816+    0,     8);
		API_polar::template xo0<   16>(s,    16800+   16,                           16800+    0,    16);
		API_polar::template xo0<   32>(s,    16768+   32,                           16768+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 16768+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           16832+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 16832+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           16848+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 16848+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           16856+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 16856+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           16860+    0,     4);
		API_polar::template xo <    4>(s,    16856+    0, 16856+    4,              16856+    0,     4);
		API_polar::template xo <    8>(s,    16848+    0, 16848+    8,              16848+    0,     8);
		API_polar::template xo <   16>(s,    16832+    0, 16832+   16,              16832+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 16832+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           16864+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 16864+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           16872+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 16872+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           16876+    0,     4);
		API_polar::template xo <    4>(s,    16872+    0, 16872+    4,              16872+    0,     4);
		API_polar::template xo <    8>(s,    16864+    0, 16864+    8,              16864+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 16864+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                           16882+    0,     2);
		API_polar::template xo0<    2>(s,    16880+    2,                           16880+    0,     2);
		API_polar::template g  <    4>(s, l, 65520+    0, 65520+    4, 16880+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           16884+    0,     4);
		API_polar::template xo <    4>(s,    16880+    0, 16880+    4,              16880+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 16880+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                           16888+    0,     8);
		API_polar::template xo <    8>(s,    16880+    0, 16880+    8,              16880+    0,     8);
		API_polar::template xo <   16>(s,    16864+    0, 16864+   16,              16864+    0,    16);
		API_polar::template xo <   32>(s,    16832+    0, 16832+   32,              16832+    0,    32);
		API_polar::template xo <   64>(s,    16768+    0, 16768+   64,              16768+    0,    64);
		API_polar::template xo <  128>(s,    16640+    0, 16640+  128,              16640+    0,   128);
		API_polar::template xo <  256>(s,    16384+    0, 16384+  256,              16384+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512, 16384+    0, 63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template g0 <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template g0 <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           17008+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 17008+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           17016+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 17016+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           17020+    0,     4);
		API_polar::template xo <    4>(s,    17016+    0, 17016+    4,              17016+    0,     4);
		API_polar::template xo <    8>(s,    17008+    0, 17008+    8,              17008+    0,     8);
		API_polar::template xo0<   16>(s,    16992+   16,                           16992+    0,    16);
		API_polar::template xo0<   32>(s,    16960+   32,                           16960+    0,    32);
		API_polar::template xo0<   64>(s,    16896+   64,                           16896+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 16896+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                           17024+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32, 17024+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           17056+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 17056+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           17072+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 17072+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           17080+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 17080+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           17084+    0,     4);
		API_polar::template xo <    4>(s,    17080+    0, 17080+    4,              17080+    0,     4);
		API_polar::template xo <    8>(s,    17072+    0, 17072+    8,              17072+    0,     8);
		API_polar::template xo <   16>(s,    17056+    0, 17056+   16,              17056+    0,    16);
		API_polar::template xo <   32>(s,    17024+    0, 17024+   32,              17024+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 17024+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           17088+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 17088+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                           17110+    0,     2);
		API_polar::template xo0<    2>(s,    17108+    2,                           17108+    0,     2);
		API_polar::template xo0<    4>(s,    17104+    4,                           17104+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 17104+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           17112+    0,     8);
		API_polar::template xo <    8>(s,    17104+    0, 17104+    8,              17104+    0,     8);
		API_polar::template xo <   16>(s,    17088+    0, 17088+   16,              17088+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 17088+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           17120+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 17120+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           17124+    0,     4);
		API_polar::template xo <    4>(s,    17120+    0, 17120+    4,              17120+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 17120+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           17128+    0,     8);
		API_polar::template xo <    8>(s,    17120+    0, 17120+    8,              17120+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 17120+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           17136+    0,    16);
		API_polar::template xo <   16>(s,    17120+    0, 17120+   16,              17120+    0,    16);
		API_polar::template xo <   32>(s,    17088+    0, 17088+   32,              17088+    0,    32);
		API_polar::template xo <   64>(s,    17024+    0, 17024+   64,              17024+    0,    64);
		API_polar::template xo <  128>(s,    16896+    0, 16896+  128,              16896+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 16896+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                           17152+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32, 17152+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           17184+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 17184+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           17204+    0,     4);
		API_polar::template xo0<    4>(s,    17200+    4,                           17200+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 17200+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           17208+    0,     8);
		API_polar::template xo <    8>(s,    17200+    0, 17200+    8,              17200+    0,     8);
		API_polar::template xo <   16>(s,    17184+    0, 17184+   16,              17184+    0,    16);
		API_polar::template xo <   32>(s,    17152+    0, 17152+   32,              17152+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 17152+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           17224+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 17224+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           17228+    0,     4);
		API_polar::template xo <    4>(s,    17224+    0, 17224+    4,              17224+    0,     4);
		API_polar::template xo0<    8>(s,    17216+    8,                           17216+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 17216+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           17232+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 17232+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           17236+    0,     4);
		API_polar::template xo <    4>(s,    17232+    0, 17232+    4,              17232+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 17232+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           17240+    0,     8);
		API_polar::template xo <    8>(s,    17232+    0, 17232+    8,              17232+    0,     8);
		API_polar::template xo <   16>(s,    17216+    0, 17216+   16,              17216+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 17216+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           17248+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 17248+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           17252+    0,     4);
		API_polar::template xo <    4>(s,    17248+    0, 17248+    4,              17248+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 17248+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           17256+    0,     8);
		API_polar::template xo <    8>(s,    17248+    0, 17248+    8,              17248+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 17248+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           17264+    0,    16);
		API_polar::template xo <   16>(s,    17248+    0, 17248+   16,              17248+    0,    16);
		API_polar::template xo <   32>(s,    17216+    0, 17216+   32,              17216+    0,    32);
		API_polar::template xo <   64>(s,    17152+    0, 17152+   64,              17152+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 17152+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           17280+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 17280+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           17288+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 17288+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           17292+    0,     4);
		API_polar::template xo <    4>(s,    17288+    0, 17288+    4,              17288+    0,     4);
		API_polar::template xo <    8>(s,    17280+    0, 17280+    8,              17280+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 17280+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           17296+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 17296+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           17300+    0,     4);
		API_polar::template xo <    4>(s,    17296+    0, 17296+    4,              17296+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 17296+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           17304+    0,     8);
		API_polar::template xo <    8>(s,    17296+    0, 17296+    8,              17296+    0,     8);
		API_polar::template xo <   16>(s,    17280+    0, 17280+   16,              17280+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 17280+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           17312+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 17312+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           17316+    0,     4);
		API_polar::template xo <    4>(s,    17312+    0, 17312+    4,              17312+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 17312+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                           17320+    0,     8);
		API_polar::template xo <    8>(s,    17312+    0, 17312+    8,              17312+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 17312+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                           17328+    0,    16);
		API_polar::template xo <   16>(s,    17312+    0, 17312+   16,              17312+    0,    16);
		API_polar::template xo <   32>(s,    17280+    0, 17280+   32,              17280+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 17280+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                           17346+    0,     2);
		API_polar::template xo0<    2>(s,    17344+    2,                           17344+    0,     2);
		API_polar::template g  <    4>(s, l, 65520+    0, 65520+    4, 17344+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           17348+    0,     4);
		API_polar::template xo <    4>(s,    17344+    0, 17344+    4,              17344+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 17344+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                           17352+    0,     8);
		API_polar::template xo <    8>(s,    17344+    0, 17344+    8,              17344+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 17344+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                           17360+    0,    16);
		API_polar::template xo <   16>(s,    17344+    0, 17344+   16,              17344+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 17344+    0, 65408+   64,    32);
		API_polar::template h  <   32>(s, l, 65472+    0,                           17376+    0,    32);
		API_polar::template xo <   32>(s,    17344+    0, 17344+   32,              17344+    0,    32);
		API_polar::template xo <   64>(s,    17280+    0, 17280+   64,              17280+    0,    64);
		API_polar::template xo <  128>(s,    17152+    0, 17152+  128,              17152+    0,   128);
		API_polar::template xo <  256>(s,    16896+    0, 16896+  256,              16896+    0,   256);
		API_polar::template xo <  512>(s,    16384+    0, 16384+  512,              16384+    0,   512);
		API_polar::template g  < 1024>(s, l, 61440+    0, 61440+ 1024, 16384+    0, 61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template g0 <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                           17472+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32, 17472+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           17504+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 17504+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                           17526+    0,     2);
		API_polar::template xo0<    2>(s,    17524+    2,                           17524+    0,     2);
		API_polar::template xo0<    4>(s,    17520+    4,                           17520+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 17520+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           17528+    0,     8);
		API_polar::template xo <    8>(s,    17520+    0, 17520+    8,              17520+    0,     8);
		API_polar::template xo <   16>(s,    17504+    0, 17504+   16,              17504+    0,    16);
		API_polar::template xo <   32>(s,    17472+    0, 17472+   32,              17472+    0,    32);
		API_polar::template xo0<   64>(s,    17408+   64,                           17408+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 17408+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                           17536+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32, 17536+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           17580+    0,     4);
		API_polar::template xo0<    4>(s,    17576+    4,                           17576+    0,     4);
		API_polar::template xo0<    8>(s,    17568+    8,                           17568+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 17568+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           17584+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 17584+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           17588+    0,     4);
		API_polar::template xo <    4>(s,    17584+    0, 17584+    4,              17584+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 17584+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           17592+    0,     8);
		API_polar::template xo <    8>(s,    17584+    0, 17584+    8,              17584+    0,     8);
		API_polar::template xo <   16>(s,    17568+    0, 17568+   16,              17568+    0,    16);
		API_polar::template xo <   32>(s,    17536+    0, 17536+   32,              17536+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 17536+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           17600+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 17600+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           17608+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 17608+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           17612+    0,     4);
		API_polar::template xo <    4>(s,    17608+    0, 17608+    4,              17608+    0,     4);
		API_polar::template xo <    8>(s,    17600+    0, 17600+    8,              17600+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 17600+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           17616+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 17616+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           17620+    0,     4);
		API_polar::template xo <    4>(s,    17616+    0, 17616+    4,              17616+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 17616+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           17624+    0,     8);
		API_polar::template xo <    8>(s,    17616+    0, 17616+    8,              17616+    0,     8);
		API_polar::template xo <   16>(s,    17600+    0, 17600+   16,              17600+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 17600+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           17632+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 17632+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           17636+    0,     4);
		API_polar::template xo <    4>(s,    17632+    0, 17632+    4,              17632+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 17632+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           17640+    0,     8);
		API_polar::template xo <    8>(s,    17632+    0, 17632+    8,              17632+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 17632+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                           17648+    0,    16);
		API_polar::template xo <   16>(s,    17632+    0, 17632+   16,              17632+    0,    16);
		API_polar::template xo <   32>(s,    17600+    0, 17600+   32,              17600+    0,    32);
		API_polar::template xo <   64>(s,    17536+    0, 17536+   64,              17536+    0,    64);
		API_polar::template xo <  128>(s,    17408+    0, 17408+  128,              17408+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 17408+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           17688+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 17688+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           17692+    0,     4);
		API_polar::template xo <    4>(s,    17688+    0, 17688+    4,              17688+    0,     4);
		API_polar::template xo0<    8>(s,    17680+    8,                           17680+    0,     8);
		API_polar::template xo0<   16>(s,    17664+   16,                           17664+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 17664+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           17696+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 17696+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           17704+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 17704+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           17708+    0,     4);
		API_polar::template xo <    4>(s,    17704+    0, 17704+    4,              17704+    0,     4);
		API_polar::template xo <    8>(s,    17696+    0, 17696+    8,              17696+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 17696+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           17712+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 17712+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           17716+    0,     4);
		API_polar::template xo <    4>(s,    17712+    0, 17712+    4,              17712+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 17712+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           17720+    0,     8);
		API_polar::template xo <    8>(s,    17712+    0, 17712+    8,              17712+    0,     8);
		API_polar::template xo <   16>(s,    17696+    0, 17696+   16,              17696+    0,    16);
		API_polar::template xo <   32>(s,    17664+    0, 17664+   32,              17664+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 17664+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           17728+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 17728+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           17736+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 17736+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           17740+    0,     4);
		API_polar::template xo <    4>(s,    17736+    0, 17736+    4,              17736+    0,     4);
		API_polar::template xo <    8>(s,    17728+    0, 17728+    8,              17728+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 17728+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           17744+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 17744+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           17748+    0,     4);
		API_polar::template xo <    4>(s,    17744+    0, 17744+    4,              17744+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 17744+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                           17752+    0,     8);
		API_polar::template xo <    8>(s,    17744+    0, 17744+    8,              17744+    0,     8);
		API_polar::template xo <   16>(s,    17728+    0, 17728+   16,              17728+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 17728+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           17760+    0,    32);
		API_polar::template xo <   32>(s,    17728+    0, 17728+   32,              17728+    0,    32);
		API_polar::template xo <   64>(s,    17664+    0, 17664+   64,              17664+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 17664+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           17792+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 17792+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           17800+    0,     8);
		API_polar::template xo <    8>(s,    17792+    0, 17792+    8,              17792+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 17792+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           17808+    0,    16);
		API_polar::template xo <   16>(s,    17792+    0, 17792+   16,              17792+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 17792+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           17824+    0,    32);
		API_polar::template xo <   32>(s,    17792+    0, 17792+   32,              17792+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 17792+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           17856+    0,    64);
		API_polar::template xo <   64>(s,    17792+    0, 17792+   64,              17792+    0,    64);
		API_polar::template xo <  128>(s,    17664+    0, 17664+  128,              17664+    0,   128);
		API_polar::template xo <  256>(s,    17408+    0, 17408+  256,              17408+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512, 17408+    0, 63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           17920+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 17920+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           17936+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 17936+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           17944+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 17944+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           17948+    0,     4);
		API_polar::template xo <    4>(s,    17944+    0, 17944+    4,              17944+    0,     4);
		API_polar::template xo <    8>(s,    17936+    0, 17936+    8,              17936+    0,     8);
		API_polar::template xo <   16>(s,    17920+    0, 17920+   16,              17920+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 17920+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           17952+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 17952+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                           17962+    0,     2);
		API_polar::template xo0<    2>(s,    17960+    2,                           17960+    0,     2);
		API_polar::template g  <    4>(s, l, 65520+    0, 65520+    4, 17960+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           17964+    0,     4);
		API_polar::template xo <    4>(s,    17960+    0, 17960+    4,              17960+    0,     4);
		API_polar::template xo <    8>(s,    17952+    0, 17952+    8,              17952+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 17952+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           17968+    0,    16);
		API_polar::template xo <   16>(s,    17952+    0, 17952+   16,              17952+    0,    16);
		API_polar::template xo <   32>(s,    17920+    0, 17920+   32,              17920+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 17920+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           17988+    0,     4);
		API_polar::template xo0<    4>(s,    17984+    4,                           17984+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 17984+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           17992+    0,     8);
		API_polar::template xo <    8>(s,    17984+    0, 17984+    8,              17984+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 17984+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           18000+    0,    16);
		API_polar::template xo <   16>(s,    17984+    0, 17984+   16,              17984+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 17984+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           18016+    0,    32);
		API_polar::template xo <   32>(s,    17984+    0, 17984+   32,              17984+    0,    32);
		API_polar::template xo <   64>(s,    17920+    0, 17920+   64,              17920+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 17920+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           18048+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 18048+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           18052+    0,     4);
		API_polar::template xo <    4>(s,    18048+    0, 18048+    4,              18048+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 18048+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           18056+    0,     8);
		API_polar::template xo <    8>(s,    18048+    0, 18048+    8,              18048+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 18048+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           18064+    0,    16);
		API_polar::template xo <   16>(s,    18048+    0, 18048+   16,              18048+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 18048+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           18080+    0,    32);
		API_polar::template xo <   32>(s,    18048+    0, 18048+   32,              18048+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 18048+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           18112+    0,    64);
		API_polar::template xo <   64>(s,    18048+    0, 18048+   64,              18048+    0,    64);
		API_polar::template xo <  128>(s,    17920+    0, 17920+  128,              17920+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 17920+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           18176+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 18176+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           18180+    0,     4);
		API_polar::template xo <    4>(s,    18176+    0, 18176+    4,              18176+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 18176+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           18184+    0,     8);
		API_polar::template xo <    8>(s,    18176+    0, 18176+    8,              18176+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 18176+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           18192+    0,    16);
		API_polar::template xo <   16>(s,    18176+    0, 18176+   16,              18176+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 18176+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           18208+    0,    32);
		API_polar::template xo <   32>(s,    18176+    0, 18176+   32,              18176+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 18176+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           18240+    0,    64);
		API_polar::template xo <   64>(s,    18176+    0, 18176+   64,              18176+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 18176+    0, 65024+  256,   128);
		API_polar::template h  <  128>(s, l, 65280+    0,                           18304+    0,   128);
		API_polar::template xo <  128>(s,    18176+    0, 18176+  128,              18176+    0,   128);
		API_polar::template xo <  256>(s,    17920+    0, 17920+  256,              17920+    0,   256);
		API_polar::template xo <  512>(s,    17408+    0, 17408+  512,              17408+    0,   512);
		API_polar::template xo < 1024>(s,    16384+    0, 16384+ 1024,              16384+    0,  1024);
		API_polar::template g  < 2048>(s, l, 57344+    0, 57344+ 2048, 16384+    0, 57344+ 4096,  2048);
		API_polar::template f  < 1024>(   l, 61440+    0, 61440+ 1024,              61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template rep<   64>(s, l, 65408+    0,                           18432+    0,    64);
		API_polar::template gr <   64>(s, l, 65280+    0, 65280+   64, 18432+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           18520+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 18520+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           18524+    0,     4);
		API_polar::template xo <    4>(s,    18520+    0, 18520+    4,              18520+    0,     4);
		API_polar::template xo0<    8>(s,    18512+    8,                           18512+    0,     8);
		API_polar::template xo0<   16>(s,    18496+   16,                           18496+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 18496+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           18528+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 18528+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           18536+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 18536+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           18540+    0,     4);
		API_polar::template xo <    4>(s,    18536+    0, 18536+    4,              18536+    0,     4);
		API_polar::template xo <    8>(s,    18528+    0, 18528+    8,              18528+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 18528+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           18544+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 18544+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           18548+    0,     4);
		API_polar::template xo <    4>(s,    18544+    0, 18544+    4,              18544+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 18544+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           18552+    0,     8);
		API_polar::template xo <    8>(s,    18544+    0, 18544+    8,              18544+    0,     8);
		API_polar::template xo <   16>(s,    18528+    0, 18528+   16,              18528+    0,    16);
		API_polar::template xo <   32>(s,    18496+    0, 18496+   32,              18496+    0,    32);
		API_polar::template xo <   64>(s,    18432+    0, 18432+   64,              18432+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 18432+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           18560+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 18560+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           18576+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 18576+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           18584+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 18584+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           18588+    0,     4);
		API_polar::template xo <    4>(s,    18584+    0, 18584+    4,              18584+    0,     4);
		API_polar::template xo <    8>(s,    18576+    0, 18576+    8,              18576+    0,     8);
		API_polar::template xo <   16>(s,    18560+    0, 18560+   16,              18560+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 18560+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           18592+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 18592+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           18600+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 18600+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           18604+    0,     4);
		API_polar::template xo <    4>(s,    18600+    0, 18600+    4,              18600+    0,     4);
		API_polar::template xo <    8>(s,    18592+    0, 18592+    8,              18592+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 18592+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           18608+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 18608+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           18612+    0,     4);
		API_polar::template xo <    4>(s,    18608+    0, 18608+    4,              18608+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 18608+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                           18616+    0,     8);
		API_polar::template xo <    8>(s,    18608+    0, 18608+    8,              18608+    0,     8);
		API_polar::template xo <   16>(s,    18592+    0, 18592+   16,              18592+    0,    16);
		API_polar::template xo <   32>(s,    18560+    0, 18560+   32,              18560+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 18560+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           18624+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 18624+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                           18634+    0,     2);
		API_polar::template xo0<    2>(s,    18632+    2,                           18632+    0,     2);
		API_polar::template g  <    4>(s, l, 65520+    0, 65520+    4, 18632+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           18636+    0,     4);
		API_polar::template xo <    4>(s,    18632+    0, 18632+    4,              18632+    0,     4);
		API_polar::template xo <    8>(s,    18624+    0, 18624+    8,              18624+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 18624+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           18640+    0,    16);
		API_polar::template xo <   16>(s,    18624+    0, 18624+   16,              18624+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 18624+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           18656+    0,    32);
		API_polar::template xo <   32>(s,    18624+    0, 18624+   32,              18624+    0,    32);
		API_polar::template xo <   64>(s,    18560+    0, 18560+   64,              18560+    0,    64);
		API_polar::template xo <  128>(s,    18432+    0, 18432+  128,              18432+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 18432+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           18688+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 18688+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           18704+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 18704+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           18712+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 18712+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           18716+    0,     4);
		API_polar::template xo <    4>(s,    18712+    0, 18712+    4,              18712+    0,     4);
		API_polar::template xo <    8>(s,    18704+    0, 18704+    8,              18704+    0,     8);
		API_polar::template xo <   16>(s,    18688+    0, 18688+   16,              18688+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 18688+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                           18726+    0,     2);
		API_polar::template xo0<    2>(s,    18724+    2,                           18724+    0,     2);
		API_polar::template xo0<    4>(s,    18720+    4,                           18720+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 18720+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           18728+    0,     8);
		API_polar::template xo <    8>(s,    18720+    0, 18720+    8,              18720+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 18720+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           18736+    0,    16);
		API_polar::template xo <   16>(s,    18720+    0, 18720+   16,              18720+    0,    16);
		API_polar::template xo <   32>(s,    18688+    0, 18688+   32,              18688+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 18688+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           18752+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 18752+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           18756+    0,     4);
		API_polar::template xo <    4>(s,    18752+    0, 18752+    4,              18752+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 18752+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           18760+    0,     8);
		API_polar::template xo <    8>(s,    18752+    0, 18752+    8,              18752+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 18752+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           18768+    0,    16);
		API_polar::template xo <   16>(s,    18752+    0, 18752+   16,              18752+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 18752+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           18784+    0,    32);
		API_polar::template xo <   32>(s,    18752+    0, 18752+   32,              18752+    0,    32);
		API_polar::template xo <   64>(s,    18688+    0, 18688+   64,              18688+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 18688+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           18816+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 18816+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           18820+    0,     4);
		API_polar::template xo <    4>(s,    18816+    0, 18816+    4,              18816+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 18816+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           18824+    0,     8);
		API_polar::template xo <    8>(s,    18816+    0, 18816+    8,              18816+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 18816+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           18832+    0,    16);
		API_polar::template xo <   16>(s,    18816+    0, 18816+   16,              18816+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 18816+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           18848+    0,    32);
		API_polar::template xo <   32>(s,    18816+    0, 18816+   32,              18816+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 18816+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           18880+    0,    64);
		API_polar::template xo <   64>(s,    18816+    0, 18816+   64,              18816+    0,    64);
		API_polar::template xo <  128>(s,    18688+    0, 18688+  128,              18688+    0,   128);
		API_polar::template xo <  256>(s,    18432+    0, 18432+  256,              18432+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512, 18432+    0, 63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                           18958+    0,     2);
		API_polar::template xo0<    2>(s,    18956+    2,                           18956+    0,     2);
		API_polar::template xo0<    4>(s,    18952+    4,                           18952+    0,     4);
		API_polar::template xo0<    8>(s,    18944+    8,                           18944+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 18944+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           18960+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 18960+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           18964+    0,     4);
		API_polar::template xo <    4>(s,    18960+    0, 18960+    4,              18960+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 18960+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           18968+    0,     8);
		API_polar::template xo <    8>(s,    18960+    0, 18960+    8,              18960+    0,     8);
		API_polar::template xo <   16>(s,    18944+    0, 18944+   16,              18944+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 18944+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           18976+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 18976+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           18980+    0,     4);
		API_polar::template xo <    4>(s,    18976+    0, 18976+    4,              18976+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 18976+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           18984+    0,     8);
		API_polar::template xo <    8>(s,    18976+    0, 18976+    8,              18976+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 18976+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           18992+    0,    16);
		API_polar::template xo <   16>(s,    18976+    0, 18976+   16,              18976+    0,    16);
		API_polar::template xo <   32>(s,    18944+    0, 18944+   32,              18944+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 18944+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           19008+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 19008+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           19012+    0,     4);
		API_polar::template xo <    4>(s,    19008+    0, 19008+    4,              19008+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 19008+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           19016+    0,     8);
		API_polar::template xo <    8>(s,    19008+    0, 19008+    8,              19008+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 19008+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           19024+    0,    16);
		API_polar::template xo <   16>(s,    19008+    0, 19008+   16,              19008+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 19008+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           19040+    0,    32);
		API_polar::template xo <   32>(s,    19008+    0, 19008+   32,              19008+    0,    32);
		API_polar::template xo <   64>(s,    18944+    0, 18944+   64,              18944+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 18944+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           19072+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 19072+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           19076+    0,     4);
		API_polar::template xo <    4>(s,    19072+    0, 19072+    4,              19072+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 19072+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           19080+    0,     8);
		API_polar::template xo <    8>(s,    19072+    0, 19072+    8,              19072+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 19072+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                           19088+    0,    16);
		API_polar::template xo <   16>(s,    19072+    0, 19072+   16,              19072+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 19072+    0, 65408+   64,    32);
		API_polar::template h  <   32>(s, l, 65472+    0,                           19104+    0,    32);
		API_polar::template xo <   32>(s,    19072+    0, 19072+   32,              19072+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 19072+    0, 65280+  128,    64);
		API_polar::template h  <   64>(s, l, 65408+    0,                           19136+    0,    64);
		API_polar::template xo <   64>(s,    19072+    0, 19072+   64,              19072+    0,    64);
		API_polar::template xo <  128>(s,    18944+    0, 18944+  128,              18944+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 18944+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           19200+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 19200+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           19204+    0,     4);
		API_polar::template xo <    4>(s,    19200+    0, 19200+    4,              19200+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 19200+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                           19208+    0,     8);
		API_polar::template xo <    8>(s,    19200+    0, 19200+    8,              19200+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 19200+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                           19216+    0,    16);
		API_polar::template xo <   16>(s,    19200+    0, 19200+   16,              19200+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 19200+    0, 65408+   64,    32);
		API_polar::template h  <   32>(s, l, 65472+    0,                           19232+    0,    32);
		API_polar::template xo <   32>(s,    19200+    0, 19200+   32,              19200+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 19200+    0, 65280+  128,    64);
		API_polar::template h  <   64>(s, l, 65408+    0,                           19264+    0,    64);
		API_polar::template xo <   64>(s,    19200+    0, 19200+   64,              19200+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 19200+    0, 65024+  256,   128);
		API_polar::template h  <  128>(s, l, 65280+    0,                           19328+    0,   128);
		API_polar::template xo <  128>(s,    19200+    0, 19200+  128,              19200+    0,   128);
		API_polar::template xo <  256>(s,    18944+    0, 18944+  256,              18944+    0,   256);
		API_polar::template xo <  512>(s,    18432+    0, 18432+  512,              18432+    0,   512);
		API_polar::template g  < 1024>(s, l, 61440+    0, 61440+ 1024, 18432+    0, 61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           19456+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 19456+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           19464+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 19464+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           19468+    0,     4);
		API_polar::template xo <    4>(s,    19464+    0, 19464+    4,              19464+    0,     4);
		API_polar::template xo <    8>(s,    19456+    0, 19456+    8,              19456+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 19456+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           19472+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 19472+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           19476+    0,     4);
		API_polar::template xo <    4>(s,    19472+    0, 19472+    4,              19472+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 19472+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           19480+    0,     8);
		API_polar::template xo <    8>(s,    19472+    0, 19472+    8,              19472+    0,     8);
		API_polar::template xo <   16>(s,    19456+    0, 19456+   16,              19456+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 19456+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           19488+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 19488+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           19492+    0,     4);
		API_polar::template xo <    4>(s,    19488+    0, 19488+    4,              19488+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 19488+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           19496+    0,     8);
		API_polar::template xo <    8>(s,    19488+    0, 19488+    8,              19488+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 19488+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           19504+    0,    16);
		API_polar::template xo <   16>(s,    19488+    0, 19488+   16,              19488+    0,    16);
		API_polar::template xo <   32>(s,    19456+    0, 19456+   32,              19456+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 19456+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           19520+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 19520+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           19524+    0,     4);
		API_polar::template xo <    4>(s,    19520+    0, 19520+    4,              19520+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 19520+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                           19528+    0,     8);
		API_polar::template xo <    8>(s,    19520+    0, 19520+    8,              19520+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 19520+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                           19536+    0,    16);
		API_polar::template xo <   16>(s,    19520+    0, 19520+   16,              19520+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 19520+    0, 65408+   64,    32);
		API_polar::template h  <   32>(s, l, 65472+    0,                           19552+    0,    32);
		API_polar::template xo <   32>(s,    19520+    0, 19520+   32,              19520+    0,    32);
		API_polar::template xo <   64>(s,    19456+    0, 19456+   64,              19456+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 19456+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                           19586+    0,     2);
		API_polar::template xo0<    2>(s,    19584+    2,                           19584+    0,     2);
		API_polar::template g  <    4>(s, l, 65520+    0, 65520+    4, 19584+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           19588+    0,     4);
		API_polar::template xo <    4>(s,    19584+    0, 19584+    4,              19584+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 19584+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                           19592+    0,     8);
		API_polar::template xo <    8>(s,    19584+    0, 19584+    8,              19584+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 19584+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                           19600+    0,    16);
		API_polar::template xo <   16>(s,    19584+    0, 19584+   16,              19584+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 19584+    0, 65408+   64,    32);
		API_polar::template h  <   32>(s, l, 65472+    0,                           19616+    0,    32);
		API_polar::template xo <   32>(s,    19584+    0, 19584+   32,              19584+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 19584+    0, 65280+  128,    64);
		API_polar::template h  <   64>(s, l, 65408+    0,                           19648+    0,    64);
		API_polar::template xo <   64>(s,    19584+    0, 19584+   64,              19584+    0,    64);
		API_polar::template xo <  128>(s,    19456+    0, 19456+  128,              19456+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 19456+    0, 64512+  512,   256);
		API_polar::template spc<  256>(s, l, 65024+    0,                           19712+    0,   256);
		API_polar::template xo <  256>(s,    19456+    0, 19456+  256,              19456+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512, 19456+    0, 63488+ 1024,   512);
		API_polar::template spc<  512>(s, l, 64512+    0,                           19968+    0,   512);
		API_polar::template xo <  512>(s,    19456+    0, 19456+  512,              19456+    0,   512);
		API_polar::template xo < 1024>(s,    18432+    0, 18432+ 1024,              18432+    0,  1024);
		API_polar::template xo < 2048>(s,    16384+    0, 16384+ 2048,              16384+    0,  2048);
		API_polar::template g  < 4096>(s, l, 49152+    0, 49152+ 4096, 16384+    0, 49152+ 8192,  4096);
		API_polar::template f  < 2048>(   l, 57344+    0, 57344+ 2048,              57344+ 4096,  2048);
		API_polar::template f  < 1024>(   l, 61440+    0, 61440+ 1024,              61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template g0 <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           20512+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 20512+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           20528+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 20528+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           20536+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 20536+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           20540+    0,     4);
		API_polar::template xo <    4>(s,    20536+    0, 20536+    4,              20536+    0,     4);
		API_polar::template xo <    8>(s,    20528+    0, 20528+    8,              20528+    0,     8);
		API_polar::template xo <   16>(s,    20512+    0, 20512+   16,              20512+    0,    16);
		API_polar::template xo0<   32>(s,    20480+   32,                           20480+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 20480+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           20544+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 20544+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           20560+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 20560+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           20568+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 20568+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           20572+    0,     4);
		API_polar::template xo <    4>(s,    20568+    0, 20568+    4,              20568+    0,     4);
		API_polar::template xo <    8>(s,    20560+    0, 20560+    8,              20560+    0,     8);
		API_polar::template xo <   16>(s,    20544+    0, 20544+   16,              20544+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 20544+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                           20582+    0,     2);
		API_polar::template xo0<    2>(s,    20580+    2,                           20580+    0,     2);
		API_polar::template xo0<    4>(s,    20576+    4,                           20576+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 20576+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           20584+    0,     8);
		API_polar::template xo <    8>(s,    20576+    0, 20576+    8,              20576+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 20576+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           20592+    0,    16);
		API_polar::template xo <   16>(s,    20576+    0, 20576+   16,              20576+    0,    16);
		API_polar::template xo <   32>(s,    20544+    0, 20544+   32,              20544+    0,    32);
		API_polar::template xo <   64>(s,    20480+    0, 20480+   64,              20480+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 20480+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           20608+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 20608+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           20628+    0,     4);
		API_polar::template xo0<    4>(s,    20624+    4,                           20624+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 20624+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           20632+    0,     8);
		API_polar::template xo <    8>(s,    20624+    0, 20624+    8,              20624+    0,     8);
		API_polar::template xo <   16>(s,    20608+    0, 20608+   16,              20608+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 20608+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           20640+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 20640+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           20644+    0,     4);
		API_polar::template xo <    4>(s,    20640+    0, 20640+    4,              20640+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 20640+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           20648+    0,     8);
		API_polar::template xo <    8>(s,    20640+    0, 20640+    8,              20640+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 20640+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           20656+    0,    16);
		API_polar::template xo <   16>(s,    20640+    0, 20640+   16,              20640+    0,    16);
		API_polar::template xo <   32>(s,    20608+    0, 20608+   32,              20608+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 20608+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           20672+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 20672+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           20676+    0,     4);
		API_polar::template xo <    4>(s,    20672+    0, 20672+    4,              20672+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 20672+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           20680+    0,     8);
		API_polar::template xo <    8>(s,    20672+    0, 20672+    8,              20672+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 20672+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           20688+    0,    16);
		API_polar::template xo <   16>(s,    20672+    0, 20672+   16,              20672+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 20672+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           20704+    0,    32);
		API_polar::template xo <   32>(s,    20672+    0, 20672+   32,              20672+    0,    32);
		API_polar::template xo <   64>(s,    20608+    0, 20608+   64,              20608+    0,    64);
		API_polar::template xo <  128>(s,    20480+    0, 20480+  128,              20480+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 20480+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           20744+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 20744+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           20748+    0,     4);
		API_polar::template xo <    4>(s,    20744+    0, 20744+    4,              20744+    0,     4);
		API_polar::template xo0<    8>(s,    20736+    8,                           20736+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 20736+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           20752+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 20752+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           20756+    0,     4);
		API_polar::template xo <    4>(s,    20752+    0, 20752+    4,              20752+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 20752+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           20760+    0,     8);
		API_polar::template xo <    8>(s,    20752+    0, 20752+    8,              20752+    0,     8);
		API_polar::template xo <   16>(s,    20736+    0, 20736+   16,              20736+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 20736+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           20768+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 20768+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           20772+    0,     4);
		API_polar::template xo <    4>(s,    20768+    0, 20768+    4,              20768+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 20768+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           20776+    0,     8);
		API_polar::template xo <    8>(s,    20768+    0, 20768+    8,              20768+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 20768+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           20784+    0,    16);
		API_polar::template xo <   16>(s,    20768+    0, 20768+   16,              20768+    0,    16);
		API_polar::template xo <   32>(s,    20736+    0, 20736+   32,              20736+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 20736+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           20800+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 20800+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           20804+    0,     4);
		API_polar::template xo <    4>(s,    20800+    0, 20800+    4,              20800+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 20800+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           20808+    0,     8);
		API_polar::template xo <    8>(s,    20800+    0, 20800+    8,              20800+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 20800+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                           20816+    0,    16);
		API_polar::template xo <   16>(s,    20800+    0, 20800+   16,              20800+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 20800+    0, 65408+   64,    32);
		API_polar::template h  <   32>(s, l, 65472+    0,                           20832+    0,    32);
		API_polar::template xo <   32>(s,    20800+    0, 20800+   32,              20800+    0,    32);
		API_polar::template xo <   64>(s,    20736+    0, 20736+   64,              20736+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 20736+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           20864+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 20864+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           20868+    0,     4);
		API_polar::template xo <    4>(s,    20864+    0, 20864+    4,              20864+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 20864+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                           20872+    0,     8);
		API_polar::template xo <    8>(s,    20864+    0, 20864+    8,              20864+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 20864+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                           20880+    0,    16);
		API_polar::template xo <   16>(s,    20864+    0, 20864+   16,              20864+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 20864+    0, 65408+   64,    32);
		API_polar::template h  <   32>(s, l, 65472+    0,                           20896+    0,    32);
		API_polar::template xo <   32>(s,    20864+    0, 20864+   32,              20864+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 20864+    0, 65280+  128,    64);
		API_polar::template h  <   64>(s, l, 65408+    0,                           20928+    0,    64);
		API_polar::template xo <   64>(s,    20864+    0, 20864+   64,              20864+    0,    64);
		API_polar::template xo <  128>(s,    20736+    0, 20736+  128,              20736+    0,   128);
		API_polar::template xo <  256>(s,    20480+    0, 20480+  256,              20480+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512, 20480+    0, 63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           20992+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 20992+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           21000+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 21000+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           21004+    0,     4);
		API_polar::template xo <    4>(s,    21000+    0, 21000+    4,              21000+    0,     4);
		API_polar::template xo <    8>(s,    20992+    0, 20992+    8,              20992+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 20992+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           21008+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 21008+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           21012+    0,     4);
		API_polar::template xo <    4>(s,    21008+    0, 21008+    4,              21008+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 21008+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           21016+    0,     8);
		API_polar::template xo <    8>(s,    21008+    0, 21008+    8,              21008+    0,     8);
		API_polar::template xo <   16>(s,    20992+    0, 20992+   16,              20992+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 20992+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           21024+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 21024+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           21028+    0,     4);
		API_polar::template xo <    4>(s,    21024+    0, 21024+    4,              21024+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 21024+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                           21032+    0,     8);
		API_polar::template xo <    8>(s,    21024+    0, 21024+    8,              21024+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 21024+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                           21040+    0,    16);
		API_polar::template xo <   16>(s,    21024+    0, 21024+   16,              21024+    0,    16);
		API_polar::template xo <   32>(s,    20992+    0, 20992+   32,              20992+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 20992+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                           21058+    0,     2);
		API_polar::template xo0<    2>(s,    21056+    2,                           21056+    0,     2);
		API_polar::template g  <    4>(s, l, 65520+    0, 65520+    4, 21056+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           21060+    0,     4);
		API_polar::template xo <    4>(s,    21056+    0, 21056+    4,              21056+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 21056+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                           21064+    0,     8);
		API_polar::template xo <    8>(s,    21056+    0, 21056+    8,              21056+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 21056+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                           21072+    0,    16);
		API_polar::template xo <   16>(s,    21056+    0, 21056+   16,              21056+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 21056+    0, 65408+   64,    32);
		API_polar::template h  <   32>(s, l, 65472+    0,                           21088+    0,    32);
		API_polar::template xo <   32>(s,    21056+    0, 21056+   32,              21056+    0,    32);
		API_polar::template xo <   64>(s,    20992+    0, 20992+   64,              20992+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 20992+    0, 65024+  256,   128);
		API_polar::template spc<  128>(s, l, 65280+    0,                           21120+    0,   128);
		API_polar::template xo <  128>(s,    20992+    0, 20992+  128,              20992+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 20992+    0, 64512+  512,   256);
		API_polar::template spc<  256>(s, l, 65024+    0,                           21248+    0,   256);
		API_polar::template xo <  256>(s,    20992+    0, 20992+  256,              20992+    0,   256);
		API_polar::template xo <  512>(s,    20480+    0, 20480+  512,              20480+    0,   512);
		API_polar::template g  < 1024>(s, l, 61440+    0, 61440+ 1024, 20480+    0, 61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           21504+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 21504+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           21512+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 21512+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           21516+    0,     4);
		API_polar::template xo <    4>(s,    21512+    0, 21512+    4,              21512+    0,     4);
		API_polar::template xo <    8>(s,    21504+    0, 21504+    8,              21504+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 21504+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                           21522+    0,     2);
		API_polar::template xo0<    2>(s,    21520+    2,                           21520+    0,     2);
		API_polar::template g  <    4>(s, l, 65520+    0, 65520+    4, 21520+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           21524+    0,     4);
		API_polar::template xo <    4>(s,    21520+    0, 21520+    4,              21520+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 21520+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                           21528+    0,     8);
		API_polar::template xo <    8>(s,    21520+    0, 21520+    8,              21520+    0,     8);
		API_polar::template xo <   16>(s,    21504+    0, 21504+   16,              21504+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 21504+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           21536+    0,    32);
		API_polar::template xo <   32>(s,    21504+    0, 21504+   32,              21504+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 21504+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           21568+    0,    64);
		API_polar::template xo <   64>(s,    21504+    0, 21504+   64,              21504+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 21504+    0, 65024+  256,   128);
		API_polar::template spc<  128>(s, l, 65280+    0,                           21632+    0,   128);
		API_polar::template xo <  128>(s,    21504+    0, 21504+  128,              21504+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 21504+    0, 64512+  512,   256);
		API_polar::template spc<  256>(s, l, 65024+    0,                           21760+    0,   256);
		API_polar::template xo <  256>(s,    21504+    0, 21504+  256,              21504+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512, 21504+    0, 63488+ 1024,   512);
		API_polar::template spc<  512>(s, l, 64512+    0,                           22016+    0,   512);
		API_polar::template xo <  512>(s,    21504+    0, 21504+  512,              21504+    0,   512);
		API_polar::template xo < 1024>(s,    20480+    0, 20480+ 1024,              20480+    0,  1024);
		API_polar::template g  < 2048>(s, l, 57344+    0, 57344+ 2048, 20480+    0, 57344+ 4096,  2048);
		API_polar::template f  < 1024>(   l, 61440+    0, 61440+ 1024,              61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                           22534+    0,     2);
		API_polar::template xo0<    2>(s,    22532+    2,                           22532+    0,     2);
		API_polar::template xo0<    4>(s,    22528+    4,                           22528+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 22528+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           22536+    0,     8);
		API_polar::template xo <    8>(s,    22528+    0, 22528+    8,              22528+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 22528+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           22544+    0,    16);
		API_polar::template xo <   16>(s,    22528+    0, 22528+   16,              22528+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 22528+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           22560+    0,    32);
		API_polar::template xo <   32>(s,    22528+    0, 22528+   32,              22528+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 22528+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           22592+    0,    64);
		API_polar::template xo <   64>(s,    22528+    0, 22528+   64,              22528+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 22528+    0, 65024+  256,   128);
		API_polar::template spc<  128>(s, l, 65280+    0,                           22656+    0,   128);
		API_polar::template xo <  128>(s,    22528+    0, 22528+  128,              22528+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 22528+    0, 64512+  512,   256);
		API_polar::template spc<  256>(s, l, 65024+    0,                           22784+    0,   256);
		API_polar::template xo <  256>(s,    22528+    0, 22528+  256,              22528+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512, 22528+    0, 63488+ 1024,   512);
		API_polar::template spc<  512>(s, l, 64512+    0,                           23040+    0,   512);
		API_polar::template xo <  512>(s,    22528+    0, 22528+  512,              22528+    0,   512);
		API_polar::template g  < 1024>(s, l, 61440+    0, 61440+ 1024, 22528+    0, 61440+ 2048,  1024);
		API_polar::template spc< 1024>(s, l, 63488+    0,                           23552+    0,  1024);
		API_polar::template xo < 1024>(s,    22528+    0, 22528+ 1024,              22528+    0,  1024);
		API_polar::template xo < 2048>(s,    20480+    0, 20480+ 2048,              20480+    0,  2048);
		API_polar::template xo < 4096>(s,    16384+    0, 16384+ 4096,              16384+    0,  4096);
		API_polar::template g  < 8192>(s, l, 32768+    0, 32768+ 8192, 16384+    0, 32768+16384,  8192);
		API_polar::template f  < 4096>(   l, 49152+    0, 49152+ 4096,              49152+ 8192,  4096);
		API_polar::template f  < 2048>(   l, 57344+    0, 57344+ 2048,              57344+ 4096,  2048);
		API_polar::template f  < 1024>(   l, 61440+    0, 61440+ 1024,              61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                           24576+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32, 24576+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                           24622+    0,     2);
		API_polar::template xo0<    2>(s,    24620+    2,                           24620+    0,     2);
		API_polar::template xo0<    4>(s,    24616+    4,                           24616+    0,     4);
		API_polar::template xo0<    8>(s,    24608+    8,                           24608+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 24608+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           24628+    0,     4);
		API_polar::template xo0<    4>(s,    24624+    4,                           24624+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 24624+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           24632+    0,     8);
		API_polar::template xo <    8>(s,    24624+    0, 24624+    8,              24624+    0,     8);
		API_polar::template xo <   16>(s,    24608+    0, 24608+   16,              24608+    0,    16);
		API_polar::template xo <   32>(s,    24576+    0, 24576+   32,              24576+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 24576+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           24648+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 24648+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           24652+    0,     4);
		API_polar::template xo <    4>(s,    24648+    0, 24648+    4,              24648+    0,     4);
		API_polar::template xo0<    8>(s,    24640+    8,                           24640+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 24640+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           24656+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 24656+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           24660+    0,     4);
		API_polar::template xo <    4>(s,    24656+    0, 24656+    4,              24656+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 24656+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           24664+    0,     8);
		API_polar::template xo <    8>(s,    24656+    0, 24656+    8,              24656+    0,     8);
		API_polar::template xo <   16>(s,    24640+    0, 24640+   16,              24640+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 24640+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           24672+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 24672+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           24676+    0,     4);
		API_polar::template xo <    4>(s,    24672+    0, 24672+    4,              24672+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 24672+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           24680+    0,     8);
		API_polar::template xo <    8>(s,    24672+    0, 24672+    8,              24672+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 24672+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           24688+    0,    16);
		API_polar::template xo <   16>(s,    24672+    0, 24672+   16,              24672+    0,    16);
		API_polar::template xo <   32>(s,    24640+    0, 24640+   32,              24640+    0,    32);
		API_polar::template xo <   64>(s,    24576+    0, 24576+   64,              24576+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 24576+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           24704+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 24704+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           24712+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 24712+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           24716+    0,     4);
		API_polar::template xo <    4>(s,    24712+    0, 24712+    4,              24712+    0,     4);
		API_polar::template xo <    8>(s,    24704+    0, 24704+    8,              24704+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 24704+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           24720+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 24720+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           24724+    0,     4);
		API_polar::template xo <    4>(s,    24720+    0, 24720+    4,              24720+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 24720+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           24728+    0,     8);
		API_polar::template xo <    8>(s,    24720+    0, 24720+    8,              24720+    0,     8);
		API_polar::template xo <   16>(s,    24704+    0, 24704+   16,              24704+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 24704+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           24736+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 24736+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           24740+    0,     4);
		API_polar::template xo <    4>(s,    24736+    0, 24736+    4,              24736+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 24736+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                           24744+    0,     8);
		API_polar::template xo <    8>(s,    24736+    0, 24736+    8,              24736+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 24736+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                           24752+    0,    16);
		API_polar::template xo <   16>(s,    24736+    0, 24736+   16,              24736+    0,    16);
		API_polar::template xo <   32>(s,    24704+    0, 24704+   32,              24704+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 24704+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                           24770+    0,     2);
		API_polar::template xo0<    2>(s,    24768+    2,                           24768+    0,     2);
		API_polar::template g  <    4>(s, l, 65520+    0, 65520+    4, 24768+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           24772+    0,     4);
		API_polar::template xo <    4>(s,    24768+    0, 24768+    4,              24768+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 24768+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                           24776+    0,     8);
		API_polar::template xo <    8>(s,    24768+    0, 24768+    8,              24768+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 24768+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                           24784+    0,    16);
		API_polar::template xo <   16>(s,    24768+    0, 24768+   16,              24768+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 24768+    0, 65408+   64,    32);
		API_polar::template h  <   32>(s, l, 65472+    0,                           24800+    0,    32);
		API_polar::template xo <   32>(s,    24768+    0, 24768+   32,              24768+    0,    32);
		API_polar::template xo <   64>(s,    24704+    0, 24704+   64,              24704+    0,    64);
		API_polar::template xo <  128>(s,    24576+    0, 24576+  128,              24576+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 24576+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           24832+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 24832+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           24840+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 24840+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           24844+    0,     4);
		API_polar::template xo <    4>(s,    24840+    0, 24840+    4,              24840+    0,     4);
		API_polar::template xo <    8>(s,    24832+    0, 24832+    8,              24832+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 24832+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           24848+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 24848+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           24852+    0,     4);
		API_polar::template xo <    4>(s,    24848+    0, 24848+    4,              24848+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 24848+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                           24856+    0,     8);
		API_polar::template xo <    8>(s,    24848+    0, 24848+    8,              24848+    0,     8);
		API_polar::template xo <   16>(s,    24832+    0, 24832+   16,              24832+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 24832+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           24864+    0,    32);
		API_polar::template xo <   32>(s,    24832+    0, 24832+   32,              24832+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 24832+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           24896+    0,    64);
		API_polar::template xo <   64>(s,    24832+    0, 24832+   64,              24832+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 24832+    0, 65024+  256,   128);
		API_polar::template spc<  128>(s, l, 65280+    0,                           24960+    0,   128);
		API_polar::template xo <  128>(s,    24832+    0, 24832+  128,              24832+    0,   128);
		API_polar::template xo <  256>(s,    24576+    0, 24576+  256,              24576+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512, 24576+    0, 63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           25088+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 25088+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                           25098+    0,     2);
		API_polar::template xo0<    2>(s,    25096+    2,                           25096+    0,     2);
		API_polar::template g  <    4>(s, l, 65520+    0, 65520+    4, 25096+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           25100+    0,     4);
		API_polar::template xo <    4>(s,    25096+    0, 25096+    4,              25096+    0,     4);
		API_polar::template xo <    8>(s,    25088+    0, 25088+    8,              25088+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 25088+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           25104+    0,    16);
		API_polar::template xo <   16>(s,    25088+    0, 25088+   16,              25088+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 25088+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           25120+    0,    32);
		API_polar::template xo <   32>(s,    25088+    0, 25088+   32,              25088+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 25088+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           25152+    0,    64);
		API_polar::template xo <   64>(s,    25088+    0, 25088+   64,              25088+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 25088+    0, 65024+  256,   128);
		API_polar::template spc<  128>(s, l, 65280+    0,                           25216+    0,   128);
		API_polar::template xo <  128>(s,    25088+    0, 25088+  128,              25088+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 25088+    0, 64512+  512,   256);
		API_polar::template spc<  256>(s, l, 65024+    0,                           25344+    0,   256);
		API_polar::template xo <  256>(s,    25088+    0, 25088+  256,              25088+    0,   256);
		API_polar::template xo <  512>(s,    24576+    0, 24576+  512,              24576+    0,   512);
		API_polar::template g  < 1024>(s, l, 61440+    0, 61440+ 1024, 24576+    0, 61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           25600+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 25600+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           25604+    0,     4);
		API_polar::template xo <    4>(s,    25600+    0, 25600+    4,              25600+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 25600+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           25608+    0,     8);
		API_polar::template xo <    8>(s,    25600+    0, 25600+    8,              25600+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 25600+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           25616+    0,    16);
		API_polar::template xo <   16>(s,    25600+    0, 25600+   16,              25600+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 25600+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           25632+    0,    32);
		API_polar::template xo <   32>(s,    25600+    0, 25600+   32,              25600+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 25600+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           25664+    0,    64);
		API_polar::template xo <   64>(s,    25600+    0, 25600+   64,              25600+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 25600+    0, 65024+  256,   128);
		API_polar::template spc<  128>(s, l, 65280+    0,                           25728+    0,   128);
		API_polar::template xo <  128>(s,    25600+    0, 25600+  128,              25600+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 25600+    0, 64512+  512,   256);
		API_polar::template spc<  256>(s, l, 65024+    0,                           25856+    0,   256);
		API_polar::template xo <  256>(s,    25600+    0, 25600+  256,              25600+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512, 25600+    0, 63488+ 1024,   512);
		API_polar::template spc<  512>(s, l, 64512+    0,                           26112+    0,   512);
		API_polar::template xo <  512>(s,    25600+    0, 25600+  512,              25600+    0,   512);
		API_polar::template xo < 1024>(s,    24576+    0, 24576+ 1024,              24576+    0,  1024);
		API_polar::template g  < 2048>(s, l, 57344+    0, 57344+ 2048, 24576+    0, 57344+ 4096,  2048);
		API_polar::template f  < 1024>(   l, 61440+    0, 61440+ 1024,              61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           26624+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 26624+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           26628+    0,     4);
		API_polar::template xo <    4>(s,    26624+    0, 26624+    4,              26624+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 26624+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           26632+    0,     8);
		API_polar::template xo <    8>(s,    26624+    0, 26624+    8,              26624+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 26624+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           26640+    0,    16);
		API_polar::template xo <   16>(s,    26624+    0, 26624+   16,              26624+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 26624+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           26656+    0,    32);
		API_polar::template xo <   32>(s,    26624+    0, 26624+   32,              26624+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 26624+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           26688+    0,    64);
		API_polar::template xo <   64>(s,    26624+    0, 26624+   64,              26624+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 26624+    0, 65024+  256,   128);
		API_polar::template spc<  128>(s, l, 65280+    0,                           26752+    0,   128);
		API_polar::template xo <  128>(s,    26624+    0, 26624+  128,              26624+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 26624+    0, 64512+  512,   256);
		API_polar::template h  <  256>(s, l, 65024+    0,                           26880+    0,   256);
		API_polar::template xo <  256>(s,    26624+    0, 26624+  256,              26624+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512, 26624+    0, 63488+ 1024,   512);
		API_polar::template h  <  512>(s, l, 64512+    0,                           27136+    0,   512);
		API_polar::template xo <  512>(s,    26624+    0, 26624+  512,              26624+    0,   512);
		API_polar::template g  < 1024>(s, l, 61440+    0, 61440+ 1024, 26624+    0, 61440+ 2048,  1024);
		API_polar::template h  < 1024>(s, l, 63488+    0,                           27648+    0,  1024);
		API_polar::template xo < 1024>(s,    26624+    0, 26624+ 1024,              26624+    0,  1024);
		API_polar::template xo < 2048>(s,    24576+    0, 24576+ 2048,              24576+    0,  2048);
		API_polar::template g  < 4096>(s, l, 49152+    0, 49152+ 4096, 24576+    0, 49152+ 8192,  4096);
		API_polar::template f  < 2048>(   l, 57344+    0, 57344+ 2048,              57344+ 4096,  2048);
		API_polar::template f  < 1024>(   l, 61440+    0, 61440+ 1024,              61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           28672+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 28672+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           28676+    0,     4);
		API_polar::template xo <    4>(s,    28672+    0, 28672+    4,              28672+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 28672+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           28680+    0,     8);
		API_polar::template xo <    8>(s,    28672+    0, 28672+    8,              28672+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 28672+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           28688+    0,    16);
		API_polar::template xo <   16>(s,    28672+    0, 28672+   16,              28672+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 28672+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           28704+    0,    32);
		API_polar::template xo <   32>(s,    28672+    0, 28672+   32,              28672+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 28672+    0, 65280+  128,    64);
		API_polar::template h  <   64>(s, l, 65408+    0,                           28736+    0,    64);
		API_polar::template xo <   64>(s,    28672+    0, 28672+   64,              28672+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 28672+    0, 65024+  256,   128);
		API_polar::template h  <  128>(s, l, 65280+    0,                           28800+    0,   128);
		API_polar::template xo <  128>(s,    28672+    0, 28672+  128,              28672+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 28672+    0, 64512+  512,   256);
		API_polar::template h  <  256>(s, l, 65024+    0,                           28928+    0,   256);
		API_polar::template xo <  256>(s,    28672+    0, 28672+  256,              28672+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512, 28672+    0, 63488+ 1024,   512);
		API_polar::template h  <  512>(s, l, 64512+    0,                           29184+    0,   512);
		API_polar::template xo <  512>(s,    28672+    0, 28672+  512,              28672+    0,   512);
		API_polar::template g  < 1024>(s, l, 61440+    0, 61440+ 1024, 28672+    0, 61440+ 2048,  1024);
		API_polar::template h  < 1024>(s, l, 63488+    0,                           29696+    0,  1024);
		API_polar::template xo < 1024>(s,    28672+    0, 28672+ 1024,              28672+    0,  1024);
		API_polar::template g  < 2048>(s, l, 57344+    0, 57344+ 2048, 28672+    0, 57344+ 4096,  2048);
		API_polar::template h  < 2048>(s, l, 61440+    0,                           30720+    0,  2048);
		API_polar::template xo < 2048>(s,    28672+    0, 28672+ 2048,              28672+    0,  2048);
		API_polar::template xo < 4096>(s,    24576+    0, 24576+ 4096,              24576+    0,  4096);
		API_polar::template xo < 8192>(s,    16384+    0, 16384+ 8192,              16384+    0,  8192);
		API_polar::template xo <16384>(s,        0+    0,     0+16384,                  0+    0, 16384);
	}
};
}
}
#endif
