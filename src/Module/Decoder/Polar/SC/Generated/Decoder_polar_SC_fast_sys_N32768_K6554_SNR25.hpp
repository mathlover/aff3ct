#ifndef DECODER_POLAR_SC_FAST_SYS_N32768_K6554_SNR25_HPP_
#define DECODER_POLAR_SC_FAST_SYS_N32768_K6554_SNR25_HPP_

#include <cassert>

#include "../Decoder_polar_SC_fast_sys.hpp"

namespace aff3ct
{
namespace module
{
static const char Frozen_bits_32768_6554_25[32768] = {
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};

template <typename B, typename R, class API_polar>
class Decoder_polar_SC_fast_sys_N32768_K6554_SNR25 : public Decoder_polar_SC_fast_sys<B, R, API_polar>
{
public:
	Decoder_polar_SC_fast_sys_N32768_K6554_SNR25(const int& K, const int& N, const mipp::vector<B>& frozen_bits, const int n_frames = 1)
	: Decoder_polar_SC_fast_sys<B, R, API_polar>(K, N, frozen_bits, n_frames)
	{
		assert(N == 32768);
		assert(K == 6554);
		
		auto i = 0;
		while (i < 32768 && Frozen_bits_32768_6554_25[i] == frozen_bits[i]) i++;
		assert(i == 32768);
	}

	virtual ~Decoder_polar_SC_fast_sys_N32768_K6554_SNR25()
	{
	}

	void decode()
	{
		auto &l = this->l;
		auto &s = this->s;

		API_polar::template f  <16384>(   l,     0+    0,     0+16384,                  0+32768, 16384);
		API_polar::template f  < 8192>(   l, 32768+    0, 32768+ 8192,              32768+16384,  8192);
		API_polar::template g0 < 4096>(   l, 49152+    0, 49152+ 4096,              49152+ 8192,  4096);
		API_polar::template g0 < 2048>(   l, 57344+    0, 57344+ 2048,              57344+ 4096,  2048);
		API_polar::template g0 < 1024>(   l, 61440+    0, 61440+ 1024,              61440+ 2048,  1024);
		API_polar::template g0 <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template g0 <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template rep<  128>(s, l, 65280+    0,                            7936+    0,   128);
		API_polar::template gr <  128>(s, l, 65024+    0, 65024+  128,  7936+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template rep<   64>(s, l, 65408+    0,                            8064+    0,    64);
		API_polar::template gr <   64>(s, l, 65280+    0, 65280+   64,  8064+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            8152+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  8152+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            8156+    0,     4);
		API_polar::template xo <    4>(s,     8152+    0,  8152+    4,               8152+    0,     4);
		API_polar::template xo0<    8>(s,     8144+    8,                            8144+    0,     8);
		API_polar::template xo0<   16>(s,     8128+   16,                            8128+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32,  8128+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                            8160+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8,  8160+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            8168+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  8168+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            8172+    0,     4);
		API_polar::template xo <    4>(s,     8168+    0,  8168+    4,               8168+    0,     4);
		API_polar::template xo <    8>(s,     8160+    0,  8160+    8,               8160+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16,  8160+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                            8176+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4,  8176+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                            8180+    0,     4);
		API_polar::template xo <    4>(s,     8176+    0,  8176+    4,               8176+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8,  8176+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                            8184+    0,     8);
		API_polar::template xo <    8>(s,     8176+    0,  8176+    8,               8176+    0,     8);
		API_polar::template xo <   16>(s,     8160+    0,  8160+   16,               8160+    0,    16);
		API_polar::template xo <   32>(s,     8128+    0,  8128+   32,               8128+    0,    32);
		API_polar::template xo <   64>(s,     8064+    0,  8064+   64,               8064+    0,    64);
		API_polar::template xo <  128>(s,     7936+    0,  7936+  128,               7936+    0,   128);
		API_polar::template xo0<  256>(s,     7680+  256,                            7680+    0,   256);
		API_polar::template xo0<  512>(s,     7168+  512,                            7168+    0,   512);
		API_polar::template xo0< 1024>(s,     6144+ 1024,                            6144+    0,  1024);
		API_polar::template xo0< 2048>(s,     4096+ 2048,                            4096+    0,  2048);
		API_polar::template xo0< 4096>(s,        0+ 4096,                               0+    0,  4096);
		API_polar::template g  < 8192>(s, l, 32768+    0, 32768+ 8192,     0+    0, 32768+16384,  8192);
		API_polar::template f  < 4096>(   l, 49152+    0, 49152+ 4096,              49152+ 8192,  4096);
		API_polar::template g0 < 2048>(   l, 57344+    0, 57344+ 2048,              57344+ 4096,  2048);
		API_polar::template g0 < 1024>(   l, 61440+    0, 61440+ 1024,              61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template rep<  512>(s, l, 64512+    0,                           11264+    0,   512);
		API_polar::template gr <  512>(s, l, 63488+    0, 63488+  512, 11264+    0, 63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template g0 <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template g0 <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template g0 <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           12028+    0,     4);
		API_polar::template xo0<    4>(s,    12024+    4,                           12024+    0,     4);
		API_polar::template xo0<    8>(s,    12016+    8,                           12016+    0,     8);
		API_polar::template xo0<   16>(s,    12000+   16,                           12000+    0,    16);
		API_polar::template xo0<   32>(s,    11968+   32,                           11968+    0,    32);
		API_polar::template xo0<   64>(s,    11904+   64,                           11904+    0,    64);
		API_polar::template xo0<  128>(s,    11776+  128,                           11776+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 11776+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template g0 <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template g0 <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           12128+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 12128+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           12144+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 12144+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           12152+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 12152+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           12156+    0,     4);
		API_polar::template xo <    4>(s,    12152+    0, 12152+    4,              12152+    0,     4);
		API_polar::template xo <    8>(s,    12144+    0, 12144+    8,              12144+    0,     8);
		API_polar::template xo <   16>(s,    12128+    0, 12128+   16,              12128+    0,    16);
		API_polar::template xo0<   32>(s,    12096+   32,                           12096+    0,    32);
		API_polar::template xo0<   64>(s,    12032+   64,                           12032+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 12032+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                           12160+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32, 12160+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           12192+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 12192+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           12208+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 12208+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           12216+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 12216+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           12220+    0,     4);
		API_polar::template xo <    4>(s,    12216+    0, 12216+    4,              12216+    0,     4);
		API_polar::template xo <    8>(s,    12208+    0, 12208+    8,              12208+    0,     8);
		API_polar::template xo <   16>(s,    12192+    0, 12192+   16,              12192+    0,    16);
		API_polar::template xo <   32>(s,    12160+    0, 12160+   32,              12160+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 12160+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           12224+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 12224+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           12240+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 12240+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           12248+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 12248+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           12252+    0,     4);
		API_polar::template xo <    4>(s,    12248+    0, 12248+    4,              12248+    0,     4);
		API_polar::template xo <    8>(s,    12240+    0, 12240+    8,              12240+    0,     8);
		API_polar::template xo <   16>(s,    12224+    0, 12224+   16,              12224+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 12224+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           12256+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 12256+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           12264+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 12264+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           12268+    0,     4);
		API_polar::template xo <    4>(s,    12264+    0, 12264+    4,              12264+    0,     4);
		API_polar::template xo <    8>(s,    12256+    0, 12256+    8,              12256+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 12256+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                           12274+    0,     2);
		API_polar::template xo0<    2>(s,    12272+    2,                           12272+    0,     2);
		API_polar::template g  <    4>(s, l, 65520+    0, 65520+    4, 12272+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           12276+    0,     4);
		API_polar::template xo <    4>(s,    12272+    0, 12272+    4,              12272+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 12272+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                           12280+    0,     8);
		API_polar::template xo <    8>(s,    12272+    0, 12272+    8,              12272+    0,     8);
		API_polar::template xo <   16>(s,    12256+    0, 12256+   16,              12256+    0,    16);
		API_polar::template xo <   32>(s,    12224+    0, 12224+   32,              12224+    0,    32);
		API_polar::template xo <   64>(s,    12160+    0, 12160+   64,              12160+    0,    64);
		API_polar::template xo <  128>(s,    12032+    0, 12032+  128,              12032+    0,   128);
		API_polar::template xo <  256>(s,    11776+    0, 11776+  256,              11776+    0,   256);
		API_polar::template xo <  512>(s,    11264+    0, 11264+  512,              11264+    0,   512);
		API_polar::template xo0< 1024>(s,    10240+ 1024,                           10240+    0,  1024);
		API_polar::template xo0< 2048>(s,     8192+ 2048,                            8192+    0,  2048);
		API_polar::template g  < 4096>(s, l, 49152+    0, 49152+ 4096,  8192+    0, 49152+ 8192,  4096);
		API_polar::template f  < 2048>(   l, 57344+    0, 57344+ 2048,              57344+ 4096,  2048);
		API_polar::template f  < 1024>(   l, 61440+    0, 61440+ 1024,              61440+ 2048,  1024);
		API_polar::template rep< 1024>(s, l, 63488+    0,                           12288+    0,  1024);
		API_polar::template gr < 1024>(s, l, 61440+    0, 61440+ 1024, 12288+    0, 61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template g0 <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template g0 <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template g0 <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template g0 <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           13808+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 13808+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           13816+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 13816+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           13820+    0,     4);
		API_polar::template xo <    4>(s,    13816+    0, 13816+    4,              13816+    0,     4);
		API_polar::template xo <    8>(s,    13808+    0, 13808+    8,              13808+    0,     8);
		API_polar::template xo0<   16>(s,    13792+   16,                           13792+    0,    16);
		API_polar::template xo0<   32>(s,    13760+   32,                           13760+    0,    32);
		API_polar::template xo0<   64>(s,    13696+   64,                           13696+    0,    64);
		API_polar::template xo0<  128>(s,    13568+  128,                           13568+    0,   128);
		API_polar::template xo0<  256>(s,    13312+  256,                           13312+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512, 13312+    0, 63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template g0 <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template rep<   64>(s, l, 65408+    0,                           13952+    0,    64);
		API_polar::template gr <   64>(s, l, 65280+    0, 65280+   64, 13952+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                           14016+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32, 14016+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           14048+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 14048+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           14064+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 14064+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           14072+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 14072+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           14076+    0,     4);
		API_polar::template xo <    4>(s,    14072+    0, 14072+    4,              14072+    0,     4);
		API_polar::template xo <    8>(s,    14064+    0, 14064+    8,              14064+    0,     8);
		API_polar::template xo <   16>(s,    14048+    0, 14048+   16,              14048+    0,    16);
		API_polar::template xo <   32>(s,    14016+    0, 14016+   32,              14016+    0,    32);
		API_polar::template xo <   64>(s,    13952+    0, 13952+   64,              13952+    0,    64);
		API_polar::template xo0<  128>(s,    13824+  128,                           13824+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 13824+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template rep<   64>(s, l, 65408+    0,                           14080+    0,    64);
		API_polar::template gr <   64>(s, l, 65280+    0, 65280+   64, 14080+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                           14144+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32, 14144+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           14176+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 14176+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           14196+    0,     4);
		API_polar::template xo0<    4>(s,    14192+    4,                           14192+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 14192+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           14200+    0,     8);
		API_polar::template xo <    8>(s,    14192+    0, 14192+    8,              14192+    0,     8);
		API_polar::template xo <   16>(s,    14176+    0, 14176+   16,              14176+    0,    16);
		API_polar::template xo <   32>(s,    14144+    0, 14144+   32,              14144+    0,    32);
		API_polar::template xo <   64>(s,    14080+    0, 14080+   64,              14080+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 14080+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           14232+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 14232+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           14236+    0,     4);
		API_polar::template xo <    4>(s,    14232+    0, 14232+    4,              14232+    0,     4);
		API_polar::template xo0<    8>(s,    14224+    8,                           14224+    0,     8);
		API_polar::template xo0<   16>(s,    14208+   16,                           14208+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 14208+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           14240+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 14240+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           14248+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 14248+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           14252+    0,     4);
		API_polar::template xo <    4>(s,    14248+    0, 14248+    4,              14248+    0,     4);
		API_polar::template xo <    8>(s,    14240+    0, 14240+    8,              14240+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 14240+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           14256+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 14256+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           14260+    0,     4);
		API_polar::template xo <    4>(s,    14256+    0, 14256+    4,              14256+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 14256+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           14264+    0,     8);
		API_polar::template xo <    8>(s,    14256+    0, 14256+    8,              14256+    0,     8);
		API_polar::template xo <   16>(s,    14240+    0, 14240+   16,              14240+    0,    16);
		API_polar::template xo <   32>(s,    14208+    0, 14208+   32,              14208+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 14208+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           14272+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 14272+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           14280+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 14280+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           14284+    0,     4);
		API_polar::template xo <    4>(s,    14280+    0, 14280+    4,              14280+    0,     4);
		API_polar::template xo <    8>(s,    14272+    0, 14272+    8,              14272+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 14272+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           14288+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 14288+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           14292+    0,     4);
		API_polar::template xo <    4>(s,    14288+    0, 14288+    4,              14288+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 14288+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           14296+    0,     8);
		API_polar::template xo <    8>(s,    14288+    0, 14288+    8,              14288+    0,     8);
		API_polar::template xo <   16>(s,    14272+    0, 14272+   16,              14272+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 14272+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           14304+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 14304+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           14308+    0,     4);
		API_polar::template xo <    4>(s,    14304+    0, 14304+    4,              14304+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 14304+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           14312+    0,     8);
		API_polar::template xo <    8>(s,    14304+    0, 14304+    8,              14304+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 14304+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           14320+    0,    16);
		API_polar::template xo <   16>(s,    14304+    0, 14304+   16,              14304+    0,    16);
		API_polar::template xo <   32>(s,    14272+    0, 14272+   32,              14272+    0,    32);
		API_polar::template xo <   64>(s,    14208+    0, 14208+   64,              14208+    0,    64);
		API_polar::template xo <  128>(s,    14080+    0, 14080+  128,              14080+    0,   128);
		API_polar::template xo <  256>(s,    13824+    0, 13824+  256,              13824+    0,   256);
		API_polar::template xo <  512>(s,    13312+    0, 13312+  512,              13312+    0,   512);
		API_polar::template xo < 1024>(s,    12288+    0, 12288+ 1024,              12288+    0,  1024);
		API_polar::template g  < 2048>(s, l, 57344+    0, 57344+ 2048, 12288+    0, 57344+ 4096,  2048);
		API_polar::template f  < 1024>(   l, 61440+    0, 61440+ 1024,              61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template g0 <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template g0 <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template rep<   64>(s, l, 65408+    0,                           14720+    0,    64);
		API_polar::template gr <   64>(s, l, 65280+    0, 65280+   64, 14720+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                           14784+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32, 14784+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           14816+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 14816+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           14832+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 14832+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           14840+    0,     8);
		API_polar::template xo <    8>(s,    14832+    0, 14832+    8,              14832+    0,     8);
		API_polar::template xo <   16>(s,    14816+    0, 14816+   16,              14816+    0,    16);
		API_polar::template xo <   32>(s,    14784+    0, 14784+   32,              14784+    0,    32);
		API_polar::template xo <   64>(s,    14720+    0, 14720+   64,              14720+    0,    64);
		API_polar::template xo0<  128>(s,    14592+  128,                           14592+    0,   128);
		API_polar::template xo0<  256>(s,    14336+  256,                           14336+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512, 14336+    0, 63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template rep<  128>(s, l, 65280+    0,                           14848+    0,   128);
		API_polar::template gr <  128>(s, l, 65024+    0, 65024+  128, 14848+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template rep<   64>(s, l, 65408+    0,                           14976+    0,    64);
		API_polar::template gr <   64>(s, l, 65280+    0, 65280+   64, 14976+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           15068+    0,     4);
		API_polar::template xo0<    4>(s,    15064+    4,                           15064+    0,     4);
		API_polar::template xo0<    8>(s,    15056+    8,                           15056+    0,     8);
		API_polar::template xo0<   16>(s,    15040+   16,                           15040+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 15040+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           15072+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 15072+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           15080+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 15080+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           15084+    0,     4);
		API_polar::template xo <    4>(s,    15080+    0, 15080+    4,              15080+    0,     4);
		API_polar::template xo <    8>(s,    15072+    0, 15072+    8,              15072+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 15072+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           15088+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 15088+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           15092+    0,     4);
		API_polar::template xo <    4>(s,    15088+    0, 15088+    4,              15088+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 15088+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           15096+    0,     8);
		API_polar::template xo <    8>(s,    15088+    0, 15088+    8,              15088+    0,     8);
		API_polar::template xo <   16>(s,    15072+    0, 15072+   16,              15072+    0,    16);
		API_polar::template xo <   32>(s,    15040+    0, 15040+   32,              15040+    0,    32);
		API_polar::template xo <   64>(s,    14976+    0, 14976+   64,              14976+    0,    64);
		API_polar::template xo <  128>(s,    14848+    0, 14848+  128,              14848+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 14848+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template g0 <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           15152+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 15152+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           15160+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 15160+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           15164+    0,     4);
		API_polar::template xo <    4>(s,    15160+    0, 15160+    4,              15160+    0,     4);
		API_polar::template xo <    8>(s,    15152+    0, 15152+    8,              15152+    0,     8);
		API_polar::template xo0<   16>(s,    15136+   16,                           15136+    0,    16);
		API_polar::template xo0<   32>(s,    15104+   32,                           15104+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 15104+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           15168+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 15168+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           15184+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 15184+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           15192+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 15192+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           15196+    0,     4);
		API_polar::template xo <    4>(s,    15192+    0, 15192+    4,              15192+    0,     4);
		API_polar::template xo <    8>(s,    15184+    0, 15184+    8,              15184+    0,     8);
		API_polar::template xo <   16>(s,    15168+    0, 15168+   16,              15168+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 15168+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           15200+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 15200+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           15208+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 15208+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           15212+    0,     4);
		API_polar::template xo <    4>(s,    15208+    0, 15208+    4,              15208+    0,     4);
		API_polar::template xo <    8>(s,    15200+    0, 15200+    8,              15200+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 15200+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           15216+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 15216+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           15220+    0,     4);
		API_polar::template xo <    4>(s,    15216+    0, 15216+    4,              15216+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 15216+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           15224+    0,     8);
		API_polar::template xo <    8>(s,    15216+    0, 15216+    8,              15216+    0,     8);
		API_polar::template xo <   16>(s,    15200+    0, 15200+   16,              15200+    0,    16);
		API_polar::template xo <   32>(s,    15168+    0, 15168+   32,              15168+    0,    32);
		API_polar::template xo <   64>(s,    15104+    0, 15104+   64,              15104+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 15104+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           15232+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 15232+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           15248+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 15248+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           15256+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 15256+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           15260+    0,     4);
		API_polar::template xo <    4>(s,    15256+    0, 15256+    4,              15256+    0,     4);
		API_polar::template xo <    8>(s,    15248+    0, 15248+    8,              15248+    0,     8);
		API_polar::template xo <   16>(s,    15232+    0, 15232+   16,              15232+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 15232+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           15264+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 15264+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           15272+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 15272+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           15276+    0,     4);
		API_polar::template xo <    4>(s,    15272+    0, 15272+    4,              15272+    0,     4);
		API_polar::template xo <    8>(s,    15264+    0, 15264+    8,              15264+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 15264+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           15280+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 15280+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           15284+    0,     4);
		API_polar::template xo <    4>(s,    15280+    0, 15280+    4,              15280+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 15280+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           15288+    0,     8);
		API_polar::template xo <    8>(s,    15280+    0, 15280+    8,              15280+    0,     8);
		API_polar::template xo <   16>(s,    15264+    0, 15264+   16,              15264+    0,    16);
		API_polar::template xo <   32>(s,    15232+    0, 15232+   32,              15232+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 15232+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           15296+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 15296+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           15304+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 15304+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           15308+    0,     4);
		API_polar::template xo <    4>(s,    15304+    0, 15304+    4,              15304+    0,     4);
		API_polar::template xo <    8>(s,    15296+    0, 15296+    8,              15296+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 15296+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           15312+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 15312+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           15316+    0,     4);
		API_polar::template xo <    4>(s,    15312+    0, 15312+    4,              15312+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 15312+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                           15320+    0,     8);
		API_polar::template xo <    8>(s,    15312+    0, 15312+    8,              15312+    0,     8);
		API_polar::template xo <   16>(s,    15296+    0, 15296+   16,              15296+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 15296+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           15328+    0,    32);
		API_polar::template xo <   32>(s,    15296+    0, 15296+   32,              15296+    0,    32);
		API_polar::template xo <   64>(s,    15232+    0, 15232+   64,              15232+    0,    64);
		API_polar::template xo <  128>(s,    15104+    0, 15104+  128,              15104+    0,   128);
		API_polar::template xo <  256>(s,    14848+    0, 14848+  256,              14848+    0,   256);
		API_polar::template xo <  512>(s,    14336+    0, 14336+  512,              14336+    0,   512);
		API_polar::template g  < 1024>(s, l, 61440+    0, 61440+ 1024, 14336+    0, 61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template g0 <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template g0 <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           15484+    0,     4);
		API_polar::template xo0<    4>(s,    15480+    4,                           15480+    0,     4);
		API_polar::template xo0<    8>(s,    15472+    8,                           15472+    0,     8);
		API_polar::template xo0<   16>(s,    15456+   16,                           15456+    0,    16);
		API_polar::template xo0<   32>(s,    15424+   32,                           15424+    0,    32);
		API_polar::template xo0<   64>(s,    15360+   64,                           15360+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 15360+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template g0 <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           15520+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 15520+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           15536+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 15536+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           15544+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 15544+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           15548+    0,     4);
		API_polar::template xo <    4>(s,    15544+    0, 15544+    4,              15544+    0,     4);
		API_polar::template xo <    8>(s,    15536+    0, 15536+    8,              15536+    0,     8);
		API_polar::template xo <   16>(s,    15520+    0, 15520+   16,              15520+    0,    16);
		API_polar::template xo0<   32>(s,    15488+   32,                           15488+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 15488+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           15552+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 15552+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           15568+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 15568+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           15576+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 15576+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           15580+    0,     4);
		API_polar::template xo <    4>(s,    15576+    0, 15576+    4,              15576+    0,     4);
		API_polar::template xo <    8>(s,    15568+    0, 15568+    8,              15568+    0,     8);
		API_polar::template xo <   16>(s,    15552+    0, 15552+   16,              15552+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 15552+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           15584+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 15584+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           15592+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 15592+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           15596+    0,     4);
		API_polar::template xo <    4>(s,    15592+    0, 15592+    4,              15592+    0,     4);
		API_polar::template xo <    8>(s,    15584+    0, 15584+    8,              15584+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 15584+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           15600+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 15600+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           15604+    0,     4);
		API_polar::template xo <    4>(s,    15600+    0, 15600+    4,              15600+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 15600+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           15608+    0,     8);
		API_polar::template xo <    8>(s,    15600+    0, 15600+    8,              15600+    0,     8);
		API_polar::template xo <   16>(s,    15584+    0, 15584+   16,              15584+    0,    16);
		API_polar::template xo <   32>(s,    15552+    0, 15552+   32,              15552+    0,    32);
		API_polar::template xo <   64>(s,    15488+    0, 15488+   64,              15488+    0,    64);
		API_polar::template xo <  128>(s,    15360+    0, 15360+  128,              15360+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 15360+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                           15616+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32, 15616+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           15648+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 15648+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           15664+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 15664+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           15672+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 15672+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           15676+    0,     4);
		API_polar::template xo <    4>(s,    15672+    0, 15672+    4,              15672+    0,     4);
		API_polar::template xo <    8>(s,    15664+    0, 15664+    8,              15664+    0,     8);
		API_polar::template xo <   16>(s,    15648+    0, 15648+   16,              15648+    0,    16);
		API_polar::template xo <   32>(s,    15616+    0, 15616+   32,              15616+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 15616+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           15680+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 15680+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           15696+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 15696+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           15704+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 15704+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           15708+    0,     4);
		API_polar::template xo <    4>(s,    15704+    0, 15704+    4,              15704+    0,     4);
		API_polar::template xo <    8>(s,    15696+    0, 15696+    8,              15696+    0,     8);
		API_polar::template xo <   16>(s,    15680+    0, 15680+   16,              15680+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 15680+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           15712+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 15712+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           15720+    0,     8);
		API_polar::template xo <    8>(s,    15712+    0, 15712+    8,              15712+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 15712+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           15728+    0,    16);
		API_polar::template xo <   16>(s,    15712+    0, 15712+   16,              15712+    0,    16);
		API_polar::template xo <   32>(s,    15680+    0, 15680+   32,              15680+    0,    32);
		API_polar::template xo <   64>(s,    15616+    0, 15616+   64,              15616+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 15616+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           15744+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 15744+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           15760+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 15760+    0, 65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           15764+    0,     4);
		API_polar::template xo <    4>(s,    15760+    0, 15760+    4,              15760+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 15760+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           15768+    0,     8);
		API_polar::template xo <    8>(s,    15760+    0, 15760+    8,              15760+    0,     8);
		API_polar::template xo <   16>(s,    15744+    0, 15744+   16,              15744+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 15744+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           15776+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 15776+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           15780+    0,     4);
		API_polar::template xo <    4>(s,    15776+    0, 15776+    4,              15776+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 15776+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           15784+    0,     8);
		API_polar::template xo <    8>(s,    15776+    0, 15776+    8,              15776+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 15776+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           15792+    0,    16);
		API_polar::template xo <   16>(s,    15776+    0, 15776+   16,              15776+    0,    16);
		API_polar::template xo <   32>(s,    15744+    0, 15744+   32,              15744+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 15744+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           15808+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 15808+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           15812+    0,     4);
		API_polar::template xo <    4>(s,    15808+    0, 15808+    4,              15808+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 15808+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           15816+    0,     8);
		API_polar::template xo <    8>(s,    15808+    0, 15808+    8,              15808+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 15808+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           15824+    0,    16);
		API_polar::template xo <   16>(s,    15808+    0, 15808+   16,              15808+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 15808+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           15840+    0,    32);
		API_polar::template xo <   32>(s,    15808+    0, 15808+   32,              15808+    0,    32);
		API_polar::template xo <   64>(s,    15744+    0, 15744+   64,              15744+    0,    64);
		API_polar::template xo <  128>(s,    15616+    0, 15616+  128,              15616+    0,   128);
		API_polar::template xo <  256>(s,    15360+    0, 15360+  256,              15360+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512, 15360+    0, 63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                           15872+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32, 15872+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           15904+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 15904+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           15920+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 15920+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           15928+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 15928+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           15932+    0,     4);
		API_polar::template xo <    4>(s,    15928+    0, 15928+    4,              15928+    0,     4);
		API_polar::template xo <    8>(s,    15920+    0, 15920+    8,              15920+    0,     8);
		API_polar::template xo <   16>(s,    15904+    0, 15904+   16,              15904+    0,    16);
		API_polar::template xo <   32>(s,    15872+    0, 15872+   32,              15872+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 15872+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                           15950+    0,     2);
		API_polar::template xo0<    2>(s,    15948+    2,                           15948+    0,     2);
		API_polar::template xo0<    4>(s,    15944+    4,                           15944+    0,     4);
		API_polar::template xo0<    8>(s,    15936+    8,                           15936+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 15936+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           15952+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 15952+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           15956+    0,     4);
		API_polar::template xo <    4>(s,    15952+    0, 15952+    4,              15952+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 15952+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           15960+    0,     8);
		API_polar::template xo <    8>(s,    15952+    0, 15952+    8,              15952+    0,     8);
		API_polar::template xo <   16>(s,    15936+    0, 15936+   16,              15936+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 15936+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           15968+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 15968+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           15972+    0,     4);
		API_polar::template xo <    4>(s,    15968+    0, 15968+    4,              15968+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 15968+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           15976+    0,     8);
		API_polar::template xo <    8>(s,    15968+    0, 15968+    8,              15968+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 15968+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           15984+    0,    16);
		API_polar::template xo <   16>(s,    15968+    0, 15968+   16,              15968+    0,    16);
		API_polar::template xo <   32>(s,    15936+    0, 15936+   32,              15936+    0,    32);
		API_polar::template xo <   64>(s,    15872+    0, 15872+   64,              15872+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 15872+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           16000+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 16000+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           16008+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 16008+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           16012+    0,     4);
		API_polar::template xo <    4>(s,    16008+    0, 16008+    4,              16008+    0,     4);
		API_polar::template xo <    8>(s,    16000+    0, 16000+    8,              16000+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 16000+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           16016+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 16016+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           16020+    0,     4);
		API_polar::template xo <    4>(s,    16016+    0, 16016+    4,              16016+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 16016+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           16024+    0,     8);
		API_polar::template xo <    8>(s,    16016+    0, 16016+    8,              16016+    0,     8);
		API_polar::template xo <   16>(s,    16000+    0, 16000+   16,              16000+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 16000+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           16032+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 16032+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           16036+    0,     4);
		API_polar::template xo <    4>(s,    16032+    0, 16032+    4,              16032+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 16032+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           16040+    0,     8);
		API_polar::template xo <    8>(s,    16032+    0, 16032+    8,              16032+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 16032+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           16048+    0,    16);
		API_polar::template xo <   16>(s,    16032+    0, 16032+   16,              16032+    0,    16);
		API_polar::template xo <   32>(s,    16000+    0, 16000+   32,              16000+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 16000+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           16064+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 16064+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           16068+    0,     4);
		API_polar::template xo <    4>(s,    16064+    0, 16064+    4,              16064+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 16064+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           16072+    0,     8);
		API_polar::template xo <    8>(s,    16064+    0, 16064+    8,              16064+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 16064+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           16080+    0,    16);
		API_polar::template xo <   16>(s,    16064+    0, 16064+   16,              16064+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 16064+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           16096+    0,    32);
		API_polar::template xo <   32>(s,    16064+    0, 16064+   32,              16064+    0,    32);
		API_polar::template xo <   64>(s,    16000+    0, 16000+   64,              16000+    0,    64);
		API_polar::template xo <  128>(s,    15872+    0, 15872+  128,              15872+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 15872+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           16128+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 16128+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           16136+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 16136+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           16140+    0,     4);
		API_polar::template xo <    4>(s,    16136+    0, 16136+    4,              16136+    0,     4);
		API_polar::template xo <    8>(s,    16128+    0, 16128+    8,              16128+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 16128+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           16144+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 16144+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           16148+    0,     4);
		API_polar::template xo <    4>(s,    16144+    0, 16144+    4,              16144+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 16144+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           16152+    0,     8);
		API_polar::template xo <    8>(s,    16144+    0, 16144+    8,              16144+    0,     8);
		API_polar::template xo <   16>(s,    16128+    0, 16128+   16,              16128+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 16128+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           16160+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 16160+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           16164+    0,     4);
		API_polar::template xo <    4>(s,    16160+    0, 16160+    4,              16160+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 16160+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           16168+    0,     8);
		API_polar::template xo <    8>(s,    16160+    0, 16160+    8,              16160+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 16160+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           16176+    0,    16);
		API_polar::template xo <   16>(s,    16160+    0, 16160+   16,              16160+    0,    16);
		API_polar::template xo <   32>(s,    16128+    0, 16128+   32,              16128+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 16128+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           16192+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 16192+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           16196+    0,     4);
		API_polar::template xo <    4>(s,    16192+    0, 16192+    4,              16192+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 16192+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           16200+    0,     8);
		API_polar::template xo <    8>(s,    16192+    0, 16192+    8,              16192+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 16192+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           16208+    0,    16);
		API_polar::template xo <   16>(s,    16192+    0, 16192+   16,              16192+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 16192+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           16224+    0,    32);
		API_polar::template xo <   32>(s,    16192+    0, 16192+   32,              16192+    0,    32);
		API_polar::template xo <   64>(s,    16128+    0, 16128+   64,              16128+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 16128+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           16256+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 16256+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           16260+    0,     4);
		API_polar::template xo <    4>(s,    16256+    0, 16256+    4,              16256+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 16256+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           16264+    0,     8);
		API_polar::template xo <    8>(s,    16256+    0, 16256+    8,              16256+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 16256+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           16272+    0,    16);
		API_polar::template xo <   16>(s,    16256+    0, 16256+   16,              16256+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 16256+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           16288+    0,    32);
		API_polar::template xo <   32>(s,    16256+    0, 16256+   32,              16256+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 16256+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           16320+    0,    64);
		API_polar::template xo <   64>(s,    16256+    0, 16256+   64,              16256+    0,    64);
		API_polar::template xo <  128>(s,    16128+    0, 16128+  128,              16128+    0,   128);
		API_polar::template xo <  256>(s,    15872+    0, 15872+  256,              15872+    0,   256);
		API_polar::template xo <  512>(s,    15360+    0, 15360+  512,              15360+    0,   512);
		API_polar::template xo < 1024>(s,    14336+    0, 14336+ 1024,              14336+    0,  1024);
		API_polar::template xo < 2048>(s,    12288+    0, 12288+ 2048,              12288+    0,  2048);
		API_polar::template xo < 4096>(s,     8192+    0,  8192+ 4096,               8192+    0,  4096);
		API_polar::template xo < 8192>(s,        0+    0,     0+ 8192,                  0+    0,  8192);
		API_polar::template g  <16384>(s, l,     0+    0,     0+16384,     0+    0,     0+32768, 16384);
		API_polar::template f  < 8192>(   l, 32768+    0, 32768+ 8192,              32768+16384,  8192);
		API_polar::template f  < 4096>(   l, 49152+    0, 49152+ 4096,              49152+ 8192,  4096);
		API_polar::template f  < 2048>(   l, 57344+    0, 57344+ 2048,              57344+ 4096,  2048);
		API_polar::template rep< 2048>(s, l, 61440+    0,                           16384+    0,  2048);
		API_polar::template gr < 2048>(s, l, 57344+    0, 57344+ 2048, 16384+    0, 57344+ 4096,  2048);
		API_polar::template f  < 1024>(   l, 61440+    0, 61440+ 1024,              61440+ 2048,  1024);
		API_polar::template g0 <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template g0 <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template g0 <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template g0 <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template g0 <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           19448+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 19448+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           19452+    0,     4);
		API_polar::template xo <    4>(s,    19448+    0, 19448+    4,              19448+    0,     4);
		API_polar::template xo0<    8>(s,    19440+    8,                           19440+    0,     8);
		API_polar::template xo0<   16>(s,    19424+   16,                           19424+    0,    16);
		API_polar::template xo0<   32>(s,    19392+   32,                           19392+    0,    32);
		API_polar::template xo0<   64>(s,    19328+   64,                           19328+    0,    64);
		API_polar::template xo0<  128>(s,    19200+  128,                           19200+    0,   128);
		API_polar::template xo0<  256>(s,    18944+  256,                           18944+    0,   256);
		API_polar::template xo0<  512>(s,    18432+  512,                           18432+    0,   512);
		API_polar::template g  < 1024>(s, l, 61440+    0, 61440+ 1024, 18432+    0, 61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template g0 <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template g0 <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template g0 <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                           19904+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32, 19904+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           19936+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 19936+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           19952+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 19952+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           19960+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 19960+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           19964+    0,     4);
		API_polar::template xo <    4>(s,    19960+    0, 19960+    4,              19960+    0,     4);
		API_polar::template xo <    8>(s,    19952+    0, 19952+    8,              19952+    0,     8);
		API_polar::template xo <   16>(s,    19936+    0, 19936+   16,              19936+    0,    16);
		API_polar::template xo <   32>(s,    19904+    0, 19904+   32,              19904+    0,    32);
		API_polar::template xo0<   64>(s,    19840+   64,                           19840+    0,    64);
		API_polar::template xo0<  128>(s,    19712+  128,                           19712+    0,   128);
		API_polar::template xo0<  256>(s,    19456+  256,                           19456+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512, 19456+    0, 63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template rep<  128>(s, l, 65280+    0,                           19968+    0,   128);
		API_polar::template gr <  128>(s, l, 65024+    0, 65024+  128, 19968+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template rep<   64>(s, l, 65408+    0,                           20096+    0,    64);
		API_polar::template gr <   64>(s, l, 65280+    0, 65280+   64, 20096+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                           20160+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32, 20160+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           20192+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 20192+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                           20214+    0,     2);
		API_polar::template xo0<    2>(s,    20212+    2,                           20212+    0,     2);
		API_polar::template xo0<    4>(s,    20208+    4,                           20208+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 20208+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           20216+    0,     8);
		API_polar::template xo <    8>(s,    20208+    0, 20208+    8,              20208+    0,     8);
		API_polar::template xo <   16>(s,    20192+    0, 20192+   16,              20192+    0,    16);
		API_polar::template xo <   32>(s,    20160+    0, 20160+   32,              20160+    0,    32);
		API_polar::template xo <   64>(s,    20096+    0, 20096+   64,              20096+    0,    64);
		API_polar::template xo <  128>(s,    19968+    0, 19968+  128,              19968+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 19968+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template rep<   64>(s, l, 65408+    0,                           20224+    0,    64);
		API_polar::template gr <   64>(s, l, 65280+    0, 65280+   64, 20224+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           20312+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 20312+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           20316+    0,     4);
		API_polar::template xo <    4>(s,    20312+    0, 20312+    4,              20312+    0,     4);
		API_polar::template xo0<    8>(s,    20304+    8,                           20304+    0,     8);
		API_polar::template xo0<   16>(s,    20288+   16,                           20288+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 20288+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           20320+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 20320+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           20328+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 20328+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           20332+    0,     4);
		API_polar::template xo <    4>(s,    20328+    0, 20328+    4,              20328+    0,     4);
		API_polar::template xo <    8>(s,    20320+    0, 20320+    8,              20320+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 20320+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           20336+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 20336+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           20340+    0,     4);
		API_polar::template xo <    4>(s,    20336+    0, 20336+    4,              20336+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 20336+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           20344+    0,     8);
		API_polar::template xo <    8>(s,    20336+    0, 20336+    8,              20336+    0,     8);
		API_polar::template xo <   16>(s,    20320+    0, 20320+   16,              20320+    0,    16);
		API_polar::template xo <   32>(s,    20288+    0, 20288+   32,              20288+    0,    32);
		API_polar::template xo <   64>(s,    20224+    0, 20224+   64,              20224+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 20224+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           20352+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 20352+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           20368+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 20368+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           20376+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 20376+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           20380+    0,     4);
		API_polar::template xo <    4>(s,    20376+    0, 20376+    4,              20376+    0,     4);
		API_polar::template xo <    8>(s,    20368+    0, 20368+    8,              20368+    0,     8);
		API_polar::template xo <   16>(s,    20352+    0, 20352+   16,              20352+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 20352+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           20384+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 20384+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           20392+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 20392+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           20396+    0,     4);
		API_polar::template xo <    4>(s,    20392+    0, 20392+    4,              20392+    0,     4);
		API_polar::template xo <    8>(s,    20384+    0, 20384+    8,              20384+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 20384+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           20400+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 20400+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           20404+    0,     4);
		API_polar::template xo <    4>(s,    20400+    0, 20400+    4,              20400+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 20400+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           20408+    0,     8);
		API_polar::template xo <    8>(s,    20400+    0, 20400+    8,              20400+    0,     8);
		API_polar::template xo <   16>(s,    20384+    0, 20384+   16,              20384+    0,    16);
		API_polar::template xo <   32>(s,    20352+    0, 20352+   32,              20352+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 20352+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           20416+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 20416+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           20424+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 20424+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           20428+    0,     4);
		API_polar::template xo <    4>(s,    20424+    0, 20424+    4,              20424+    0,     4);
		API_polar::template xo <    8>(s,    20416+    0, 20416+    8,              20416+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 20416+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           20432+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 20432+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           20436+    0,     4);
		API_polar::template xo <    4>(s,    20432+    0, 20432+    4,              20432+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 20432+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           20440+    0,     8);
		API_polar::template xo <    8>(s,    20432+    0, 20432+    8,              20432+    0,     8);
		API_polar::template xo <   16>(s,    20416+    0, 20416+   16,              20416+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 20416+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           20448+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 20448+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           20452+    0,     4);
		API_polar::template xo <    4>(s,    20448+    0, 20448+    4,              20448+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 20448+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           20456+    0,     8);
		API_polar::template xo <    8>(s,    20448+    0, 20448+    8,              20448+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 20448+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           20464+    0,    16);
		API_polar::template xo <   16>(s,    20448+    0, 20448+   16,              20448+    0,    16);
		API_polar::template xo <   32>(s,    20416+    0, 20416+   32,              20416+    0,    32);
		API_polar::template xo <   64>(s,    20352+    0, 20352+   64,              20352+    0,    64);
		API_polar::template xo <  128>(s,    20224+    0, 20224+  128,              20224+    0,   128);
		API_polar::template xo <  256>(s,    19968+    0, 19968+  256,              19968+    0,   256);
		API_polar::template xo <  512>(s,    19456+    0, 19456+  512,              19456+    0,   512);
		API_polar::template xo < 1024>(s,    18432+    0, 18432+ 1024,              18432+    0,  1024);
		API_polar::template xo < 2048>(s,    16384+    0, 16384+ 2048,              16384+    0,  2048);
		API_polar::template g  < 4096>(s, l, 49152+    0, 49152+ 4096, 16384+    0, 49152+ 8192,  4096);
		API_polar::template f  < 2048>(   l, 57344+    0, 57344+ 2048,              57344+ 4096,  2048);
		API_polar::template f  < 1024>(   l, 61440+    0, 61440+ 1024,              61440+ 2048,  1024);
		API_polar::template g0 <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template g0 <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template g0 <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template rep<   64>(s, l, 65408+    0,                           21376+    0,    64);
		API_polar::template gr <   64>(s, l, 65280+    0, 65280+   64, 21376+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                           21440+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32, 21440+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           21472+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 21472+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           21488+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 21488+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           21496+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 21496+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           21500+    0,     4);
		API_polar::template xo <    4>(s,    21496+    0, 21496+    4,              21496+    0,     4);
		API_polar::template xo <    8>(s,    21488+    0, 21488+    8,              21488+    0,     8);
		API_polar::template xo <   16>(s,    21472+    0, 21472+   16,              21472+    0,    16);
		API_polar::template xo <   32>(s,    21440+    0, 21440+   32,              21440+    0,    32);
		API_polar::template xo <   64>(s,    21376+    0, 21376+   64,              21376+    0,    64);
		API_polar::template xo0<  128>(s,    21248+  128,                           21248+    0,   128);
		API_polar::template xo0<  256>(s,    20992+  256,                           20992+    0,   256);
		API_polar::template xo0<  512>(s,    20480+  512,                           20480+    0,   512);
		API_polar::template g  < 1024>(s, l, 61440+    0, 61440+ 1024, 20480+    0, 61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template g0 <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template rep<  128>(s, l, 65280+    0,                           21760+    0,   128);
		API_polar::template gr <  128>(s, l, 65024+    0, 65024+  128, 21760+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template rep<   64>(s, l, 65408+    0,                           21888+    0,    64);
		API_polar::template gr <   64>(s, l, 65280+    0, 65280+   64, 21888+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           21980+    0,     4);
		API_polar::template xo0<    4>(s,    21976+    4,                           21976+    0,     4);
		API_polar::template xo0<    8>(s,    21968+    8,                           21968+    0,     8);
		API_polar::template xo0<   16>(s,    21952+   16,                           21952+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 21952+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           21984+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 21984+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           21992+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 21992+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           21996+    0,     4);
		API_polar::template xo <    4>(s,    21992+    0, 21992+    4,              21992+    0,     4);
		API_polar::template xo <    8>(s,    21984+    0, 21984+    8,              21984+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 21984+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           22000+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 22000+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           22004+    0,     4);
		API_polar::template xo <    4>(s,    22000+    0, 22000+    4,              22000+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 22000+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           22008+    0,     8);
		API_polar::template xo <    8>(s,    22000+    0, 22000+    8,              22000+    0,     8);
		API_polar::template xo <   16>(s,    21984+    0, 21984+   16,              21984+    0,    16);
		API_polar::template xo <   32>(s,    21952+    0, 21952+   32,              21952+    0,    32);
		API_polar::template xo <   64>(s,    21888+    0, 21888+   64,              21888+    0,    64);
		API_polar::template xo <  128>(s,    21760+    0, 21760+  128,              21760+    0,   128);
		API_polar::template xo0<  256>(s,    21504+  256,                           21504+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512, 21504+    0, 63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template rep<  128>(s, l, 65280+    0,                           22016+    0,   128);
		API_polar::template gr <  128>(s, l, 65024+    0, 65024+  128, 22016+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template g0 <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           22176+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 22176+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           22192+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 22192+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           22200+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 22200+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           22204+    0,     4);
		API_polar::template xo <    4>(s,    22200+    0, 22200+    4,              22200+    0,     4);
		API_polar::template xo <    8>(s,    22192+    0, 22192+    8,              22192+    0,     8);
		API_polar::template xo <   16>(s,    22176+    0, 22176+   16,              22176+    0,    16);
		API_polar::template xo0<   32>(s,    22144+   32,                           22144+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 22144+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           22208+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 22208+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           22224+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 22224+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           22232+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 22232+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           22236+    0,     4);
		API_polar::template xo <    4>(s,    22232+    0, 22232+    4,              22232+    0,     4);
		API_polar::template xo <    8>(s,    22224+    0, 22224+    8,              22224+    0,     8);
		API_polar::template xo <   16>(s,    22208+    0, 22208+   16,              22208+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 22208+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           22240+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 22240+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           22248+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 22248+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           22252+    0,     4);
		API_polar::template xo <    4>(s,    22248+    0, 22248+    4,              22248+    0,     4);
		API_polar::template xo <    8>(s,    22240+    0, 22240+    8,              22240+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 22240+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           22256+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 22256+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           22260+    0,     4);
		API_polar::template xo <    4>(s,    22256+    0, 22256+    4,              22256+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 22256+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           22264+    0,     8);
		API_polar::template xo <    8>(s,    22256+    0, 22256+    8,              22256+    0,     8);
		API_polar::template xo <   16>(s,    22240+    0, 22240+   16,              22240+    0,    16);
		API_polar::template xo <   32>(s,    22208+    0, 22208+   32,              22208+    0,    32);
		API_polar::template xo <   64>(s,    22144+    0, 22144+   64,              22144+    0,    64);
		API_polar::template xo <  128>(s,    22016+    0, 22016+  128,              22016+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 22016+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                           22272+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32, 22272+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           22304+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 22304+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           22320+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 22320+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           22328+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 22328+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           22332+    0,     4);
		API_polar::template xo <    4>(s,    22328+    0, 22328+    4,              22328+    0,     4);
		API_polar::template xo <    8>(s,    22320+    0, 22320+    8,              22320+    0,     8);
		API_polar::template xo <   16>(s,    22304+    0, 22304+   16,              22304+    0,    16);
		API_polar::template xo <   32>(s,    22272+    0, 22272+   32,              22272+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 22272+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           22336+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 22336+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           22352+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 22352+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           22360+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 22360+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           22364+    0,     4);
		API_polar::template xo <    4>(s,    22360+    0, 22360+    4,              22360+    0,     4);
		API_polar::template xo <    8>(s,    22352+    0, 22352+    8,              22352+    0,     8);
		API_polar::template xo <   16>(s,    22336+    0, 22336+   16,              22336+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 22336+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           22368+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 22368+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           22376+    0,     8);
		API_polar::template xo <    8>(s,    22368+    0, 22368+    8,              22368+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 22368+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           22384+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 22384+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           22388+    0,     4);
		API_polar::template xo <    4>(s,    22384+    0, 22384+    4,              22384+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 22384+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                           22392+    0,     8);
		API_polar::template xo <    8>(s,    22384+    0, 22384+    8,              22384+    0,     8);
		API_polar::template xo <   16>(s,    22368+    0, 22368+   16,              22368+    0,    16);
		API_polar::template xo <   32>(s,    22336+    0, 22336+   32,              22336+    0,    32);
		API_polar::template xo <   64>(s,    22272+    0, 22272+   64,              22272+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 22272+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           22400+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 22400+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           22416+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 22416+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                           22426+    0,     2);
		API_polar::template xo0<    2>(s,    22424+    2,                           22424+    0,     2);
		API_polar::template g  <    4>(s, l, 65520+    0, 65520+    4, 22424+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           22428+    0,     4);
		API_polar::template xo <    4>(s,    22424+    0, 22424+    4,              22424+    0,     4);
		API_polar::template xo <    8>(s,    22416+    0, 22416+    8,              22416+    0,     8);
		API_polar::template xo <   16>(s,    22400+    0, 22400+   16,              22400+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 22400+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           22432+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 22432+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           22436+    0,     4);
		API_polar::template xo <    4>(s,    22432+    0, 22432+    4,              22432+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 22432+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           22440+    0,     8);
		API_polar::template xo <    8>(s,    22432+    0, 22432+    8,              22432+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 22432+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           22448+    0,    16);
		API_polar::template xo <   16>(s,    22432+    0, 22432+   16,              22432+    0,    16);
		API_polar::template xo <   32>(s,    22400+    0, 22400+   32,              22400+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 22400+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           22464+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 22464+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           22468+    0,     4);
		API_polar::template xo <    4>(s,    22464+    0, 22464+    4,              22464+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 22464+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           22472+    0,     8);
		API_polar::template xo <    8>(s,    22464+    0, 22464+    8,              22464+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 22464+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           22480+    0,    16);
		API_polar::template xo <   16>(s,    22464+    0, 22464+   16,              22464+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 22464+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           22496+    0,    32);
		API_polar::template xo <   32>(s,    22464+    0, 22464+   32,              22464+    0,    32);
		API_polar::template xo <   64>(s,    22400+    0, 22400+   64,              22400+    0,    64);
		API_polar::template xo <  128>(s,    22272+    0, 22272+  128,              22272+    0,   128);
		API_polar::template xo <  256>(s,    22016+    0, 22016+  256,              22016+    0,   256);
		API_polar::template xo <  512>(s,    21504+    0, 21504+  512,              21504+    0,   512);
		API_polar::template xo < 1024>(s,    20480+    0, 20480+ 1024,              20480+    0,  1024);
		API_polar::template g  < 2048>(s, l, 57344+    0, 57344+ 2048, 20480+    0, 57344+ 4096,  2048);
		API_polar::template f  < 1024>(   l, 61440+    0, 61440+ 1024,              61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template rep<  256>(s, l, 65024+    0,                           22528+    0,   256);
		API_polar::template gr <  256>(s, l, 64512+    0, 64512+  256, 22528+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template g0 <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template g0 <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           22896+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 22896+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           22904+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 22904+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           22908+    0,     4);
		API_polar::template xo <    4>(s,    22904+    0, 22904+    4,              22904+    0,     4);
		API_polar::template xo <    8>(s,    22896+    0, 22896+    8,              22896+    0,     8);
		API_polar::template xo0<   16>(s,    22880+   16,                           22880+    0,    16);
		API_polar::template xo0<   32>(s,    22848+   32,                           22848+    0,    32);
		API_polar::template xo0<   64>(s,    22784+   64,                           22784+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 22784+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template g0 <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           22944+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 22944+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           22960+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 22960+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           22968+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 22968+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           22972+    0,     4);
		API_polar::template xo <    4>(s,    22968+    0, 22968+    4,              22968+    0,     4);
		API_polar::template xo <    8>(s,    22960+    0, 22960+    8,              22960+    0,     8);
		API_polar::template xo <   16>(s,    22944+    0, 22944+   16,              22944+    0,    16);
		API_polar::template xo0<   32>(s,    22912+   32,                           22912+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 22912+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           22976+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 22976+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           22992+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 22992+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           23000+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 23000+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           23004+    0,     4);
		API_polar::template xo <    4>(s,    23000+    0, 23000+    4,              23000+    0,     4);
		API_polar::template xo <    8>(s,    22992+    0, 22992+    8,              22992+    0,     8);
		API_polar::template xo <   16>(s,    22976+    0, 22976+   16,              22976+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 22976+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           23008+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 23008+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           23016+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 23016+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           23020+    0,     4);
		API_polar::template xo <    4>(s,    23016+    0, 23016+    4,              23016+    0,     4);
		API_polar::template xo <    8>(s,    23008+    0, 23008+    8,              23008+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 23008+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           23024+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 23024+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           23028+    0,     4);
		API_polar::template xo <    4>(s,    23024+    0, 23024+    4,              23024+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 23024+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           23032+    0,     8);
		API_polar::template xo <    8>(s,    23024+    0, 23024+    8,              23024+    0,     8);
		API_polar::template xo <   16>(s,    23008+    0, 23008+   16,              23008+    0,    16);
		API_polar::template xo <   32>(s,    22976+    0, 22976+   32,              22976+    0,    32);
		API_polar::template xo <   64>(s,    22912+    0, 22912+   64,              22912+    0,    64);
		API_polar::template xo <  128>(s,    22784+    0, 22784+  128,              22784+    0,   128);
		API_polar::template xo <  256>(s,    22528+    0, 22528+  256,              22528+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512, 22528+    0, 63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template g0 <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                           23104+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32, 23104+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           23136+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 23136+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           23152+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 23152+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           23160+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 23160+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           23164+    0,     4);
		API_polar::template xo <    4>(s,    23160+    0, 23160+    4,              23160+    0,     4);
		API_polar::template xo <    8>(s,    23152+    0, 23152+    8,              23152+    0,     8);
		API_polar::template xo <   16>(s,    23136+    0, 23136+   16,              23136+    0,    16);
		API_polar::template xo <   32>(s,    23104+    0, 23104+   32,              23104+    0,    32);
		API_polar::template xo0<   64>(s,    23040+   64,                           23040+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 23040+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                           23168+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32, 23168+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           23200+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 23200+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           23216+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 23216+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           23224+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 23224+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           23228+    0,     4);
		API_polar::template xo <    4>(s,    23224+    0, 23224+    4,              23224+    0,     4);
		API_polar::template xo <    8>(s,    23216+    0, 23216+    8,              23216+    0,     8);
		API_polar::template xo <   16>(s,    23200+    0, 23200+   16,              23200+    0,    16);
		API_polar::template xo <   32>(s,    23168+    0, 23168+   32,              23168+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 23168+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           23232+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 23232+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           23252+    0,     4);
		API_polar::template xo0<    4>(s,    23248+    4,                           23248+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 23248+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           23256+    0,     8);
		API_polar::template xo <    8>(s,    23248+    0, 23248+    8,              23248+    0,     8);
		API_polar::template xo <   16>(s,    23232+    0, 23232+   16,              23232+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 23232+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           23264+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 23264+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           23268+    0,     4);
		API_polar::template xo <    4>(s,    23264+    0, 23264+    4,              23264+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 23264+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           23272+    0,     8);
		API_polar::template xo <    8>(s,    23264+    0, 23264+    8,              23264+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 23264+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           23280+    0,    16);
		API_polar::template xo <   16>(s,    23264+    0, 23264+   16,              23264+    0,    16);
		API_polar::template xo <   32>(s,    23232+    0, 23232+   32,              23232+    0,    32);
		API_polar::template xo <   64>(s,    23168+    0, 23168+   64,              23168+    0,    64);
		API_polar::template xo <  128>(s,    23040+    0, 23040+  128,              23040+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 23040+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                           23296+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32, 23296+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           23340+    0,     4);
		API_polar::template xo0<    4>(s,    23336+    4,                           23336+    0,     4);
		API_polar::template xo0<    8>(s,    23328+    8,                           23328+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 23328+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           23344+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 23344+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           23348+    0,     4);
		API_polar::template xo <    4>(s,    23344+    0, 23344+    4,              23344+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 23344+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           23352+    0,     8);
		API_polar::template xo <    8>(s,    23344+    0, 23344+    8,              23344+    0,     8);
		API_polar::template xo <   16>(s,    23328+    0, 23328+   16,              23328+    0,    16);
		API_polar::template xo <   32>(s,    23296+    0, 23296+   32,              23296+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 23296+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           23360+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 23360+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           23368+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 23368+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           23372+    0,     4);
		API_polar::template xo <    4>(s,    23368+    0, 23368+    4,              23368+    0,     4);
		API_polar::template xo <    8>(s,    23360+    0, 23360+    8,              23360+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 23360+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           23376+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 23376+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           23380+    0,     4);
		API_polar::template xo <    4>(s,    23376+    0, 23376+    4,              23376+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 23376+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           23384+    0,     8);
		API_polar::template xo <    8>(s,    23376+    0, 23376+    8,              23376+    0,     8);
		API_polar::template xo <   16>(s,    23360+    0, 23360+   16,              23360+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 23360+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           23392+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 23392+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           23396+    0,     4);
		API_polar::template xo <    4>(s,    23392+    0, 23392+    4,              23392+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 23392+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           23400+    0,     8);
		API_polar::template xo <    8>(s,    23392+    0, 23392+    8,              23392+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 23392+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           23408+    0,    16);
		API_polar::template xo <   16>(s,    23392+    0, 23392+   16,              23392+    0,    16);
		API_polar::template xo <   32>(s,    23360+    0, 23360+   32,              23360+    0,    32);
		API_polar::template xo <   64>(s,    23296+    0, 23296+   64,              23296+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 23296+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           23424+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 23424+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           23432+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 23432+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           23436+    0,     4);
		API_polar::template xo <    4>(s,    23432+    0, 23432+    4,              23432+    0,     4);
		API_polar::template xo <    8>(s,    23424+    0, 23424+    8,              23424+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 23424+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           23440+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 23440+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           23444+    0,     4);
		API_polar::template xo <    4>(s,    23440+    0, 23440+    4,              23440+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 23440+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           23448+    0,     8);
		API_polar::template xo <    8>(s,    23440+    0, 23440+    8,              23440+    0,     8);
		API_polar::template xo <   16>(s,    23424+    0, 23424+   16,              23424+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 23424+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           23456+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 23456+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           23460+    0,     4);
		API_polar::template xo <    4>(s,    23456+    0, 23456+    4,              23456+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 23456+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           23464+    0,     8);
		API_polar::template xo <    8>(s,    23456+    0, 23456+    8,              23456+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 23456+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           23472+    0,    16);
		API_polar::template xo <   16>(s,    23456+    0, 23456+   16,              23456+    0,    16);
		API_polar::template xo <   32>(s,    23424+    0, 23424+   32,              23424+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 23424+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           23488+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 23488+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           23492+    0,     4);
		API_polar::template xo <    4>(s,    23488+    0, 23488+    4,              23488+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 23488+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           23496+    0,     8);
		API_polar::template xo <    8>(s,    23488+    0, 23488+    8,              23488+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 23488+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           23504+    0,    16);
		API_polar::template xo <   16>(s,    23488+    0, 23488+   16,              23488+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 23488+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           23520+    0,    32);
		API_polar::template xo <   32>(s,    23488+    0, 23488+   32,              23488+    0,    32);
		API_polar::template xo <   64>(s,    23424+    0, 23424+   64,              23424+    0,    64);
		API_polar::template xo <  128>(s,    23296+    0, 23296+  128,              23296+    0,   128);
		API_polar::template xo <  256>(s,    23040+    0, 23040+  256,              23040+    0,   256);
		API_polar::template xo <  512>(s,    22528+    0, 22528+  512,              22528+    0,   512);
		API_polar::template g  < 1024>(s, l, 61440+    0, 61440+ 1024, 22528+    0, 61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template rep<   64>(s, l, 65408+    0,                           23552+    0,    64);
		API_polar::template gr <   64>(s, l, 65280+    0, 65280+   64, 23552+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                           23616+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32, 23616+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           23648+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 23648+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           23664+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 23664+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           23668+    0,     4);
		API_polar::template xo <    4>(s,    23664+    0, 23664+    4,              23664+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 23664+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           23672+    0,     8);
		API_polar::template xo <    8>(s,    23664+    0, 23664+    8,              23664+    0,     8);
		API_polar::template xo <   16>(s,    23648+    0, 23648+   16,              23648+    0,    16);
		API_polar::template xo <   32>(s,    23616+    0, 23616+   32,              23616+    0,    32);
		API_polar::template xo <   64>(s,    23552+    0, 23552+   64,              23552+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 23552+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           23704+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 23704+    0, 65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                           23710+    0,     2);
		API_polar::template xo0<    2>(s,    23708+    2,                           23708+    0,     2);
		API_polar::template xo <    4>(s,    23704+    0, 23704+    4,              23704+    0,     4);
		API_polar::template xo0<    8>(s,    23696+    8,                           23696+    0,     8);
		API_polar::template xo0<   16>(s,    23680+   16,                           23680+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 23680+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           23712+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 23712+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           23720+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 23720+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           23724+    0,     4);
		API_polar::template xo <    4>(s,    23720+    0, 23720+    4,              23720+    0,     4);
		API_polar::template xo <    8>(s,    23712+    0, 23712+    8,              23712+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 23712+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           23728+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 23728+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           23732+    0,     4);
		API_polar::template xo <    4>(s,    23728+    0, 23728+    4,              23728+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 23728+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           23736+    0,     8);
		API_polar::template xo <    8>(s,    23728+    0, 23728+    8,              23728+    0,     8);
		API_polar::template xo <   16>(s,    23712+    0, 23712+   16,              23712+    0,    16);
		API_polar::template xo <   32>(s,    23680+    0, 23680+   32,              23680+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 23680+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           23744+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 23744+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           23752+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 23752+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           23756+    0,     4);
		API_polar::template xo <    4>(s,    23752+    0, 23752+    4,              23752+    0,     4);
		API_polar::template xo <    8>(s,    23744+    0, 23744+    8,              23744+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 23744+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           23760+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 23760+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           23764+    0,     4);
		API_polar::template xo <    4>(s,    23760+    0, 23760+    4,              23760+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 23760+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           23768+    0,     8);
		API_polar::template xo <    8>(s,    23760+    0, 23760+    8,              23760+    0,     8);
		API_polar::template xo <   16>(s,    23744+    0, 23744+   16,              23744+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 23744+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           23776+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 23776+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           23780+    0,     4);
		API_polar::template xo <    4>(s,    23776+    0, 23776+    4,              23776+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 23776+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           23784+    0,     8);
		API_polar::template xo <    8>(s,    23776+    0, 23776+    8,              23776+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 23776+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           23792+    0,    16);
		API_polar::template xo <   16>(s,    23776+    0, 23776+   16,              23776+    0,    16);
		API_polar::template xo <   32>(s,    23744+    0, 23744+   32,              23744+    0,    32);
		API_polar::template xo <   64>(s,    23680+    0, 23680+   64,              23680+    0,    64);
		API_polar::template xo <  128>(s,    23552+    0, 23552+  128,              23552+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 23552+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           23824+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 23824+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           23832+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 23832+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           23836+    0,     4);
		API_polar::template xo <    4>(s,    23832+    0, 23832+    4,              23832+    0,     4);
		API_polar::template xo <    8>(s,    23824+    0, 23824+    8,              23824+    0,     8);
		API_polar::template xo0<   16>(s,    23808+   16,                           23808+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 23808+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           23840+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 23840+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           23848+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 23848+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           23852+    0,     4);
		API_polar::template xo <    4>(s,    23848+    0, 23848+    4,              23848+    0,     4);
		API_polar::template xo <    8>(s,    23840+    0, 23840+    8,              23840+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 23840+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           23856+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 23856+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           23860+    0,     4);
		API_polar::template xo <    4>(s,    23856+    0, 23856+    4,              23856+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 23856+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           23864+    0,     8);
		API_polar::template xo <    8>(s,    23856+    0, 23856+    8,              23856+    0,     8);
		API_polar::template xo <   16>(s,    23840+    0, 23840+   16,              23840+    0,    16);
		API_polar::template xo <   32>(s,    23808+    0, 23808+   32,              23808+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 23808+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           23872+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 23872+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           23880+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 23880+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           23884+    0,     4);
		API_polar::template xo <    4>(s,    23880+    0, 23880+    4,              23880+    0,     4);
		API_polar::template xo <    8>(s,    23872+    0, 23872+    8,              23872+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 23872+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           23888+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 23888+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           23892+    0,     4);
		API_polar::template xo <    4>(s,    23888+    0, 23888+    4,              23888+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 23888+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           23896+    0,     8);
		API_polar::template xo <    8>(s,    23888+    0, 23888+    8,              23888+    0,     8);
		API_polar::template xo <   16>(s,    23872+    0, 23872+   16,              23872+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 23872+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           23904+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 23904+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           23908+    0,     4);
		API_polar::template xo <    4>(s,    23904+    0, 23904+    4,              23904+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 23904+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           23912+    0,     8);
		API_polar::template xo <    8>(s,    23904+    0, 23904+    8,              23904+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 23904+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           23920+    0,    16);
		API_polar::template xo <   16>(s,    23904+    0, 23904+   16,              23904+    0,    16);
		API_polar::template xo <   32>(s,    23872+    0, 23872+   32,              23872+    0,    32);
		API_polar::template xo <   64>(s,    23808+    0, 23808+   64,              23808+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 23808+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           23936+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 23936+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           23944+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 23944+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           23948+    0,     4);
		API_polar::template xo <    4>(s,    23944+    0, 23944+    4,              23944+    0,     4);
		API_polar::template xo <    8>(s,    23936+    0, 23936+    8,              23936+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 23936+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           23952+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 23952+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           23956+    0,     4);
		API_polar::template xo <    4>(s,    23952+    0, 23952+    4,              23952+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 23952+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           23960+    0,     8);
		API_polar::template xo <    8>(s,    23952+    0, 23952+    8,              23952+    0,     8);
		API_polar::template xo <   16>(s,    23936+    0, 23936+   16,              23936+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 23936+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           23968+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 23968+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           23972+    0,     4);
		API_polar::template xo <    4>(s,    23968+    0, 23968+    4,              23968+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 23968+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           23976+    0,     8);
		API_polar::template xo <    8>(s,    23968+    0, 23968+    8,              23968+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 23968+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           23984+    0,    16);
		API_polar::template xo <   16>(s,    23968+    0, 23968+   16,              23968+    0,    16);
		API_polar::template xo <   32>(s,    23936+    0, 23936+   32,              23936+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 23936+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           24000+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 24000+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           24004+    0,     4);
		API_polar::template xo <    4>(s,    24000+    0, 24000+    4,              24000+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 24000+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           24008+    0,     8);
		API_polar::template xo <    8>(s,    24000+    0, 24000+    8,              24000+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 24000+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           24016+    0,    16);
		API_polar::template xo <   16>(s,    24000+    0, 24000+   16,              24000+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 24000+    0, 65408+   64,    32);
		API_polar::template h  <   32>(s, l, 65472+    0,                           24032+    0,    32);
		API_polar::template xo <   32>(s,    24000+    0, 24000+   32,              24000+    0,    32);
		API_polar::template xo <   64>(s,    23936+    0, 23936+   64,              23936+    0,    64);
		API_polar::template xo <  128>(s,    23808+    0, 23808+  128,              23808+    0,   128);
		API_polar::template xo <  256>(s,    23552+    0, 23552+  256,              23552+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512, 23552+    0, 63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           24064+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 24064+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           24080+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 24080+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           24088+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 24088+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           24092+    0,     4);
		API_polar::template xo <    4>(s,    24088+    0, 24088+    4,              24088+    0,     4);
		API_polar::template xo <    8>(s,    24080+    0, 24080+    8,              24080+    0,     8);
		API_polar::template xo <   16>(s,    24064+    0, 24064+   16,              24064+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 24064+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           24096+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 24096+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           24104+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 24104+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           24108+    0,     4);
		API_polar::template xo <    4>(s,    24104+    0, 24104+    4,              24104+    0,     4);
		API_polar::template xo <    8>(s,    24096+    0, 24096+    8,              24096+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 24096+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           24112+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 24112+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           24116+    0,     4);
		API_polar::template xo <    4>(s,    24112+    0, 24112+    4,              24112+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 24112+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           24120+    0,     8);
		API_polar::template xo <    8>(s,    24112+    0, 24112+    8,              24112+    0,     8);
		API_polar::template xo <   16>(s,    24096+    0, 24096+   16,              24096+    0,    16);
		API_polar::template xo <   32>(s,    24064+    0, 24064+   32,              24064+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 24064+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           24128+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 24128+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           24136+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 24136+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           24140+    0,     4);
		API_polar::template xo <    4>(s,    24136+    0, 24136+    4,              24136+    0,     4);
		API_polar::template xo <    8>(s,    24128+    0, 24128+    8,              24128+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 24128+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           24144+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 24144+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           24148+    0,     4);
		API_polar::template xo <    4>(s,    24144+    0, 24144+    4,              24144+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 24144+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           24152+    0,     8);
		API_polar::template xo <    8>(s,    24144+    0, 24144+    8,              24144+    0,     8);
		API_polar::template xo <   16>(s,    24128+    0, 24128+   16,              24128+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 24128+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           24160+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 24160+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           24164+    0,     4);
		API_polar::template xo <    4>(s,    24160+    0, 24160+    4,              24160+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 24160+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           24168+    0,     8);
		API_polar::template xo <    8>(s,    24160+    0, 24160+    8,              24160+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 24160+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                           24176+    0,    16);
		API_polar::template xo <   16>(s,    24160+    0, 24160+   16,              24160+    0,    16);
		API_polar::template xo <   32>(s,    24128+    0, 24128+   32,              24128+    0,    32);
		API_polar::template xo <   64>(s,    24064+    0, 24064+   64,              24064+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 24064+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           24192+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 24192+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           24200+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 24200+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           24204+    0,     4);
		API_polar::template xo <    4>(s,    24200+    0, 24200+    4,              24200+    0,     4);
		API_polar::template xo <    8>(s,    24192+    0, 24192+    8,              24192+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 24192+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           24208+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 24208+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           24212+    0,     4);
		API_polar::template xo <    4>(s,    24208+    0, 24208+    4,              24208+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 24208+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                           24216+    0,     8);
		API_polar::template xo <    8>(s,    24208+    0, 24208+    8,              24208+    0,     8);
		API_polar::template xo <   16>(s,    24192+    0, 24192+   16,              24192+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 24192+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                           24226+    0,     2);
		API_polar::template xo0<    2>(s,    24224+    2,                           24224+    0,     2);
		API_polar::template g  <    4>(s, l, 65520+    0, 65520+    4, 24224+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           24228+    0,     4);
		API_polar::template xo <    4>(s,    24224+    0, 24224+    4,              24224+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 24224+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                           24232+    0,     8);
		API_polar::template xo <    8>(s,    24224+    0, 24224+    8,              24224+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 24224+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                           24240+    0,    16);
		API_polar::template xo <   16>(s,    24224+    0, 24224+   16,              24224+    0,    16);
		API_polar::template xo <   32>(s,    24192+    0, 24192+   32,              24192+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 24192+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           24256+    0,    64);
		API_polar::template xo <   64>(s,    24192+    0, 24192+   64,              24192+    0,    64);
		API_polar::template xo <  128>(s,    24064+    0, 24064+  128,              24064+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 24064+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           24320+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 24320+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                           24330+    0,     2);
		API_polar::template xo0<    2>(s,    24328+    2,                           24328+    0,     2);
		API_polar::template g  <    4>(s, l, 65520+    0, 65520+    4, 24328+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           24332+    0,     4);
		API_polar::template xo <    4>(s,    24328+    0, 24328+    4,              24328+    0,     4);
		API_polar::template xo <    8>(s,    24320+    0, 24320+    8,              24320+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 24320+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           24336+    0,    16);
		API_polar::template xo <   16>(s,    24320+    0, 24320+   16,              24320+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 24320+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           24352+    0,    32);
		API_polar::template xo <   32>(s,    24320+    0, 24320+   32,              24320+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 24320+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           24384+    0,    64);
		API_polar::template xo <   64>(s,    24320+    0, 24320+   64,              24320+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 24320+    0, 65024+  256,   128);
		API_polar::template spc<  128>(s, l, 65280+    0,                           24448+    0,   128);
		API_polar::template xo <  128>(s,    24320+    0, 24320+  128,              24320+    0,   128);
		API_polar::template xo <  256>(s,    24064+    0, 24064+  256,              24064+    0,   256);
		API_polar::template xo <  512>(s,    23552+    0, 23552+  512,              23552+    0,   512);
		API_polar::template xo < 1024>(s,    22528+    0, 22528+ 1024,              22528+    0,  1024);
		API_polar::template xo < 2048>(s,    20480+    0, 20480+ 2048,              20480+    0,  2048);
		API_polar::template xo < 4096>(s,    16384+    0, 16384+ 4096,              16384+    0,  4096);
		API_polar::template g  < 8192>(s, l, 32768+    0, 32768+ 8192, 16384+    0, 32768+16384,  8192);
		API_polar::template f  < 4096>(   l, 49152+    0, 49152+ 4096,              49152+ 8192,  4096);
		API_polar::template f  < 2048>(   l, 57344+    0, 57344+ 2048,              57344+ 4096,  2048);
		API_polar::template f  < 1024>(   l, 61440+    0, 61440+ 1024,              61440+ 2048,  1024);
		API_polar::template g0 <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template rep<  256>(s, l, 65024+    0,                           25088+    0,   256);
		API_polar::template gr <  256>(s, l, 64512+    0, 64512+  256, 25088+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template rep<  128>(s, l, 65280+    0,                           25344+    0,   128);
		API_polar::template gr <  128>(s, l, 65024+    0, 65024+  128, 25344+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template g0 <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           25520+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 25520+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           25528+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 25528+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           25532+    0,     4);
		API_polar::template xo <    4>(s,    25528+    0, 25528+    4,              25528+    0,     4);
		API_polar::template xo <    8>(s,    25520+    0, 25520+    8,              25520+    0,     8);
		API_polar::template xo0<   16>(s,    25504+   16,                           25504+    0,    16);
		API_polar::template xo0<   32>(s,    25472+   32,                           25472+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 25472+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           25536+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 25536+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           25552+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 25552+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           25560+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 25560+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           25564+    0,     4);
		API_polar::template xo <    4>(s,    25560+    0, 25560+    4,              25560+    0,     4);
		API_polar::template xo <    8>(s,    25552+    0, 25552+    8,              25552+    0,     8);
		API_polar::template xo <   16>(s,    25536+    0, 25536+   16,              25536+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 25536+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           25568+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 25568+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           25576+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 25576+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           25580+    0,     4);
		API_polar::template xo <    4>(s,    25576+    0, 25576+    4,              25576+    0,     4);
		API_polar::template xo <    8>(s,    25568+    0, 25568+    8,              25568+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 25568+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           25584+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 25584+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           25588+    0,     4);
		API_polar::template xo <    4>(s,    25584+    0, 25584+    4,              25584+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 25584+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           25592+    0,     8);
		API_polar::template xo <    8>(s,    25584+    0, 25584+    8,              25584+    0,     8);
		API_polar::template xo <   16>(s,    25568+    0, 25568+   16,              25568+    0,    16);
		API_polar::template xo <   32>(s,    25536+    0, 25536+   32,              25536+    0,    32);
		API_polar::template xo <   64>(s,    25472+    0, 25472+   64,              25472+    0,    64);
		API_polar::template xo <  128>(s,    25344+    0, 25344+  128,              25344+    0,   128);
		API_polar::template xo <  256>(s,    25088+    0, 25088+  256,              25088+    0,   256);
		API_polar::template xo0<  512>(s,    24576+  512,                           24576+    0,   512);
		API_polar::template g  < 1024>(s, l, 61440+    0, 61440+ 1024, 24576+    0, 61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template g0 <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template g0 <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template g0 <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           25848+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 25848+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           25852+    0,     4);
		API_polar::template xo <    4>(s,    25848+    0, 25848+    4,              25848+    0,     4);
		API_polar::template xo0<    8>(s,    25840+    8,                           25840+    0,     8);
		API_polar::template xo0<   16>(s,    25824+   16,                           25824+    0,    16);
		API_polar::template xo0<   32>(s,    25792+   32,                           25792+    0,    32);
		API_polar::template xo0<   64>(s,    25728+   64,                           25728+    0,    64);
		API_polar::template xo0<  128>(s,    25600+  128,                           25600+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 25600+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template g0 <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                           25920+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32, 25920+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           25952+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 25952+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           25968+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 25968+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           25976+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 25976+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           25980+    0,     4);
		API_polar::template xo <    4>(s,    25976+    0, 25976+    4,              25976+    0,     4);
		API_polar::template xo <    8>(s,    25968+    0, 25968+    8,              25968+    0,     8);
		API_polar::template xo <   16>(s,    25952+    0, 25952+   16,              25952+    0,    16);
		API_polar::template xo <   32>(s,    25920+    0, 25920+   32,              25920+    0,    32);
		API_polar::template xo0<   64>(s,    25856+   64,                           25856+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 25856+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                           25984+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32, 25984+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           26016+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 26016+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           26032+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 26032+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           26040+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 26040+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           26044+    0,     4);
		API_polar::template xo <    4>(s,    26040+    0, 26040+    4,              26040+    0,     4);
		API_polar::template xo <    8>(s,    26032+    0, 26032+    8,              26032+    0,     8);
		API_polar::template xo <   16>(s,    26016+    0, 26016+   16,              26016+    0,    16);
		API_polar::template xo <   32>(s,    25984+    0, 25984+   32,              25984+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 25984+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           26048+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 26048+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           26064+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 26064+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           26072+    0,     8);
		API_polar::template xo <    8>(s,    26064+    0, 26064+    8,              26064+    0,     8);
		API_polar::template xo <   16>(s,    26048+    0, 26048+   16,              26048+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 26048+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           26084+    0,     4);
		API_polar::template xo0<    4>(s,    26080+    4,                           26080+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 26080+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           26088+    0,     8);
		API_polar::template xo <    8>(s,    26080+    0, 26080+    8,              26080+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 26080+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           26096+    0,    16);
		API_polar::template xo <   16>(s,    26080+    0, 26080+   16,              26080+    0,    16);
		API_polar::template xo <   32>(s,    26048+    0, 26048+   32,              26048+    0,    32);
		API_polar::template xo <   64>(s,    25984+    0, 25984+   64,              25984+    0,    64);
		API_polar::template xo <  128>(s,    25856+    0, 25856+  128,              25856+    0,   128);
		API_polar::template xo <  256>(s,    25600+    0, 25600+  256,              25600+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512, 25600+    0, 63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template rep<   64>(s, l, 65408+    0,                           26112+    0,    64);
		API_polar::template gr <   64>(s, l, 65280+    0, 65280+   64, 26112+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                           26176+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32, 26176+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           26208+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 26208+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           26224+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 26224+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           26232+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 26232+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           26236+    0,     4);
		API_polar::template xo <    4>(s,    26232+    0, 26232+    4,              26232+    0,     4);
		API_polar::template xo <    8>(s,    26224+    0, 26224+    8,              26224+    0,     8);
		API_polar::template xo <   16>(s,    26208+    0, 26208+   16,              26208+    0,    16);
		API_polar::template xo <   32>(s,    26176+    0, 26176+   32,              26176+    0,    32);
		API_polar::template xo <   64>(s,    26112+    0, 26112+   64,              26112+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 26112+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                           26240+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32, 26240+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                           26286+    0,     2);
		API_polar::template xo0<    2>(s,    26284+    2,                           26284+    0,     2);
		API_polar::template xo0<    4>(s,    26280+    4,                           26280+    0,     4);
		API_polar::template xo0<    8>(s,    26272+    8,                           26272+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 26272+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           26288+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 26288+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           26292+    0,     4);
		API_polar::template xo <    4>(s,    26288+    0, 26288+    4,              26288+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 26288+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           26296+    0,     8);
		API_polar::template xo <    8>(s,    26288+    0, 26288+    8,              26288+    0,     8);
		API_polar::template xo <   16>(s,    26272+    0, 26272+   16,              26272+    0,    16);
		API_polar::template xo <   32>(s,    26240+    0, 26240+   32,              26240+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 26240+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           26304+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 26304+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           26312+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 26312+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           26316+    0,     4);
		API_polar::template xo <    4>(s,    26312+    0, 26312+    4,              26312+    0,     4);
		API_polar::template xo <    8>(s,    26304+    0, 26304+    8,              26304+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 26304+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           26320+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 26320+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           26324+    0,     4);
		API_polar::template xo <    4>(s,    26320+    0, 26320+    4,              26320+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 26320+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           26328+    0,     8);
		API_polar::template xo <    8>(s,    26320+    0, 26320+    8,              26320+    0,     8);
		API_polar::template xo <   16>(s,    26304+    0, 26304+   16,              26304+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 26304+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           26336+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 26336+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           26340+    0,     4);
		API_polar::template xo <    4>(s,    26336+    0, 26336+    4,              26336+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 26336+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           26344+    0,     8);
		API_polar::template xo <    8>(s,    26336+    0, 26336+    8,              26336+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 26336+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           26352+    0,    16);
		API_polar::template xo <   16>(s,    26336+    0, 26336+   16,              26336+    0,    16);
		API_polar::template xo <   32>(s,    26304+    0, 26304+   32,              26304+    0,    32);
		API_polar::template xo <   64>(s,    26240+    0, 26240+   64,              26240+    0,    64);
		API_polar::template xo <  128>(s,    26112+    0, 26112+  128,              26112+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 26112+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           26392+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 26392+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           26396+    0,     4);
		API_polar::template xo <    4>(s,    26392+    0, 26392+    4,              26392+    0,     4);
		API_polar::template xo0<    8>(s,    26384+    8,                           26384+    0,     8);
		API_polar::template xo0<   16>(s,    26368+   16,                           26368+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 26368+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           26400+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 26400+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           26408+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 26408+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           26412+    0,     4);
		API_polar::template xo <    4>(s,    26408+    0, 26408+    4,              26408+    0,     4);
		API_polar::template xo <    8>(s,    26400+    0, 26400+    8,              26400+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 26400+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           26416+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 26416+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           26420+    0,     4);
		API_polar::template xo <    4>(s,    26416+    0, 26416+    4,              26416+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 26416+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           26424+    0,     8);
		API_polar::template xo <    8>(s,    26416+    0, 26416+    8,              26416+    0,     8);
		API_polar::template xo <   16>(s,    26400+    0, 26400+   16,              26400+    0,    16);
		API_polar::template xo <   32>(s,    26368+    0, 26368+   32,              26368+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 26368+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           26432+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 26432+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           26440+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 26440+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           26444+    0,     4);
		API_polar::template xo <    4>(s,    26440+    0, 26440+    4,              26440+    0,     4);
		API_polar::template xo <    8>(s,    26432+    0, 26432+    8,              26432+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 26432+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           26448+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 26448+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           26452+    0,     4);
		API_polar::template xo <    4>(s,    26448+    0, 26448+    4,              26448+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 26448+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           26456+    0,     8);
		API_polar::template xo <    8>(s,    26448+    0, 26448+    8,              26448+    0,     8);
		API_polar::template xo <   16>(s,    26432+    0, 26432+   16,              26432+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 26432+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           26464+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 26464+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           26468+    0,     4);
		API_polar::template xo <    4>(s,    26464+    0, 26464+    4,              26464+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 26464+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           26472+    0,     8);
		API_polar::template xo <    8>(s,    26464+    0, 26464+    8,              26464+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 26464+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           26480+    0,    16);
		API_polar::template xo <   16>(s,    26464+    0, 26464+   16,              26464+    0,    16);
		API_polar::template xo <   32>(s,    26432+    0, 26432+   32,              26432+    0,    32);
		API_polar::template xo <   64>(s,    26368+    0, 26368+   64,              26368+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 26368+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           26496+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 26496+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           26504+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 26504+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           26508+    0,     4);
		API_polar::template xo <    4>(s,    26504+    0, 26504+    4,              26504+    0,     4);
		API_polar::template xo <    8>(s,    26496+    0, 26496+    8,              26496+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 26496+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           26512+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 26512+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           26516+    0,     4);
		API_polar::template xo <    4>(s,    26512+    0, 26512+    4,              26512+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 26512+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           26520+    0,     8);
		API_polar::template xo <    8>(s,    26512+    0, 26512+    8,              26512+    0,     8);
		API_polar::template xo <   16>(s,    26496+    0, 26496+   16,              26496+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 26496+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           26528+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 26528+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           26532+    0,     4);
		API_polar::template xo <    4>(s,    26528+    0, 26528+    4,              26528+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 26528+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           26536+    0,     8);
		API_polar::template xo <    8>(s,    26528+    0, 26528+    8,              26528+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 26528+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           26544+    0,    16);
		API_polar::template xo <   16>(s,    26528+    0, 26528+   16,              26528+    0,    16);
		API_polar::template xo <   32>(s,    26496+    0, 26496+   32,              26496+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 26496+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           26560+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 26560+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           26564+    0,     4);
		API_polar::template xo <    4>(s,    26560+    0, 26560+    4,              26560+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 26560+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           26568+    0,     8);
		API_polar::template xo <    8>(s,    26560+    0, 26560+    8,              26560+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 26560+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           26576+    0,    16);
		API_polar::template xo <   16>(s,    26560+    0, 26560+   16,              26560+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 26560+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           26592+    0,    32);
		API_polar::template xo <   32>(s,    26560+    0, 26560+   32,              26560+    0,    32);
		API_polar::template xo <   64>(s,    26496+    0, 26496+   64,              26496+    0,    64);
		API_polar::template xo <  128>(s,    26368+    0, 26368+  128,              26368+    0,   128);
		API_polar::template xo <  256>(s,    26112+    0, 26112+  256,              26112+    0,   256);
		API_polar::template xo <  512>(s,    25600+    0, 25600+  512,              25600+    0,   512);
		API_polar::template xo < 1024>(s,    24576+    0, 24576+ 1024,              24576+    0,  1024);
		API_polar::template g  < 2048>(s, l, 57344+    0, 57344+ 2048, 24576+    0, 57344+ 4096,  2048);
		API_polar::template f  < 1024>(   l, 61440+    0, 61440+ 1024,              61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template g0 <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template g0 <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                           26816+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32, 26816+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           26848+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 26848+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           26864+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 26864+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           26872+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 26872+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           26876+    0,     4);
		API_polar::template xo <    4>(s,    26872+    0, 26872+    4,              26872+    0,     4);
		API_polar::template xo <    8>(s,    26864+    0, 26864+    8,              26864+    0,     8);
		API_polar::template xo <   16>(s,    26848+    0, 26848+   16,              26848+    0,    16);
		API_polar::template xo <   32>(s,    26816+    0, 26816+   32,              26816+    0,    32);
		API_polar::template xo0<   64>(s,    26752+   64,                           26752+    0,    64);
		API_polar::template xo0<  128>(s,    26624+  128,                           26624+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 26624+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template rep<   64>(s, l, 65408+    0,                           26880+    0,    64);
		API_polar::template gr <   64>(s, l, 65280+    0, 65280+   64, 26880+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                           26944+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32, 26944+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           26976+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 26976+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           26992+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 26992+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           26996+    0,     4);
		API_polar::template xo <    4>(s,    26992+    0, 26992+    4,              26992+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 26992+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           27000+    0,     8);
		API_polar::template xo <    8>(s,    26992+    0, 26992+    8,              26992+    0,     8);
		API_polar::template xo <   16>(s,    26976+    0, 26976+   16,              26976+    0,    16);
		API_polar::template xo <   32>(s,    26944+    0, 26944+   32,              26944+    0,    32);
		API_polar::template xo <   64>(s,    26880+    0, 26880+   64,              26880+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 26880+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           27032+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 27032+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           27036+    0,     4);
		API_polar::template xo <    4>(s,    27032+    0, 27032+    4,              27032+    0,     4);
		API_polar::template xo0<    8>(s,    27024+    8,                           27024+    0,     8);
		API_polar::template xo0<   16>(s,    27008+   16,                           27008+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 27008+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           27040+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 27040+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           27048+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 27048+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           27052+    0,     4);
		API_polar::template xo <    4>(s,    27048+    0, 27048+    4,              27048+    0,     4);
		API_polar::template xo <    8>(s,    27040+    0, 27040+    8,              27040+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 27040+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           27056+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 27056+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           27060+    0,     4);
		API_polar::template xo <    4>(s,    27056+    0, 27056+    4,              27056+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 27056+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           27064+    0,     8);
		API_polar::template xo <    8>(s,    27056+    0, 27056+    8,              27056+    0,     8);
		API_polar::template xo <   16>(s,    27040+    0, 27040+   16,              27040+    0,    16);
		API_polar::template xo <   32>(s,    27008+    0, 27008+   32,              27008+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 27008+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           27072+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 27072+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           27080+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 27080+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           27084+    0,     4);
		API_polar::template xo <    4>(s,    27080+    0, 27080+    4,              27080+    0,     4);
		API_polar::template xo <    8>(s,    27072+    0, 27072+    8,              27072+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 27072+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           27088+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 27088+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           27092+    0,     4);
		API_polar::template xo <    4>(s,    27088+    0, 27088+    4,              27088+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 27088+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           27096+    0,     8);
		API_polar::template xo <    8>(s,    27088+    0, 27088+    8,              27088+    0,     8);
		API_polar::template xo <   16>(s,    27072+    0, 27072+   16,              27072+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 27072+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           27104+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 27104+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           27108+    0,     4);
		API_polar::template xo <    4>(s,    27104+    0, 27104+    4,              27104+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 27104+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           27112+    0,     8);
		API_polar::template xo <    8>(s,    27104+    0, 27104+    8,              27104+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 27104+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           27120+    0,    16);
		API_polar::template xo <   16>(s,    27104+    0, 27104+   16,              27104+    0,    16);
		API_polar::template xo <   32>(s,    27072+    0, 27072+   32,              27072+    0,    32);
		API_polar::template xo <   64>(s,    27008+    0, 27008+   64,              27008+    0,    64);
		API_polar::template xo <  128>(s,    26880+    0, 26880+  128,              26880+    0,   128);
		API_polar::template xo <  256>(s,    26624+    0, 26624+  256,              26624+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512, 26624+    0, 63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template rep<   64>(s, l, 65408+    0,                           27136+    0,    64);
		API_polar::template gr <   64>(s, l, 65280+    0, 65280+   64, 27136+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           27216+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 27216+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           27224+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 27224+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           27228+    0,     4);
		API_polar::template xo <    4>(s,    27224+    0, 27224+    4,              27224+    0,     4);
		API_polar::template xo <    8>(s,    27216+    0, 27216+    8,              27216+    0,     8);
		API_polar::template xo0<   16>(s,    27200+   16,                           27200+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 27200+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           27232+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 27232+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           27240+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 27240+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           27244+    0,     4);
		API_polar::template xo <    4>(s,    27240+    0, 27240+    4,              27240+    0,     4);
		API_polar::template xo <    8>(s,    27232+    0, 27232+    8,              27232+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 27232+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           27248+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 27248+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           27252+    0,     4);
		API_polar::template xo <    4>(s,    27248+    0, 27248+    4,              27248+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 27248+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           27256+    0,     8);
		API_polar::template xo <    8>(s,    27248+    0, 27248+    8,              27248+    0,     8);
		API_polar::template xo <   16>(s,    27232+    0, 27232+   16,              27232+    0,    16);
		API_polar::template xo <   32>(s,    27200+    0, 27200+   32,              27200+    0,    32);
		API_polar::template xo <   64>(s,    27136+    0, 27136+   64,              27136+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 27136+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           27264+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 27264+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           27280+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 27280+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           27288+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 27288+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           27292+    0,     4);
		API_polar::template xo <    4>(s,    27288+    0, 27288+    4,              27288+    0,     4);
		API_polar::template xo <    8>(s,    27280+    0, 27280+    8,              27280+    0,     8);
		API_polar::template xo <   16>(s,    27264+    0, 27264+   16,              27264+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 27264+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           27296+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 27296+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           27304+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 27304+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           27308+    0,     4);
		API_polar::template xo <    4>(s,    27304+    0, 27304+    4,              27304+    0,     4);
		API_polar::template xo <    8>(s,    27296+    0, 27296+    8,              27296+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 27296+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           27312+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 27312+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           27316+    0,     4);
		API_polar::template xo <    4>(s,    27312+    0, 27312+    4,              27312+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 27312+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           27320+    0,     8);
		API_polar::template xo <    8>(s,    27312+    0, 27312+    8,              27312+    0,     8);
		API_polar::template xo <   16>(s,    27296+    0, 27296+   16,              27296+    0,    16);
		API_polar::template xo <   32>(s,    27264+    0, 27264+   32,              27264+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 27264+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           27328+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 27328+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           27336+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 27336+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           27340+    0,     4);
		API_polar::template xo <    4>(s,    27336+    0, 27336+    4,              27336+    0,     4);
		API_polar::template xo <    8>(s,    27328+    0, 27328+    8,              27328+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 27328+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           27344+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 27344+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           27348+    0,     4);
		API_polar::template xo <    4>(s,    27344+    0, 27344+    4,              27344+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 27344+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           27352+    0,     8);
		API_polar::template xo <    8>(s,    27344+    0, 27344+    8,              27344+    0,     8);
		API_polar::template xo <   16>(s,    27328+    0, 27328+   16,              27328+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 27328+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           27360+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 27360+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           27364+    0,     4);
		API_polar::template xo <    4>(s,    27360+    0, 27360+    4,              27360+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 27360+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           27368+    0,     8);
		API_polar::template xo <    8>(s,    27360+    0, 27360+    8,              27360+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 27360+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           27376+    0,    16);
		API_polar::template xo <   16>(s,    27360+    0, 27360+   16,              27360+    0,    16);
		API_polar::template xo <   32>(s,    27328+    0, 27328+   32,              27328+    0,    32);
		API_polar::template xo <   64>(s,    27264+    0, 27264+   64,              27264+    0,    64);
		API_polar::template xo <  128>(s,    27136+    0, 27136+  128,              27136+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 27136+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           27392+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 27392+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           27408+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 27408+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           27416+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 27416+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           27420+    0,     4);
		API_polar::template xo <    4>(s,    27416+    0, 27416+    4,              27416+    0,     4);
		API_polar::template xo <    8>(s,    27408+    0, 27408+    8,              27408+    0,     8);
		API_polar::template xo <   16>(s,    27392+    0, 27392+   16,              27392+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 27392+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           27424+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 27424+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           27432+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 27432+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           27436+    0,     4);
		API_polar::template xo <    4>(s,    27432+    0, 27432+    4,              27432+    0,     4);
		API_polar::template xo <    8>(s,    27424+    0, 27424+    8,              27424+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 27424+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           27440+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 27440+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           27444+    0,     4);
		API_polar::template xo <    4>(s,    27440+    0, 27440+    4,              27440+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 27440+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           27448+    0,     8);
		API_polar::template xo <    8>(s,    27440+    0, 27440+    8,              27440+    0,     8);
		API_polar::template xo <   16>(s,    27424+    0, 27424+   16,              27424+    0,    16);
		API_polar::template xo <   32>(s,    27392+    0, 27392+   32,              27392+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 27392+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           27456+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 27456+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           27464+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 27464+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           27468+    0,     4);
		API_polar::template xo <    4>(s,    27464+    0, 27464+    4,              27464+    0,     4);
		API_polar::template xo <    8>(s,    27456+    0, 27456+    8,              27456+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 27456+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                           27474+    0,     2);
		API_polar::template xo0<    2>(s,    27472+    2,                           27472+    0,     2);
		API_polar::template g  <    4>(s, l, 65520+    0, 65520+    4, 27472+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           27476+    0,     4);
		API_polar::template xo <    4>(s,    27472+    0, 27472+    4,              27472+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 27472+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                           27480+    0,     8);
		API_polar::template xo <    8>(s,    27472+    0, 27472+    8,              27472+    0,     8);
		API_polar::template xo <   16>(s,    27456+    0, 27456+   16,              27456+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 27456+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           27488+    0,    32);
		API_polar::template xo <   32>(s,    27456+    0, 27456+   32,              27456+    0,    32);
		API_polar::template xo <   64>(s,    27392+    0, 27392+   64,              27392+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 27392+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           27520+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 27520+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           27528+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 27528+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           27532+    0,     4);
		API_polar::template xo <    4>(s,    27528+    0, 27528+    4,              27528+    0,     4);
		API_polar::template xo <    8>(s,    27520+    0, 27520+    8,              27520+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 27520+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           27536+    0,    16);
		API_polar::template xo <   16>(s,    27520+    0, 27520+   16,              27520+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 27520+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           27552+    0,    32);
		API_polar::template xo <   32>(s,    27520+    0, 27520+   32,              27520+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 27520+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           27584+    0,    64);
		API_polar::template xo <   64>(s,    27520+    0, 27520+   64,              27520+    0,    64);
		API_polar::template xo <  128>(s,    27392+    0, 27392+  128,              27392+    0,   128);
		API_polar::template xo <  256>(s,    27136+    0, 27136+  256,              27136+    0,   256);
		API_polar::template xo <  512>(s,    26624+    0, 26624+  512,              26624+    0,   512);
		API_polar::template g  < 1024>(s, l, 61440+    0, 61440+ 1024, 26624+    0, 61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template g0 <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           27680+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 27680+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           27696+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 27696+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           27704+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 27704+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           27708+    0,     4);
		API_polar::template xo <    4>(s,    27704+    0, 27704+    4,              27704+    0,     4);
		API_polar::template xo <    8>(s,    27696+    0, 27696+    8,              27696+    0,     8);
		API_polar::template xo <   16>(s,    27680+    0, 27680+   16,              27680+    0,    16);
		API_polar::template xo0<   32>(s,    27648+   32,                           27648+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 27648+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           27712+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 27712+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           27728+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 27728+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           27736+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 27736+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           27740+    0,     4);
		API_polar::template xo <    4>(s,    27736+    0, 27736+    4,              27736+    0,     4);
		API_polar::template xo <    8>(s,    27728+    0, 27728+    8,              27728+    0,     8);
		API_polar::template xo <   16>(s,    27712+    0, 27712+   16,              27712+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 27712+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           27744+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 27744+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           27752+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 27752+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           27756+    0,     4);
		API_polar::template xo <    4>(s,    27752+    0, 27752+    4,              27752+    0,     4);
		API_polar::template xo <    8>(s,    27744+    0, 27744+    8,              27744+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 27744+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           27760+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 27760+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           27764+    0,     4);
		API_polar::template xo <    4>(s,    27760+    0, 27760+    4,              27760+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 27760+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           27768+    0,     8);
		API_polar::template xo <    8>(s,    27760+    0, 27760+    8,              27760+    0,     8);
		API_polar::template xo <   16>(s,    27744+    0, 27744+   16,              27744+    0,    16);
		API_polar::template xo <   32>(s,    27712+    0, 27712+   32,              27712+    0,    32);
		API_polar::template xo <   64>(s,    27648+    0, 27648+   64,              27648+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 27648+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           27776+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 27776+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           27792+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 27792+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           27800+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 27800+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           27804+    0,     4);
		API_polar::template xo <    4>(s,    27800+    0, 27800+    4,              27800+    0,     4);
		API_polar::template xo <    8>(s,    27792+    0, 27792+    8,              27792+    0,     8);
		API_polar::template xo <   16>(s,    27776+    0, 27776+   16,              27776+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 27776+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           27808+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 27808+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           27816+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 27816+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           27820+    0,     4);
		API_polar::template xo <    4>(s,    27816+    0, 27816+    4,              27816+    0,     4);
		API_polar::template xo <    8>(s,    27808+    0, 27808+    8,              27808+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 27808+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           27824+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 27824+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           27828+    0,     4);
		API_polar::template xo <    4>(s,    27824+    0, 27824+    4,              27824+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 27824+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           27832+    0,     8);
		API_polar::template xo <    8>(s,    27824+    0, 27824+    8,              27824+    0,     8);
		API_polar::template xo <   16>(s,    27808+    0, 27808+   16,              27808+    0,    16);
		API_polar::template xo <   32>(s,    27776+    0, 27776+   32,              27776+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 27776+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           27840+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 27840+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           27848+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 27848+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           27852+    0,     4);
		API_polar::template xo <    4>(s,    27848+    0, 27848+    4,              27848+    0,     4);
		API_polar::template xo <    8>(s,    27840+    0, 27840+    8,              27840+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 27840+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           27856+    0,    16);
		API_polar::template xo <   16>(s,    27840+    0, 27840+   16,              27840+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 27840+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           27872+    0,    32);
		API_polar::template xo <   32>(s,    27840+    0, 27840+   32,              27840+    0,    32);
		API_polar::template xo <   64>(s,    27776+    0, 27776+   64,              27776+    0,    64);
		API_polar::template xo <  128>(s,    27648+    0, 27648+  128,              27648+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 27648+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           27904+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 27904+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           27920+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 27920+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           27928+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 27928+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           27932+    0,     4);
		API_polar::template xo <    4>(s,    27928+    0, 27928+    4,              27928+    0,     4);
		API_polar::template xo <    8>(s,    27920+    0, 27920+    8,              27920+    0,     8);
		API_polar::template xo <   16>(s,    27904+    0, 27904+   16,              27904+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 27904+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           27936+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 27936+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           27944+    0,     8);
		API_polar::template xo <    8>(s,    27936+    0, 27936+    8,              27936+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 27936+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           27952+    0,    16);
		API_polar::template xo <   16>(s,    27936+    0, 27936+   16,              27936+    0,    16);
		API_polar::template xo <   32>(s,    27904+    0, 27904+   32,              27904+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 27904+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           27968+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 27968+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           27972+    0,     4);
		API_polar::template xo <    4>(s,    27968+    0, 27968+    4,              27968+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 27968+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           27976+    0,     8);
		API_polar::template xo <    8>(s,    27968+    0, 27968+    8,              27968+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 27968+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           27984+    0,    16);
		API_polar::template xo <   16>(s,    27968+    0, 27968+   16,              27968+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 27968+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           28000+    0,    32);
		API_polar::template xo <   32>(s,    27968+    0, 27968+   32,              27968+    0,    32);
		API_polar::template xo <   64>(s,    27904+    0, 27904+   64,              27904+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 27904+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           28032+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 28032+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           28036+    0,     4);
		API_polar::template xo <    4>(s,    28032+    0, 28032+    4,              28032+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 28032+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           28040+    0,     8);
		API_polar::template xo <    8>(s,    28032+    0, 28032+    8,              28032+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 28032+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           28048+    0,    16);
		API_polar::template xo <   16>(s,    28032+    0, 28032+   16,              28032+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 28032+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           28064+    0,    32);
		API_polar::template xo <   32>(s,    28032+    0, 28032+   32,              28032+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 28032+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           28096+    0,    64);
		API_polar::template xo <   64>(s,    28032+    0, 28032+   64,              28032+    0,    64);
		API_polar::template xo <  128>(s,    27904+    0, 27904+  128,              27904+    0,   128);
		API_polar::template xo <  256>(s,    27648+    0, 27648+  256,              27648+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512, 27648+    0, 63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           28160+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 28160+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           28176+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 28176+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           28180+    0,     4);
		API_polar::template xo <    4>(s,    28176+    0, 28176+    4,              28176+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 28176+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           28184+    0,     8);
		API_polar::template xo <    8>(s,    28176+    0, 28176+    8,              28176+    0,     8);
		API_polar::template xo <   16>(s,    28160+    0, 28160+   16,              28160+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 28160+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           28192+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 28192+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           28196+    0,     4);
		API_polar::template xo <    4>(s,    28192+    0, 28192+    4,              28192+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 28192+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           28200+    0,     8);
		API_polar::template xo <    8>(s,    28192+    0, 28192+    8,              28192+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 28192+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           28208+    0,    16);
		API_polar::template xo <   16>(s,    28192+    0, 28192+   16,              28192+    0,    16);
		API_polar::template xo <   32>(s,    28160+    0, 28160+   32,              28160+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 28160+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           28224+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 28224+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           28228+    0,     4);
		API_polar::template xo <    4>(s,    28224+    0, 28224+    4,              28224+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 28224+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           28232+    0,     8);
		API_polar::template xo <    8>(s,    28224+    0, 28224+    8,              28224+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 28224+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           28240+    0,    16);
		API_polar::template xo <   16>(s,    28224+    0, 28224+   16,              28224+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 28224+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           28256+    0,    32);
		API_polar::template xo <   32>(s,    28224+    0, 28224+   32,              28224+    0,    32);
		API_polar::template xo <   64>(s,    28160+    0, 28160+   64,              28160+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 28160+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           28288+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 28288+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           28292+    0,     4);
		API_polar::template xo <    4>(s,    28288+    0, 28288+    4,              28288+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 28288+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           28296+    0,     8);
		API_polar::template xo <    8>(s,    28288+    0, 28288+    8,              28288+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 28288+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           28304+    0,    16);
		API_polar::template xo <   16>(s,    28288+    0, 28288+   16,              28288+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 28288+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           28320+    0,    32);
		API_polar::template xo <   32>(s,    28288+    0, 28288+   32,              28288+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 28288+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           28352+    0,    64);
		API_polar::template xo <   64>(s,    28288+    0, 28288+   64,              28288+    0,    64);
		API_polar::template xo <  128>(s,    28160+    0, 28160+  128,              28160+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 28160+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           28416+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 28416+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           28420+    0,     4);
		API_polar::template xo <    4>(s,    28416+    0, 28416+    4,              28416+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 28416+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           28424+    0,     8);
		API_polar::template xo <    8>(s,    28416+    0, 28416+    8,              28416+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 28416+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           28432+    0,    16);
		API_polar::template xo <   16>(s,    28416+    0, 28416+   16,              28416+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 28416+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           28448+    0,    32);
		API_polar::template xo <   32>(s,    28416+    0, 28416+   32,              28416+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 28416+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           28480+    0,    64);
		API_polar::template xo <   64>(s,    28416+    0, 28416+   64,              28416+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 28416+    0, 65024+  256,   128);
		API_polar::template spc<  128>(s, l, 65280+    0,                           28544+    0,   128);
		API_polar::template xo <  128>(s,    28416+    0, 28416+  128,              28416+    0,   128);
		API_polar::template xo <  256>(s,    28160+    0, 28160+  256,              28160+    0,   256);
		API_polar::template xo <  512>(s,    27648+    0, 27648+  512,              27648+    0,   512);
		API_polar::template xo < 1024>(s,    26624+    0, 26624+ 1024,              26624+    0,  1024);
		API_polar::template xo < 2048>(s,    24576+    0, 24576+ 2048,              24576+    0,  2048);
		API_polar::template g  < 4096>(s, l, 49152+    0, 49152+ 4096, 24576+    0, 49152+ 8192,  4096);
		API_polar::template f  < 2048>(   l, 57344+    0, 57344+ 2048,              57344+ 4096,  2048);
		API_polar::template f  < 1024>(   l, 61440+    0, 61440+ 1024,              61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template rep<  128>(s, l, 65280+    0,                           28672+    0,   128);
		API_polar::template gr <  128>(s, l, 65024+    0, 65024+  128, 28672+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template rep<   64>(s, l, 65408+    0,                           28800+    0,    64);
		API_polar::template gr <   64>(s, l, 65280+    0, 65280+   64, 28800+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           28888+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 28888+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           28892+    0,     4);
		API_polar::template xo <    4>(s,    28888+    0, 28888+    4,              28888+    0,     4);
		API_polar::template xo0<    8>(s,    28880+    8,                           28880+    0,     8);
		API_polar::template xo0<   16>(s,    28864+   16,                           28864+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 28864+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           28896+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 28896+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           28904+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 28904+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           28908+    0,     4);
		API_polar::template xo <    4>(s,    28904+    0, 28904+    4,              28904+    0,     4);
		API_polar::template xo <    8>(s,    28896+    0, 28896+    8,              28896+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 28896+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           28912+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 28912+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           28916+    0,     4);
		API_polar::template xo <    4>(s,    28912+    0, 28912+    4,              28912+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 28912+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           28920+    0,     8);
		API_polar::template xo <    8>(s,    28912+    0, 28912+    8,              28912+    0,     8);
		API_polar::template xo <   16>(s,    28896+    0, 28896+   16,              28896+    0,    16);
		API_polar::template xo <   32>(s,    28864+    0, 28864+   32,              28864+    0,    32);
		API_polar::template xo <   64>(s,    28800+    0, 28800+   64,              28800+    0,    64);
		API_polar::template xo <  128>(s,    28672+    0, 28672+  128,              28672+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 28672+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template g0 <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template g0 <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           28976+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 28976+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           28984+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 28984+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           28988+    0,     4);
		API_polar::template xo <    4>(s,    28984+    0, 28984+    4,              28984+    0,     4);
		API_polar::template xo <    8>(s,    28976+    0, 28976+    8,              28976+    0,     8);
		API_polar::template xo0<   16>(s,    28960+   16,                           28960+    0,    16);
		API_polar::template xo0<   32>(s,    28928+   32,                           28928+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 28928+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           28992+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 28992+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           29008+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 29008+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           29016+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 29016+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           29020+    0,     4);
		API_polar::template xo <    4>(s,    29016+    0, 29016+    4,              29016+    0,     4);
		API_polar::template xo <    8>(s,    29008+    0, 29008+    8,              29008+    0,     8);
		API_polar::template xo <   16>(s,    28992+    0, 28992+   16,              28992+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 28992+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           29024+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 29024+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           29032+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 29032+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           29036+    0,     4);
		API_polar::template xo <    4>(s,    29032+    0, 29032+    4,              29032+    0,     4);
		API_polar::template xo <    8>(s,    29024+    0, 29024+    8,              29024+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 29024+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           29040+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 29040+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           29044+    0,     4);
		API_polar::template xo <    4>(s,    29040+    0, 29040+    4,              29040+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 29040+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           29048+    0,     8);
		API_polar::template xo <    8>(s,    29040+    0, 29040+    8,              29040+    0,     8);
		API_polar::template xo <   16>(s,    29024+    0, 29024+   16,              29024+    0,    16);
		API_polar::template xo <   32>(s,    28992+    0, 28992+   32,              28992+    0,    32);
		API_polar::template xo <   64>(s,    28928+    0, 28928+   64,              28928+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 28928+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           29056+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 29056+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           29072+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 29072+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           29080+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 29080+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           29084+    0,     4);
		API_polar::template xo <    4>(s,    29080+    0, 29080+    4,              29080+    0,     4);
		API_polar::template xo <    8>(s,    29072+    0, 29072+    8,              29072+    0,     8);
		API_polar::template xo <   16>(s,    29056+    0, 29056+   16,              29056+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 29056+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           29088+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 29088+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           29096+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 29096+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           29100+    0,     4);
		API_polar::template xo <    4>(s,    29096+    0, 29096+    4,              29096+    0,     4);
		API_polar::template xo <    8>(s,    29088+    0, 29088+    8,              29088+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 29088+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           29104+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 29104+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           29108+    0,     4);
		API_polar::template xo <    4>(s,    29104+    0, 29104+    4,              29104+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 29104+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           29112+    0,     8);
		API_polar::template xo <    8>(s,    29104+    0, 29104+    8,              29104+    0,     8);
		API_polar::template xo <   16>(s,    29088+    0, 29088+   16,              29088+    0,    16);
		API_polar::template xo <   32>(s,    29056+    0, 29056+   32,              29056+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 29056+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           29120+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 29120+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           29128+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 29128+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           29132+    0,     4);
		API_polar::template xo <    4>(s,    29128+    0, 29128+    4,              29128+    0,     4);
		API_polar::template xo <    8>(s,    29120+    0, 29120+    8,              29120+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 29120+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           29136+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 29136+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           29140+    0,     4);
		API_polar::template xo <    4>(s,    29136+    0, 29136+    4,              29136+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 29136+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           29144+    0,     8);
		API_polar::template xo <    8>(s,    29136+    0, 29136+    8,              29136+    0,     8);
		API_polar::template xo <   16>(s,    29120+    0, 29120+   16,              29120+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 29120+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           29152+    0,    32);
		API_polar::template xo <   32>(s,    29120+    0, 29120+   32,              29120+    0,    32);
		API_polar::template xo <   64>(s,    29056+    0, 29056+   64,              29056+    0,    64);
		API_polar::template xo <  128>(s,    28928+    0, 28928+  128,              28928+    0,   128);
		API_polar::template xo <  256>(s,    28672+    0, 28672+  256,              28672+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512, 28672+    0, 63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                           29184+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32, 29184+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           29216+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 29216+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           29232+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 29232+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           29240+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 29240+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           29244+    0,     4);
		API_polar::template xo <    4>(s,    29240+    0, 29240+    4,              29240+    0,     4);
		API_polar::template xo <    8>(s,    29232+    0, 29232+    8,              29232+    0,     8);
		API_polar::template xo <   16>(s,    29216+    0, 29216+   16,              29216+    0,    16);
		API_polar::template xo <   32>(s,    29184+    0, 29184+   32,              29184+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 29184+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           29248+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 29248+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           29264+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 29264+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           29272+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 29272+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           29276+    0,     4);
		API_polar::template xo <    4>(s,    29272+    0, 29272+    4,              29272+    0,     4);
		API_polar::template xo <    8>(s,    29264+    0, 29264+    8,              29264+    0,     8);
		API_polar::template xo <   16>(s,    29248+    0, 29248+   16,              29248+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 29248+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           29280+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 29280+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           29288+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 29288+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           29292+    0,     4);
		API_polar::template xo <    4>(s,    29288+    0, 29288+    4,              29288+    0,     4);
		API_polar::template xo <    8>(s,    29280+    0, 29280+    8,              29280+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 29280+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           29296+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 29296+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           29300+    0,     4);
		API_polar::template xo <    4>(s,    29296+    0, 29296+    4,              29296+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 29296+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           29304+    0,     8);
		API_polar::template xo <    8>(s,    29296+    0, 29296+    8,              29296+    0,     8);
		API_polar::template xo <   16>(s,    29280+    0, 29280+   16,              29280+    0,    16);
		API_polar::template xo <   32>(s,    29248+    0, 29248+   32,              29248+    0,    32);
		API_polar::template xo <   64>(s,    29184+    0, 29184+   64,              29184+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 29184+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           29312+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 29312+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           29328+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 29328+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                           29338+    0,     2);
		API_polar::template xo0<    2>(s,    29336+    2,                           29336+    0,     2);
		API_polar::template g  <    4>(s, l, 65520+    0, 65520+    4, 29336+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           29340+    0,     4);
		API_polar::template xo <    4>(s,    29336+    0, 29336+    4,              29336+    0,     4);
		API_polar::template xo <    8>(s,    29328+    0, 29328+    8,              29328+    0,     8);
		API_polar::template xo <   16>(s,    29312+    0, 29312+   16,              29312+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 29312+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           29344+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 29344+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           29352+    0,     8);
		API_polar::template xo <    8>(s,    29344+    0, 29344+    8,              29344+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 29344+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           29360+    0,    16);
		API_polar::template xo <   16>(s,    29344+    0, 29344+   16,              29344+    0,    16);
		API_polar::template xo <   32>(s,    29312+    0, 29312+   32,              29312+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 29312+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           29376+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 29376+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           29380+    0,     4);
		API_polar::template xo <    4>(s,    29376+    0, 29376+    4,              29376+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 29376+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           29384+    0,     8);
		API_polar::template xo <    8>(s,    29376+    0, 29376+    8,              29376+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 29376+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           29392+    0,    16);
		API_polar::template xo <   16>(s,    29376+    0, 29376+   16,              29376+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 29376+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           29408+    0,    32);
		API_polar::template xo <   32>(s,    29376+    0, 29376+   32,              29376+    0,    32);
		API_polar::template xo <   64>(s,    29312+    0, 29312+   64,              29312+    0,    64);
		API_polar::template xo <  128>(s,    29184+    0, 29184+  128,              29184+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 29184+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template g0 <    2>(   l, 65528+    0, 65528+    2,              65528+    4,     2);
		API_polar::template h  <    2>(s, l, 65532+    0,                           29454+    0,     2);
		API_polar::template xo0<    2>(s,    29452+    2,                           29452+    0,     2);
		API_polar::template xo0<    4>(s,    29448+    4,                           29448+    0,     4);
		API_polar::template xo0<    8>(s,    29440+    8,                           29440+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 29440+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           29460+    0,     4);
		API_polar::template xo0<    4>(s,    29456+    4,                           29456+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 29456+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           29464+    0,     8);
		API_polar::template xo <    8>(s,    29456+    0, 29456+    8,              29456+    0,     8);
		API_polar::template xo <   16>(s,    29440+    0, 29440+   16,              29440+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 29440+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           29472+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 29472+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           29476+    0,     4);
		API_polar::template xo <    4>(s,    29472+    0, 29472+    4,              29472+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 29472+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           29480+    0,     8);
		API_polar::template xo <    8>(s,    29472+    0, 29472+    8,              29472+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 29472+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           29488+    0,    16);
		API_polar::template xo <   16>(s,    29472+    0, 29472+   16,              29472+    0,    16);
		API_polar::template xo <   32>(s,    29440+    0, 29440+   32,              29440+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 29440+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           29504+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 29504+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           29508+    0,     4);
		API_polar::template xo <    4>(s,    29504+    0, 29504+    4,              29504+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 29504+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           29512+    0,     8);
		API_polar::template xo <    8>(s,    29504+    0, 29504+    8,              29504+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 29504+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           29520+    0,    16);
		API_polar::template xo <   16>(s,    29504+    0, 29504+   16,              29504+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 29504+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           29536+    0,    32);
		API_polar::template xo <   32>(s,    29504+    0, 29504+   32,              29504+    0,    32);
		API_polar::template xo <   64>(s,    29440+    0, 29440+   64,              29440+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 29440+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           29568+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 29568+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           29572+    0,     4);
		API_polar::template xo <    4>(s,    29568+    0, 29568+    4,              29568+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 29568+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           29576+    0,     8);
		API_polar::template xo <    8>(s,    29568+    0, 29568+    8,              29568+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 29568+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           29584+    0,    16);
		API_polar::template xo <   16>(s,    29568+    0, 29568+   16,              29568+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 29568+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           29600+    0,    32);
		API_polar::template xo <   32>(s,    29568+    0, 29568+   32,              29568+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 29568+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           29632+    0,    64);
		API_polar::template xo <   64>(s,    29568+    0, 29568+   64,              29568+    0,    64);
		API_polar::template xo <  128>(s,    29440+    0, 29440+  128,              29440+    0,   128);
		API_polar::template xo <  256>(s,    29184+    0, 29184+  256,              29184+    0,   256);
		API_polar::template xo <  512>(s,    28672+    0, 28672+  512,              28672+    0,   512);
		API_polar::template g  < 1024>(s, l, 61440+    0, 61440+ 1024, 28672+    0, 61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                           29696+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32, 29696+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           29728+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 29728+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           29744+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 29744+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           29752+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 29752+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           29756+    0,     4);
		API_polar::template xo <    4>(s,    29752+    0, 29752+    4,              29752+    0,     4);
		API_polar::template xo <    8>(s,    29744+    0, 29744+    8,              29744+    0,     8);
		API_polar::template xo <   16>(s,    29728+    0, 29728+   16,              29728+    0,    16);
		API_polar::template xo <   32>(s,    29696+    0, 29696+   32,              29696+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 29696+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template rep<   16>(s, l, 65504+    0,                           29760+    0,    16);
		API_polar::template gr <   16>(s, l, 65472+    0, 65472+   16, 29760+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           29780+    0,     4);
		API_polar::template xo0<    4>(s,    29776+    4,                           29776+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 29776+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           29784+    0,     8);
		API_polar::template xo <    8>(s,    29776+    0, 29776+    8,              29776+    0,     8);
		API_polar::template xo <   16>(s,    29760+    0, 29760+   16,              29760+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 29760+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           29792+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 29792+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           29796+    0,     4);
		API_polar::template xo <    4>(s,    29792+    0, 29792+    4,              29792+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 29792+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           29800+    0,     8);
		API_polar::template xo <    8>(s,    29792+    0, 29792+    8,              29792+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 29792+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           29808+    0,    16);
		API_polar::template xo <   16>(s,    29792+    0, 29792+   16,              29792+    0,    16);
		API_polar::template xo <   32>(s,    29760+    0, 29760+   32,              29760+    0,    32);
		API_polar::template xo <   64>(s,    29696+    0, 29696+   64,              29696+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 29696+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           29832+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 29832+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           29836+    0,     4);
		API_polar::template xo <    4>(s,    29832+    0, 29832+    4,              29832+    0,     4);
		API_polar::template xo0<    8>(s,    29824+    8,                           29824+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 29824+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           29840+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 29840+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           29844+    0,     4);
		API_polar::template xo <    4>(s,    29840+    0, 29840+    4,              29840+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 29840+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           29848+    0,     8);
		API_polar::template xo <    8>(s,    29840+    0, 29840+    8,              29840+    0,     8);
		API_polar::template xo <   16>(s,    29824+    0, 29824+   16,              29824+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 29824+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           29856+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 29856+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           29860+    0,     4);
		API_polar::template xo <    4>(s,    29856+    0, 29856+    4,              29856+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 29856+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           29864+    0,     8);
		API_polar::template xo <    8>(s,    29856+    0, 29856+    8,              29856+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 29856+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           29872+    0,    16);
		API_polar::template xo <   16>(s,    29856+    0, 29856+   16,              29856+    0,    16);
		API_polar::template xo <   32>(s,    29824+    0, 29824+   32,              29824+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 29824+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           29888+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 29888+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           29892+    0,     4);
		API_polar::template xo <    4>(s,    29888+    0, 29888+    4,              29888+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 29888+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           29896+    0,     8);
		API_polar::template xo <    8>(s,    29888+    0, 29888+    8,              29888+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 29888+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           29904+    0,    16);
		API_polar::template xo <   16>(s,    29888+    0, 29888+   16,              29888+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 29888+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           29920+    0,    32);
		API_polar::template xo <   32>(s,    29888+    0, 29888+   32,              29888+    0,    32);
		API_polar::template xo <   64>(s,    29824+    0, 29824+   64,              29824+    0,    64);
		API_polar::template xo <  128>(s,    29696+    0, 29696+  128,              29696+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 29696+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           29952+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 29952+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           29960+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 29960+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           29964+    0,     4);
		API_polar::template xo <    4>(s,    29960+    0, 29960+    4,              29960+    0,     4);
		API_polar::template xo <    8>(s,    29952+    0, 29952+    8,              29952+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 29952+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           29968+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 29968+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           29972+    0,     4);
		API_polar::template xo <    4>(s,    29968+    0, 29968+    4,              29968+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 29968+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           29976+    0,     8);
		API_polar::template xo <    8>(s,    29968+    0, 29968+    8,              29968+    0,     8);
		API_polar::template xo <   16>(s,    29952+    0, 29952+   16,              29952+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 29952+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           29984+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 29984+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           29988+    0,     4);
		API_polar::template xo <    4>(s,    29984+    0, 29984+    4,              29984+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 29984+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           29992+    0,     8);
		API_polar::template xo <    8>(s,    29984+    0, 29984+    8,              29984+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 29984+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           30000+    0,    16);
		API_polar::template xo <   16>(s,    29984+    0, 29984+   16,              29984+    0,    16);
		API_polar::template xo <   32>(s,    29952+    0, 29952+   32,              29952+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 29952+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           30016+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 30016+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           30020+    0,     4);
		API_polar::template xo <    4>(s,    30016+    0, 30016+    4,              30016+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 30016+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           30024+    0,     8);
		API_polar::template xo <    8>(s,    30016+    0, 30016+    8,              30016+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 30016+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           30032+    0,    16);
		API_polar::template xo <   16>(s,    30016+    0, 30016+   16,              30016+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 30016+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           30048+    0,    32);
		API_polar::template xo <   32>(s,    30016+    0, 30016+   32,              30016+    0,    32);
		API_polar::template xo <   64>(s,    29952+    0, 29952+   64,              29952+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 29952+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           30080+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 30080+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           30084+    0,     4);
		API_polar::template xo <    4>(s,    30080+    0, 30080+    4,              30080+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 30080+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           30088+    0,     8);
		API_polar::template xo <    8>(s,    30080+    0, 30080+    8,              30080+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 30080+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           30096+    0,    16);
		API_polar::template xo <   16>(s,    30080+    0, 30080+   16,              30080+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 30080+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           30112+    0,    32);
		API_polar::template xo <   32>(s,    30080+    0, 30080+   32,              30080+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 30080+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           30144+    0,    64);
		API_polar::template xo <   64>(s,    30080+    0, 30080+   64,              30080+    0,    64);
		API_polar::template xo <  128>(s,    29952+    0, 29952+  128,              29952+    0,   128);
		API_polar::template xo <  256>(s,    29696+    0, 29696+  256,              29696+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512, 29696+    0, 63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           30208+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 30208+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           30216+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 30216+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           30220+    0,     4);
		API_polar::template xo <    4>(s,    30216+    0, 30216+    4,              30216+    0,     4);
		API_polar::template xo <    8>(s,    30208+    0, 30208+    8,              30208+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 30208+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           30224+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 30224+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           30228+    0,     4);
		API_polar::template xo <    4>(s,    30224+    0, 30224+    4,              30224+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 30224+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           30232+    0,     8);
		API_polar::template xo <    8>(s,    30224+    0, 30224+    8,              30224+    0,     8);
		API_polar::template xo <   16>(s,    30208+    0, 30208+   16,              30208+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 30208+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           30240+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 30240+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           30244+    0,     4);
		API_polar::template xo <    4>(s,    30240+    0, 30240+    4,              30240+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 30240+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           30248+    0,     8);
		API_polar::template xo <    8>(s,    30240+    0, 30240+    8,              30240+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 30240+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           30256+    0,    16);
		API_polar::template xo <   16>(s,    30240+    0, 30240+   16,              30240+    0,    16);
		API_polar::template xo <   32>(s,    30208+    0, 30208+   32,              30208+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 30208+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           30272+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 30272+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           30276+    0,     4);
		API_polar::template xo <    4>(s,    30272+    0, 30272+    4,              30272+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 30272+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           30280+    0,     8);
		API_polar::template xo <    8>(s,    30272+    0, 30272+    8,              30272+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 30272+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           30288+    0,    16);
		API_polar::template xo <   16>(s,    30272+    0, 30272+   16,              30272+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 30272+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           30304+    0,    32);
		API_polar::template xo <   32>(s,    30272+    0, 30272+   32,              30272+    0,    32);
		API_polar::template xo <   64>(s,    30208+    0, 30208+   64,              30208+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 30208+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           30336+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 30336+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           30340+    0,     4);
		API_polar::template xo <    4>(s,    30336+    0, 30336+    4,              30336+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 30336+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           30344+    0,     8);
		API_polar::template xo <    8>(s,    30336+    0, 30336+    8,              30336+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 30336+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           30352+    0,    16);
		API_polar::template xo <   16>(s,    30336+    0, 30336+   16,              30336+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 30336+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           30368+    0,    32);
		API_polar::template xo <   32>(s,    30336+    0, 30336+   32,              30336+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 30336+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           30400+    0,    64);
		API_polar::template xo <   64>(s,    30336+    0, 30336+   64,              30336+    0,    64);
		API_polar::template xo <  128>(s,    30208+    0, 30208+  128,              30208+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 30208+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           30464+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 30464+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           30468+    0,     4);
		API_polar::template xo <    4>(s,    30464+    0, 30464+    4,              30464+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 30464+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           30472+    0,     8);
		API_polar::template xo <    8>(s,    30464+    0, 30464+    8,              30464+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 30464+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           30480+    0,    16);
		API_polar::template xo <   16>(s,    30464+    0, 30464+   16,              30464+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 30464+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           30496+    0,    32);
		API_polar::template xo <   32>(s,    30464+    0, 30464+   32,              30464+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 30464+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           30528+    0,    64);
		API_polar::template xo <   64>(s,    30464+    0, 30464+   64,              30464+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 30464+    0, 65024+  256,   128);
		API_polar::template spc<  128>(s, l, 65280+    0,                           30592+    0,   128);
		API_polar::template xo <  128>(s,    30464+    0, 30464+  128,              30464+    0,   128);
		API_polar::template xo <  256>(s,    30208+    0, 30208+  256,              30208+    0,   256);
		API_polar::template xo <  512>(s,    29696+    0, 29696+  512,              29696+    0,   512);
		API_polar::template xo < 1024>(s,    28672+    0, 28672+ 1024,              28672+    0,  1024);
		API_polar::template g  < 2048>(s, l, 57344+    0, 57344+ 2048, 28672+    0, 57344+ 4096,  2048);
		API_polar::template f  < 1024>(   l, 61440+    0, 61440+ 1024,              61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template rep<   32>(s, l, 65472+    0,                           30720+    0,    32);
		API_polar::template gr <   32>(s, l, 65408+    0, 65408+   32, 30720+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template g0 <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template g0 <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           30764+    0,     4);
		API_polar::template xo0<    4>(s,    30760+    4,                           30760+    0,     4);
		API_polar::template xo0<    8>(s,    30752+    8,                           30752+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 30752+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           30768+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 30768+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           30772+    0,     4);
		API_polar::template xo <    4>(s,    30768+    0, 30768+    4,              30768+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 30768+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           30776+    0,     8);
		API_polar::template xo <    8>(s,    30768+    0, 30768+    8,              30768+    0,     8);
		API_polar::template xo <   16>(s,    30752+    0, 30752+   16,              30752+    0,    16);
		API_polar::template xo <   32>(s,    30720+    0, 30720+   32,              30720+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 30720+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           30784+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 30784+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           30792+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 30792+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           30796+    0,     4);
		API_polar::template xo <    4>(s,    30792+    0, 30792+    4,              30792+    0,     4);
		API_polar::template xo <    8>(s,    30784+    0, 30784+    8,              30784+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 30784+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           30800+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 30800+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           30804+    0,     4);
		API_polar::template xo <    4>(s,    30800+    0, 30800+    4,              30800+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 30800+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           30808+    0,     8);
		API_polar::template xo <    8>(s,    30800+    0, 30800+    8,              30800+    0,     8);
		API_polar::template xo <   16>(s,    30784+    0, 30784+   16,              30784+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 30784+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           30816+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 30816+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           30820+    0,     4);
		API_polar::template xo <    4>(s,    30816+    0, 30816+    4,              30816+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 30816+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           30824+    0,     8);
		API_polar::template xo <    8>(s,    30816+    0, 30816+    8,              30816+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 30816+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           30832+    0,    16);
		API_polar::template xo <   16>(s,    30816+    0, 30816+   16,              30816+    0,    16);
		API_polar::template xo <   32>(s,    30784+    0, 30784+   32,              30784+    0,    32);
		API_polar::template xo <   64>(s,    30720+    0, 30720+   64,              30720+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 30720+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           30848+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 30848+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           30856+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 30856+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           30860+    0,     4);
		API_polar::template xo <    4>(s,    30856+    0, 30856+    4,              30856+    0,     4);
		API_polar::template xo <    8>(s,    30848+    0, 30848+    8,              30848+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 30848+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           30864+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 30864+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           30868+    0,     4);
		API_polar::template xo <    4>(s,    30864+    0, 30864+    4,              30864+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 30864+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           30872+    0,     8);
		API_polar::template xo <    8>(s,    30864+    0, 30864+    8,              30864+    0,     8);
		API_polar::template xo <   16>(s,    30848+    0, 30848+   16,              30848+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 30848+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           30880+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 30880+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           30884+    0,     4);
		API_polar::template xo <    4>(s,    30880+    0, 30880+    4,              30880+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 30880+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           30888+    0,     8);
		API_polar::template xo <    8>(s,    30880+    0, 30880+    8,              30880+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 30880+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           30896+    0,    16);
		API_polar::template xo <   16>(s,    30880+    0, 30880+   16,              30880+    0,    16);
		API_polar::template xo <   32>(s,    30848+    0, 30848+   32,              30848+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 30848+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           30912+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 30912+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           30916+    0,     4);
		API_polar::template xo <    4>(s,    30912+    0, 30912+    4,              30912+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 30912+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           30920+    0,     8);
		API_polar::template xo <    8>(s,    30912+    0, 30912+    8,              30912+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 30912+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           30928+    0,    16);
		API_polar::template xo <   16>(s,    30912+    0, 30912+   16,              30912+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 30912+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           30944+    0,    32);
		API_polar::template xo <   32>(s,    30912+    0, 30912+   32,              30912+    0,    32);
		API_polar::template xo <   64>(s,    30848+    0, 30848+   64,              30848+    0,    64);
		API_polar::template xo <  128>(s,    30720+    0, 30720+  128,              30720+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 30720+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           30976+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 30976+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           30984+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 30984+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           30988+    0,     4);
		API_polar::template xo <    4>(s,    30984+    0, 30984+    4,              30984+    0,     4);
		API_polar::template xo <    8>(s,    30976+    0, 30976+    8,              30976+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 30976+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           30992+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 30992+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           30996+    0,     4);
		API_polar::template xo <    4>(s,    30992+    0, 30992+    4,              30992+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 30992+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           31000+    0,     8);
		API_polar::template xo <    8>(s,    30992+    0, 30992+    8,              30992+    0,     8);
		API_polar::template xo <   16>(s,    30976+    0, 30976+   16,              30976+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 30976+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           31008+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 31008+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           31012+    0,     4);
		API_polar::template xo <    4>(s,    31008+    0, 31008+    4,              31008+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 31008+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           31016+    0,     8);
		API_polar::template xo <    8>(s,    31008+    0, 31008+    8,              31008+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 31008+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           31024+    0,    16);
		API_polar::template xo <   16>(s,    31008+    0, 31008+   16,              31008+    0,    16);
		API_polar::template xo <   32>(s,    30976+    0, 30976+   32,              30976+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 30976+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           31040+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 31040+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           31044+    0,     4);
		API_polar::template xo <    4>(s,    31040+    0, 31040+    4,              31040+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 31040+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           31048+    0,     8);
		API_polar::template xo <    8>(s,    31040+    0, 31040+    8,              31040+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 31040+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           31056+    0,    16);
		API_polar::template xo <   16>(s,    31040+    0, 31040+   16,              31040+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 31040+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           31072+    0,    32);
		API_polar::template xo <   32>(s,    31040+    0, 31040+   32,              31040+    0,    32);
		API_polar::template xo <   64>(s,    30976+    0, 30976+   64,              30976+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 30976+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           31104+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 31104+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           31108+    0,     4);
		API_polar::template xo <    4>(s,    31104+    0, 31104+    4,              31104+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 31104+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           31112+    0,     8);
		API_polar::template xo <    8>(s,    31104+    0, 31104+    8,              31104+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 31104+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           31120+    0,    16);
		API_polar::template xo <   16>(s,    31104+    0, 31104+   16,              31104+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 31104+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           31136+    0,    32);
		API_polar::template xo <   32>(s,    31104+    0, 31104+   32,              31104+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 31104+    0, 65280+  128,    64);
		API_polar::template spc<   64>(s, l, 65408+    0,                           31168+    0,    64);
		API_polar::template xo <   64>(s,    31104+    0, 31104+   64,              31104+    0,    64);
		API_polar::template xo <  128>(s,    30976+    0, 30976+  128,              30976+    0,   128);
		API_polar::template xo <  256>(s,    30720+    0, 30720+  256,              30720+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512, 30720+    0, 63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           31232+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 31232+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           31240+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 31240+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           31244+    0,     4);
		API_polar::template xo <    4>(s,    31240+    0, 31240+    4,              31240+    0,     4);
		API_polar::template xo <    8>(s,    31232+    0, 31232+    8,              31232+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 31232+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           31248+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 31248+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           31252+    0,     4);
		API_polar::template xo <    4>(s,    31248+    0, 31248+    4,              31248+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 31248+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           31256+    0,     8);
		API_polar::template xo <    8>(s,    31248+    0, 31248+    8,              31248+    0,     8);
		API_polar::template xo <   16>(s,    31232+    0, 31232+   16,              31232+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 31232+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           31264+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 31264+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           31268+    0,     4);
		API_polar::template xo <    4>(s,    31264+    0, 31264+    4,              31264+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 31264+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           31272+    0,     8);
		API_polar::template xo <    8>(s,    31264+    0, 31264+    8,              31264+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 31264+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           31280+    0,    16);
		API_polar::template xo <   16>(s,    31264+    0, 31264+   16,              31264+    0,    16);
		API_polar::template xo <   32>(s,    31232+    0, 31232+   32,              31232+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 31232+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           31296+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 31296+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           31300+    0,     4);
		API_polar::template xo <    4>(s,    31296+    0, 31296+    4,              31296+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 31296+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           31304+    0,     8);
		API_polar::template xo <    8>(s,    31296+    0, 31296+    8,              31296+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 31296+    0, 65472+   32,    16);
		API_polar::template spc<   16>(s, l, 65504+    0,                           31312+    0,    16);
		API_polar::template xo <   16>(s,    31296+    0, 31296+   16,              31296+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 31296+    0, 65408+   64,    32);
		API_polar::template spc<   32>(s, l, 65472+    0,                           31328+    0,    32);
		API_polar::template xo <   32>(s,    31296+    0, 31296+   32,              31296+    0,    32);
		API_polar::template xo <   64>(s,    31232+    0, 31232+   64,              31232+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 31232+    0, 65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           31360+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 31360+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           31364+    0,     4);
		API_polar::template xo <    4>(s,    31360+    0, 31360+    4,              31360+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 31360+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           31368+    0,     8);
		API_polar::template xo <    8>(s,    31360+    0, 31360+    8,              31360+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 31360+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                           31376+    0,    16);
		API_polar::template xo <   16>(s,    31360+    0, 31360+   16,              31360+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 31360+    0, 65408+   64,    32);
		API_polar::template h  <   32>(s, l, 65472+    0,                           31392+    0,    32);
		API_polar::template xo <   32>(s,    31360+    0, 31360+   32,              31360+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 31360+    0, 65280+  128,    64);
		API_polar::template h  <   64>(s, l, 65408+    0,                           31424+    0,    64);
		API_polar::template xo <   64>(s,    31360+    0, 31360+   64,              31360+    0,    64);
		API_polar::template xo <  128>(s,    31232+    0, 31232+  128,              31232+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 31232+    0, 64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           31488+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 31488+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           31492+    0,     4);
		API_polar::template xo <    4>(s,    31488+    0, 31488+    4,              31488+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 31488+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                           31496+    0,     8);
		API_polar::template xo <    8>(s,    31488+    0, 31488+    8,              31488+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 31488+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                           31504+    0,    16);
		API_polar::template xo <   16>(s,    31488+    0, 31488+   16,              31488+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 31488+    0, 65408+   64,    32);
		API_polar::template h  <   32>(s, l, 65472+    0,                           31520+    0,    32);
		API_polar::template xo <   32>(s,    31488+    0, 31488+   32,              31488+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 31488+    0, 65280+  128,    64);
		API_polar::template h  <   64>(s, l, 65408+    0,                           31552+    0,    64);
		API_polar::template xo <   64>(s,    31488+    0, 31488+   64,              31488+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 31488+    0, 65024+  256,   128);
		API_polar::template h  <  128>(s, l, 65280+    0,                           31616+    0,   128);
		API_polar::template xo <  128>(s,    31488+    0, 31488+  128,              31488+    0,   128);
		API_polar::template xo <  256>(s,    31232+    0, 31232+  256,              31232+    0,   256);
		API_polar::template xo <  512>(s,    30720+    0, 30720+  512,              30720+    0,   512);
		API_polar::template g  < 1024>(s, l, 61440+    0, 61440+ 1024, 30720+    0, 61440+ 2048,  1024);
		API_polar::template f  <  512>(   l, 63488+    0, 63488+  512,              63488+ 1024,   512);
		API_polar::template f  <  256>(   l, 64512+    0, 64512+  256,              64512+  512,   256);
		API_polar::template f  <  128>(   l, 65024+    0, 65024+  128,              65024+  256,   128);
		API_polar::template f  <   64>(   l, 65280+    0, 65280+   64,              65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template rep<    8>(s, l, 65520+    0,                           31744+    0,     8);
		API_polar::template gr <    8>(s, l, 65504+    0, 65504+    8, 31744+    0, 65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           31752+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 31752+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           31756+    0,     4);
		API_polar::template xo <    4>(s,    31752+    0, 31752+    4,              31752+    0,     4);
		API_polar::template xo <    8>(s,    31744+    0, 31744+    8,              31744+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 31744+    0, 65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           31760+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 31760+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           31764+    0,     4);
		API_polar::template xo <    4>(s,    31760+    0, 31760+    4,              31760+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 31760+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           31768+    0,     8);
		API_polar::template xo <    8>(s,    31760+    0, 31760+    8,              31760+    0,     8);
		API_polar::template xo <   16>(s,    31744+    0, 31744+   16,              31744+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 31744+    0, 65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           31776+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 31776+    0, 65520+    8,     4);
		API_polar::template spc<    4>(s, l, 65528+    0,                           31780+    0,     4);
		API_polar::template xo <    4>(s,    31776+    0, 31776+    4,              31776+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 31776+    0, 65504+   16,     8);
		API_polar::template spc<    8>(s, l, 65520+    0,                           31784+    0,     8);
		API_polar::template xo <    8>(s,    31776+    0, 31776+    8,              31776+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 31776+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                           31792+    0,    16);
		API_polar::template xo <   16>(s,    31776+    0, 31776+   16,              31776+    0,    16);
		API_polar::template xo <   32>(s,    31744+    0, 31744+   32,              31744+    0,    32);
		API_polar::template g  <   64>(s, l, 65280+    0, 65280+   64, 31744+    0, 65280+  128,    64);
		API_polar::template f  <   32>(   l, 65408+    0, 65408+   32,              65408+   64,    32);
		API_polar::template f  <   16>(   l, 65472+    0, 65472+   16,              65472+   32,    16);
		API_polar::template f  <    8>(   l, 65504+    0, 65504+    8,              65504+   16,     8);
		API_polar::template f  <    4>(   l, 65520+    0, 65520+    4,              65520+    8,     4);
		API_polar::template rep<    4>(s, l, 65528+    0,                           31808+    0,     4);
		API_polar::template gr <    4>(s, l, 65520+    0, 65520+    4, 31808+    0, 65520+    8,     4);
		API_polar::template h  <    4>(s, l, 65528+    0,                           31812+    0,     4);
		API_polar::template xo <    4>(s,    31808+    0, 31808+    4,              31808+    0,     4);
		API_polar::template g  <    8>(s, l, 65504+    0, 65504+    8, 31808+    0, 65504+   16,     8);
		API_polar::template h  <    8>(s, l, 65520+    0,                           31816+    0,     8);
		API_polar::template xo <    8>(s,    31808+    0, 31808+    8,              31808+    0,     8);
		API_polar::template g  <   16>(s, l, 65472+    0, 65472+   16, 31808+    0, 65472+   32,    16);
		API_polar::template h  <   16>(s, l, 65504+    0,                           31824+    0,    16);
		API_polar::template xo <   16>(s,    31808+    0, 31808+   16,              31808+    0,    16);
		API_polar::template g  <   32>(s, l, 65408+    0, 65408+   32, 31808+    0, 65408+   64,    32);
		API_polar::template h  <   32>(s, l, 65472+    0,                           31840+    0,    32);
		API_polar::template xo <   32>(s,    31808+    0, 31808+   32,              31808+    0,    32);
		API_polar::template xo <   64>(s,    31744+    0, 31744+   64,              31744+    0,    64);
		API_polar::template g  <  128>(s, l, 65024+    0, 65024+  128, 31744+    0, 65024+  256,   128);
		API_polar::template spc<  128>(s, l, 65280+    0,                           31872+    0,   128);
		API_polar::template xo <  128>(s,    31744+    0, 31744+  128,              31744+    0,   128);
		API_polar::template g  <  256>(s, l, 64512+    0, 64512+  256, 31744+    0, 64512+  512,   256);
		API_polar::template spc<  256>(s, l, 65024+    0,                           32000+    0,   256);
		API_polar::template xo <  256>(s,    31744+    0, 31744+  256,              31744+    0,   256);
		API_polar::template g  <  512>(s, l, 63488+    0, 63488+  512, 31744+    0, 63488+ 1024,   512);
		API_polar::template spc<  512>(s, l, 64512+    0,                           32256+    0,   512);
		API_polar::template xo <  512>(s,    31744+    0, 31744+  512,              31744+    0,   512);
		API_polar::template xo < 1024>(s,    30720+    0, 30720+ 1024,              30720+    0,  1024);
		API_polar::template xo < 2048>(s,    28672+    0, 28672+ 2048,              28672+    0,  2048);
		API_polar::template xo < 4096>(s,    24576+    0, 24576+ 4096,              24576+    0,  4096);
		API_polar::template xo < 8192>(s,    16384+    0, 16384+ 8192,              16384+    0,  8192);
		API_polar::template xo <16384>(s,        0+    0,     0+16384,                  0+    0, 16384);
	}
};
}
}
#endif
